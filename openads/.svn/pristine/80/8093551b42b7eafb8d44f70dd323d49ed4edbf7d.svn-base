--
-- PostgreSQL database dump
--

-- Dumped from database version 10.23 (Ubuntu 10.23-0ubuntu0.18.04.2)
-- Dumped by pg_dump version 10.23 (Ubuntu 10.23-0ubuntu0.18.04.2)

-- SET statement_timeout = 0;
-- SET lock_timeout = 0;
-- SET idle_in_transaction_session_timeout = 0;
-- SET client_encoding = 'UTF8';
-- SET standard_conforming_strings = on;
-- SELECT pg_catalog.set_config('search_path', '', false);
-- SET check_function_bodies = false;
-- SET xmloption = content;
-- SET client_min_messages = warning;
-- SET row_security = off;

--
-- Data for Name: om_requete; Type: TABLE DATA; Schema: openads; Owner: postgres
--

INSERT INTO om_requete (om_requete, code, libelle, description, requete, merge_fields, type, classe, methode) VALUES (18, 'aucune', 'Aucune REQUÊTE', NULL, '
SELECT
    '''' as aucune_valeur

FROM
    &DB_PREFIXEom_collectivite
', '[aucune_valeur]', 'sql', NULL, NULL);
INSERT INTO om_requete (om_requete, code, libelle, description, requete, merge_fields, type, classe, methode) VALUES (31, 'req_bordereau', 'Requête pour le bordereau', NULL, 'SELECT CURRENT_DATE as date_jour
             ,num_bordereau as num_bordereau
             ,libelle as libelle
             ,TO_CHAR(envoi,''TMDay DD TMMonth YYYY'') as envoi
        FROM &DB_PREFIXEnum_bordereau
        WHERE num_bordereau = &idx', '[date_jour], [libelle], [num_bordereau], [envoi]', 'sql', NULL, NULL);
INSERT INTO om_requete (om_requete, code, libelle, description, requete, merge_fields, type, classe, methode) VALUES (7, 'dossier', 'Récapitulatif du dossier d''instruction / dossier', NULL, '    
SELECT

    -- Données générales du dossier d''instruction
    dossier.dossier_libelle as libelle_dossier,
    dossier.dossier as code_barres_dossier,
    etat.libelle as etat_dossier,
    dossier_autorisation.dossier_autorisation_libelle as libelle_da,

    dossier_autorisation_type_detaille.code as code_datd,
    dossier_autorisation_type_detaille.libelle as libelle_datd,
    dossier_autorisation_type.code as code_dat,
    dossier_autorisation_type.libelle as libelle_dat,
    dossier_instruction_type.code as code_dit,
    dossier_instruction_type.libelle as libelle_dit,
    dossier.delai as delai_dossier,
    replace(dossier.terrain_references_cadastrales, '';'', '' '') as terrain_references_cadastrales_dossier,

    avis_decision.libelle as libelle_avis_decision,

    -- Données contentieux du dossier d''instruction
    dossier.autorisation_contestee as autorisation_contestee,
    to_char(dossier.date_cloture_instruction, ''DD/MM/YYYY'') as date_cloture_instruction_dossier,
    to_char(dossier.date_premiere_visite, ''DD/MM/YYYY'') as date_premiere_visite_dossier,
    to_char(dossier.date_derniere_visite, ''DD/MM/YYYY'') as date_derniere_visite_dossier,
    to_char(dossier.date_contradictoire, ''DD/MM/YYYY'') as date_contradictoire_dossier,
    to_char(dossier.date_retour_contradictoire, ''DD/MM/YYYY'') as date_retour_contradictoire_dossier,
    to_char(dossier.date_ait, ''DD/MM/YYYY'') as date_ait_dossier,
    to_char(dossier.date_transmission_parquet, ''DD/MM/YYYY'') as date_transmission_parquet_dossier,

    -- Coordonnées de l''instructeur
    instructeur.nom as nom_instructeur,
    instructeur.telephone as telephone_instructeur,
    division.code as division_instructeur,
    om_utilisateur.email as email_instructeur,

    -- Coordonnées de l''instructeur 2
    instructeur_2.nom as nom_instructeur_2,
    instructeur_2.telephone as telephone_instructeur_2,
    division_2.code as division_instructeur_2,
    om_utilisateur_2.email as email_instructeur_2,

    -- Noms des signataires
    division.chef as division_chef,
    direction.chef as direction_chef,
    direction.libelle as libelle_direction,
    direction.description as description_direction,

    -- Adresse du terrain du dossier d''instruction
    dossier.terrain_adresse_voie_numero as terrain_adresse_voie_numero_dossier,&DB_PREFIXEadresse(dossier.terrain_adresse_voie_numero::text, dossier.terrain_adresse_voie::text, ''''::text, dossier.terrain_adresse_lieu_dit::text, dossier.terrain_adresse_bp::text, dossier.terrain_adresse_code_postal::text, dossier.terrain_adresse_localite::text, dossier.terrain_adresse_cedex::text) as adresse_terrain_sdl,&DB_PREFIXEadresse(dossier.terrain_adresse_voie_numero::text, dossier.terrain_adresse_voie::text, ''''::text, dossier.terrain_adresse_lieu_dit::text, dossier.terrain_adresse_bp::text, dossier.terrain_adresse_code_postal::text, dossier.terrain_adresse_localite::text, dossier.terrain_adresse_cedex::text, ''''::text, '' ''::text) as adresse_terrain,
    dossier.terrain_adresse_voie as terrain_adresse_voie_dossier,
    dossier.terrain_adresse_lieu_dit as terrain_adresse_lieu_dit_dossier,
    CASE 
        WHEN dossier.terrain_adresse_bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', dossier.terrain_adresse_bp)
    END as terrain_adresse_bp_dossier,
    dossier.terrain_adresse_code_postal as terrain_adresse_code_postal_dossier,
    dossier.terrain_adresse_localite as terrain_adresse_localite_dossier,
    CASE 
        WHEN dossier.terrain_adresse_cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', dossier.terrain_adresse_cedex)
    END as terrain_adresse_cedex_dossier,
    arrondissement.libelle as libelle_arrondissement,

    -- Nom et prénom de l''architecte
    CONCAT(architecte.prenom||'' '', architecte.nom) as architecte,

    --Taxe d''aménagement du dossier d''instruction
    CASE
        WHEN tax_secteur = 1 THEN taxe_amenagement.tx_comm_secteur_1
        WHEN tax_secteur = 2 THEN taxe_amenagement.tx_comm_secteur_2
        WHEN tax_secteur = 3 THEN taxe_amenagement.tx_comm_secteur_3
        WHEN tax_secteur = 4 THEN taxe_amenagement.tx_comm_secteur_4
        WHEN tax_secteur = 5 THEN taxe_amenagement.tx_comm_secteur_5
        WHEN tax_secteur = 6 THEN taxe_amenagement.tx_comm_secteur_6
        WHEN tax_secteur = 7 THEN taxe_amenagement.tx_comm_secteur_7
        WHEN tax_secteur = 8 THEN taxe_amenagement.tx_comm_secteur_8
        WHEN tax_secteur = 9 THEN taxe_amenagement.tx_comm_secteur_9
        WHEN tax_secteur = 10 THEN taxe_amenagement.tx_comm_secteur_10
        WHEN tax_secteur = 11 THEN taxe_amenagement.tx_comm_secteur_11
        WHEN tax_secteur = 12 THEN taxe_amenagement.tx_comm_secteur_12
        WHEN tax_secteur = 13 THEN taxe_amenagement.tx_comm_secteur_13
        WHEN tax_secteur = 14 THEN taxe_amenagement.tx_comm_secteur_14
        WHEN tax_secteur = 15 THEN taxe_amenagement.tx_comm_secteur_15
        WHEN tax_secteur = 16 THEN taxe_amenagement.tx_comm_secteur_16
        WHEN tax_secteur = 17 THEN taxe_amenagement.tx_comm_secteur_17
        WHEN tax_secteur = 18 THEN taxe_amenagement.tx_comm_secteur_18
        WHEN tax_secteur = 19 THEN taxe_amenagement.tx_comm_secteur_19
        WHEN tax_secteur = 20 THEN taxe_amenagement.tx_comm_secteur_20
    END as tax_taux_secteur,

    taxe_amenagement.tx_comm_secteur_1 as tax_taux_secteur_1,
    taxe_amenagement.tx_comm_secteur_2 as tax_taux_secteur_2,
    taxe_amenagement.tx_comm_secteur_3 as tax_taux_secteur_3,
    taxe_amenagement.tx_comm_secteur_4 as tax_taux_secteur_4,
    taxe_amenagement.tx_comm_secteur_5 as tax_taux_secteur_5,
    taxe_amenagement.tx_comm_secteur_6 as tax_taux_secteur_6,
    taxe_amenagement.tx_comm_secteur_7 as tax_taux_secteur_7,
    taxe_amenagement.tx_comm_secteur_8 as tax_taux_secteur_8,
    taxe_amenagement.tx_comm_secteur_9 as tax_taux_secteur_9,
    taxe_amenagement.tx_comm_secteur_10 as tax_taux_secteur_10,
    taxe_amenagement.tx_comm_secteur_11 as tax_taux_secteur_11,
    taxe_amenagement.tx_comm_secteur_12 as tax_taux_secteur_12,
    taxe_amenagement.tx_comm_secteur_13 as tax_taux_secteur_13,
    taxe_amenagement.tx_comm_secteur_14 as tax_taux_secteur_14,
    taxe_amenagement.tx_comm_secteur_15 as tax_taux_secteur_15,
    taxe_amenagement.tx_comm_secteur_16 as tax_taux_secteur_16,
    taxe_amenagement.tx_comm_secteur_17 as tax_taux_secteur_17,
    taxe_amenagement.tx_comm_secteur_18 as tax_taux_secteur_18,
    taxe_amenagement.tx_comm_secteur_19 as tax_taux_secteur_19,
    taxe_amenagement.tx_comm_secteur_20 as tax_taux_secteur_20,
    
    CASE WHEN taxe_amenagement.en_ile_de_france IS NULL
        OR taxe_amenagement.en_ile_de_france IS FALSE
        THEN ''Non''
        ELSE ''Oui''
    END as tax_en_ile_de_france,
    taxe_amenagement.val_forf_surf_cstr as tax_val_forf_surf_cstr,
    taxe_amenagement.val_forf_empl_tente_carav_rml as tax_val_forf_empl_tente_carav_rml,
    taxe_amenagement.val_forf_empl_hll as tax_val_forf_empl_hll,
    taxe_amenagement.val_forf_surf_piscine as tax_val_forf_surf_piscine,
    taxe_amenagement.val_forf_nb_eolienne as tax_val_forf_nb_eolienne,
    taxe_amenagement.val_forf_surf_pann_photo as tax_val_forf_surf_pann_photo,
    taxe_amenagement.val_forf_nb_parking_ext as tax_val_forf_nb_parking_ext,
    taxe_amenagement.tx_depart  as tax_tx_depart,
    taxe_amenagement.tx_reg as tax_tx_reg,
    taxe_amenagement.tx_exo_facul_1_reg as tax_tx_exo_facul_1_reg,
    taxe_amenagement.tx_exo_facul_2_reg as tax_tx_exo_facul_2_reg,
    taxe_amenagement.tx_exo_facul_3_reg as tax_tx_exo_facul_3_reg,
    taxe_amenagement.tx_exo_facul_4_reg as tax_tx_exo_facul_4_reg,
    taxe_amenagement.tx_exo_facul_5_reg as tax_tx_exo_facul_5_reg,
    taxe_amenagement.tx_exo_facul_6_reg as tax_tx_exo_facul_6_reg,
    taxe_amenagement.tx_exo_facul_7_reg as tax_tx_exo_facul_7_reg,
    taxe_amenagement.tx_exo_facul_8_reg as tax_tx_exo_facul_8_reg,
    taxe_amenagement.tx_exo_facul_9_reg as tax_tx_exo_facul_9_reg,
    taxe_amenagement.tx_exo_facul_1_depart  as tax_tx_exo_facul_1_depart,
    taxe_amenagement.tx_exo_facul_2_depart  as tax_tx_exo_facul_2_depart,
    taxe_amenagement.tx_exo_facul_3_depart  as tax_tx_exo_facul_3_depart,
    taxe_amenagement.tx_exo_facul_4_depart  as tax_tx_exo_facul_4_depart,
    taxe_amenagement.tx_exo_facul_5_depart  as tax_tx_exo_facul_5_depart,
    taxe_amenagement.tx_exo_facul_6_depart  as tax_tx_exo_facul_6_depart,
    taxe_amenagement.tx_exo_facul_7_depart  as tax_tx_exo_facul_7_depart,
    taxe_amenagement.tx_exo_facul_8_depart  as tax_tx_exo_facul_8_depart,
    taxe_amenagement.tx_exo_facul_9_depart  as tax_tx_exo_facul_9_depart,
    taxe_amenagement.tx_exo_facul_1_comm as tax_tx_exo_facul_1_comm,
    taxe_amenagement.tx_exo_facul_2_comm as tax_tx_exo_facul_2_comm,
    taxe_amenagement.tx_exo_facul_3_comm as tax_tx_exo_facul_3_comm,
    taxe_amenagement.tx_exo_facul_4_comm as tax_tx_exo_facul_4_comm,
    taxe_amenagement.tx_exo_facul_5_comm as tax_tx_exo_facul_5_comm,
    taxe_amenagement.tx_exo_facul_6_comm as tax_tx_exo_facul_6_comm,
    taxe_amenagement.tx_exo_facul_7_comm as tax_tx_exo_facul_7_comm,
    taxe_amenagement.tx_exo_facul_8_comm as tax_tx_exo_facul_8_comm,
    taxe_amenagement.tx_exo_facul_9_comm as tax_tx_exo_facul_9_comm,
    taxe_amenagement.tx_rap as tax_tx_rap,

    dossier.tax_mtn_rap as tax_montant_rap,
    CONCAT_WS('' '', ''Secteur'', dossier.tax_secteur) as tax_secteur,
    dossier.tax_secteur as tax_numero_secteur,
    dossier.tax_mtn_part_commu as tax_montant_part_communale,
    dossier.tax_mtn_part_depart as tax_montant_part_departementale,
    dossier.tax_mtn_part_reg as tax_montant_part_regionale,
    dossier.tax_mtn_total as tax_montant_total,

    --Coordonnées du pétitionnaire principal

    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier'' OR petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_nom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
        THEN petitionnaire_principal.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
            END
    END as nom_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier'' OR petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_nom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_principal.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_principal.personne_morale_denomination
    END as denomination_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_principal.personne_morale_siret
    END as siret_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_principal.personne_morale_categorie_juridique
    END as categorie_juridique_petitionnaire_principal,
    petitionnaire_principal.numero as numero_petitionnaire_principal,&DB_PREFIXEadresse(petitionnaire_principal.numero::text, petitionnaire_principal.voie::text, petitionnaire_principal.complement::text, petitionnaire_principal.lieu_dit::text, petitionnaire_principal.bp::text, petitionnaire_principal.code_postal::text, petitionnaire_principal.localite::text, petitionnaire_principal.cedex::text, petitionnaire_principal.pays::text) as adresse_petitionnaire_principal_sdl,&DB_PREFIXEadresse(petitionnaire_principal.numero::text, petitionnaire_principal.voie::text, petitionnaire_principal.complement::text, petitionnaire_principal.lieu_dit::text, petitionnaire_principal.bp::text, petitionnaire_principal.code_postal::text, petitionnaire_principal.localite::text, petitionnaire_principal.cedex::text, petitionnaire_principal.pays::text, '' ''::text) as adresse_petitionnaire_principal,
    petitionnaire_principal.voie as voie_petitionnaire_principal,
    petitionnaire_principal.complement as complement_petitionnaire_principal,
    petitionnaire_principal.lieu_dit as lieu_dit_petitionnaire_principal,
    CASE 
        WHEN petitionnaire_principal.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_principal.bp)
    END as bp_petitionnaire_principal,
    petitionnaire_principal.code_postal as code_postal_petitionnaire_principal,
    petitionnaire_principal.localite as localite_petitionnaire_principal,
    CASE 
        WHEN petitionnaire_principal.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_principal.cedex)
    END as cedex_petitionnaire_principal,
    petitionnaire_principal.pays as pays_petitionnaire_principal,
    petitionnaire_principal.division_territoriale as division_territoriale_petitionnaire_principal,

    --Coordonnées du pétitionnaire 1

    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_1_civilite.libelle, petitionnaire_1.particulier_nom, petitionnaire_1.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_1.personne_morale_raison_sociale, petitionnaire_1.personne_morale_denomination, ''représenté(e) par'', petitionnaire_1_civilite.libelle, petitionnaire_1.personne_morale_nom, petitionnaire_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_1.personne_morale_raison_sociale, '' '', petitionnaire_1.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier'' OR petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_nom
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL
                THEN petitionnaire_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_1_civilite.libelle, petitionnaire_1.particulier_nom, petitionnaire_1.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_1,
    CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_1.personne_morale_raison_sociale, petitionnaire_1.personne_morale_denomination, ''représenté(e) par'', petitionnaire_1_civilite.libelle, petitionnaire_1.personne_morale_nom, petitionnaire_1.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_1.personne_morale_raison_sociale, '' '', petitionnaire_1.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL
        THEN petitionnaire_1.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_1.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_1_civilite.libelle, petitionnaire_1.particulier_nom, petitionnaire_1.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_1.personne_morale_raison_sociale, petitionnaire_1.personne_morale_denomination, ''représenté(e) par'', petitionnaire_1_civilite.libelle, petitionnaire_1.personne_morale_nom, petitionnaire_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_1.personne_morale_raison_sociale, '' '', petitionnaire_1.personne_morale_denomination))
            END
    END as nom_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier'' OR petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_1_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_nom
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL
                THEN petitionnaire_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_1.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_1.personne_morale_denomination
    END as denomination_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_1.personne_morale_siret
    END as siret_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_1.personne_morale_categorie_juridique
    END as categorie_juridique_petitionnaire_1,
    petitionnaire_1.numero as numero_petitionnaire_1,&DB_PREFIXEadresse(petitionnaire_1.numero::text, petitionnaire_1.voie::text, petitionnaire_1.complement::text, petitionnaire_1.lieu_dit::text, petitionnaire_1.bp::text, petitionnaire_1.code_postal::text, petitionnaire_1.localite::text, petitionnaire_1.cedex::text, petitionnaire_1.pays::text) as adresse_petitionnaire_1_sdl,&DB_PREFIXEadresse(petitionnaire_1.numero::text, petitionnaire_1.voie::text, petitionnaire_1.complement::text, petitionnaire_1.lieu_dit::text, petitionnaire_1.bp::text, petitionnaire_1.code_postal::text, petitionnaire_1.localite::text, petitionnaire_1.cedex::text, petitionnaire_1.pays::text, '' ''::text) as adresse_petitionnaire_1,
    petitionnaire_1.voie as voie_petitionnaire_1,
    petitionnaire_1.complement as complement_petitionnaire_1,
    petitionnaire_1.lieu_dit as lieu_dit_petitionnaire_1,
    CASE 
        WHEN petitionnaire_1.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_1.bp)
    END as bp_petitionnaire_1,
    petitionnaire_1.code_postal as code_postal_petitionnaire_1,
    petitionnaire_1.localite as localite_petitionnaire_1,
    CASE 
        WHEN petitionnaire_1.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_1.cedex)
    END as cedex_petitionnaire_1,
    petitionnaire_1.pays as pays_petitionnaire_1,
    petitionnaire_1.division_territoriale as division_territoriale_petitionnaire_1,

    --Coordonnées du pétitionnaire 2    

    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_2_civilite.libelle, petitionnaire_2.particulier_nom, petitionnaire_2.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_2.personne_morale_raison_sociale, petitionnaire_2.personne_morale_denomination, ''représenté(e) par'', petitionnaire_2_civilite.libelle, petitionnaire_2.personne_morale_nom, petitionnaire_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_2.personne_morale_raison_sociale, '' '', petitionnaire_2.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier'' OR petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_nom
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL
                THEN petitionnaire_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_2_civilite.libelle, petitionnaire_2.particulier_nom, petitionnaire_2.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_nom
        ELSE ''''

    END as nom_qualite_part_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_2,
    CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_2.personne_morale_raison_sociale, petitionnaire_2.personne_morale_denomination, ''représenté(e) par'', petitionnaire_2_civilite.libelle, petitionnaire_2.personne_morale_nom, petitionnaire_2.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_2.personne_morale_raison_sociale, '' '', petitionnaire_2.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL
        THEN petitionnaire_2.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_2.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_2_civilite.libelle, petitionnaire_2.particulier_nom, petitionnaire_2.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_2.personne_morale_raison_sociale, petitionnaire_2.personne_morale_denomination, ''représenté(e) par'', petitionnaire_2_civilite.libelle, petitionnaire_2.personne_morale_nom, petitionnaire_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_2.personne_morale_raison_sociale, '' '', petitionnaire_2.personne_morale_denomination))
            END
    END as nom_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier'' OR petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_2_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_nom
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL
                THEN petitionnaire_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_2.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_2.personne_morale_denomination
    END as denomination_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_2.personne_morale_categorie_juridique
    END as categorie_juridique_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_2.personne_morale_siret
    END as siret_petitionnaire_2,
    petitionnaire_2.numero as numero_petitionnaire_2,&DB_PREFIXEadresse(petitionnaire_2.numero::text, petitionnaire_2.voie::text, petitionnaire_2.complement::text, petitionnaire_2.lieu_dit::text, petitionnaire_2.bp::text, petitionnaire_2.code_postal::text, petitionnaire_2.localite::text, petitionnaire_2.cedex::text, petitionnaire_2.pays::text) as adresse_petitionnaire_2_sdl,&DB_PREFIXEadresse(petitionnaire_2.numero::text, petitionnaire_2.voie::text, petitionnaire_2.complement::text, petitionnaire_2.lieu_dit::text, petitionnaire_2.bp::text, petitionnaire_2.code_postal::text, petitionnaire_2.localite::text, petitionnaire_2.cedex::text, petitionnaire_2.pays::text, '' ''::text) as adresse_petitionnaire_2,
    petitionnaire_2.voie as voie_petitionnaire_2,
    petitionnaire_2.complement as complement_petitionnaire_2,
    petitionnaire_2.lieu_dit as lieu_dit_petitionnaire_2,
    CASE 
        WHEN petitionnaire_2.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_2.bp)
    END as bp_petitionnaire_2,
    petitionnaire_2.code_postal as code_postal_petitionnaire_2,
    petitionnaire_2.localite as localite_petitionnaire_2,
    CASE 
        WHEN petitionnaire_2.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_2.cedex)
    END as cedex_petitionnaire_2,
    petitionnaire_2.pays as pays_petitionnaire_2,
    petitionnaire_2.division_territoriale as division_territoriale_petitionnaire_2,

    --Coordonnées du pétitionnaire 3

    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_3_civilite.libelle, petitionnaire_3.particulier_nom, petitionnaire_3.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_3.personne_morale_raison_sociale, petitionnaire_3.personne_morale_denomination, ''représenté(e) par'', petitionnaire_3_civilite.libelle, petitionnaire_3.personne_morale_nom, petitionnaire_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_3.personne_morale_raison_sociale, '' '', petitionnaire_3.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier'' OR petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_nom
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL
                THEN petitionnaire_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_3_civilite.libelle, petitionnaire_3.particulier_nom, petitionnaire_3.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_3,
    CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_3.personne_morale_raison_sociale, petitionnaire_3.personne_morale_denomination, ''représenté(e) par'', petitionnaire_3_civilite.libelle, petitionnaire_3.personne_morale_nom, petitionnaire_3.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_3.personne_morale_raison_sociale, '' '', petitionnaire_3.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL
        THEN petitionnaire_3.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_3.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_3_civilite.libelle, petitionnaire_3.particulier_nom, petitionnaire_3.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_3.personne_morale_raison_sociale, petitionnaire_3.personne_morale_denomination, ''représenté(e) par'', petitionnaire_3_civilite.libelle, petitionnaire_3.personne_morale_nom, petitionnaire_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_3.personne_morale_raison_sociale, '' '', petitionnaire_3.personne_morale_denomination))
            END
    END as nom_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier'' OR petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_3_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_nom
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL
                THEN petitionnaire_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_3.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_3.personne_morale_denomination
    END as denomination_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_3.personne_morale_siret
    END as siret_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_3.personne_morale_categorie_juridique
    END as categorie_juridique_petitionnaire_3,
    petitionnaire_3.numero as numero_petitionnaire_3,&DB_PREFIXEadresse(petitionnaire_3.numero::text, petitionnaire_3.voie::text, petitionnaire_3.complement::text, petitionnaire_3.lieu_dit::text, petitionnaire_3.bp::text, petitionnaire_3.code_postal::text, petitionnaire_3.localite::text, petitionnaire_3.cedex::text, petitionnaire_3.pays::text) as adresse_petitionnaire_3_sdl,&DB_PREFIXEadresse(petitionnaire_3.numero::text, petitionnaire_3.voie::text, petitionnaire_3.complement::text, petitionnaire_3.lieu_dit::text, petitionnaire_3.bp::text, petitionnaire_3.code_postal::text, petitionnaire_3.localite::text, petitionnaire_3.cedex::text, petitionnaire_3.pays::text, '' ''::text) as adresse_petitionnaire_3,
    petitionnaire_3.voie as voie_petitionnaire_3,
    petitionnaire_3.complement as complement_petitionnaire_3,
    petitionnaire_3.lieu_dit as lieu_dit_petitionnaire_3,
    CASE 
        WHEN petitionnaire_3.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_3.bp)
    END as bp_petitionnaire_3,
    petitionnaire_3.code_postal as code_postal_petitionnaire_3,
    petitionnaire_3.localite as localite_petitionnaire_3,
    CASE 
        WHEN petitionnaire_3.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_3.cedex)
    END as cedex_petitionnaire_3,
    petitionnaire_3.pays as pays_petitionnaire_3,
    petitionnaire_3.division_territoriale as division_territoriale_petitionnaire_3,

    --Coordonnées du pétitionnaire 4

    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_4_civilite.libelle, petitionnaire_4.particulier_nom, petitionnaire_4.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_4.personne_morale_raison_sociale, petitionnaire_4.personne_morale_denomination, ''représenté(e) par'', petitionnaire_4_civilite.libelle, petitionnaire_4.personne_morale_nom, petitionnaire_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_4.personne_morale_raison_sociale, '' '', petitionnaire_4.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier'' OR petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_nom
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL
                THEN petitionnaire_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_4_civilite.libelle, petitionnaire_4.particulier_nom, petitionnaire_4.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_4,
    CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_4.personne_morale_raison_sociale, petitionnaire_4.personne_morale_denomination, ''représenté(e) par'', petitionnaire_4_civilite.libelle, petitionnaire_4.personne_morale_nom, petitionnaire_4.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_4.personne_morale_raison_sociale, '' '', petitionnaire_4.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL
        THEN petitionnaire_4.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_4.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_4_civilite.libelle, petitionnaire_4.particulier_nom, petitionnaire_4.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_4.personne_morale_raison_sociale, petitionnaire_4.personne_morale_denomination, ''représenté(e) par'', petitionnaire_4_civilite.libelle, petitionnaire_4.personne_morale_nom, petitionnaire_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_4.personne_morale_raison_sociale, '' '', petitionnaire_4.personne_morale_denomination))
            END
    END as nom_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier'' OR petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_4_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_nom
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL
                THEN petitionnaire_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_4.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_4.personne_morale_denomination
    END as denomination_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_4.personne_morale_categorie_juridique
    END as categorie_juridique_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_4.personne_morale_siret
    END as siret_petitionnaire_4,
    petitionnaire_4.numero as numero_petitionnaire_4,&DB_PREFIXEadresse(petitionnaire_4.numero::text, petitionnaire_4.voie::text, petitionnaire_4.complement::text, petitionnaire_4.lieu_dit::text, petitionnaire_4.bp::text, petitionnaire_4.code_postal::text, petitionnaire_4.localite::text, petitionnaire_4.cedex::text, petitionnaire_4.pays::text) as adresse_petitionnaire_4_sdl,&DB_PREFIXEadresse(petitionnaire_4.numero::text, petitionnaire_4.voie::text, petitionnaire_4.complement::text, petitionnaire_4.lieu_dit::text, petitionnaire_4.bp::text, petitionnaire_4.code_postal::text, petitionnaire_4.localite::text, petitionnaire_4.cedex::text, petitionnaire_4.pays::text, '' ''::text) as adresse_petitionnaire_4,
    petitionnaire_4.voie as voie_petitionnaire_4,
    petitionnaire_4.complement as complement_petitionnaire_4,
    petitionnaire_4.lieu_dit as lieu_dit_petitionnaire_4,
    CASE 
        WHEN petitionnaire_4.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_4.bp)
    END as bp_petitionnaire_4,
    petitionnaire_4.code_postal as code_postal_petitionnaire_4,
    petitionnaire_4.localite as localite_petitionnaire_4,
    CASE 
        WHEN petitionnaire_4.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_4.cedex)
    END as cedex_petitionnaire_4,
    petitionnaire_4.pays as pays_petitionnaire_4,
    petitionnaire_4.division_territoriale as division_territoriale_petitionnaire_4,

    --Coordonnées du pétitionnaire 5

    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_5_civilite.libelle, petitionnaire_5.particulier_nom, petitionnaire_5.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_5.personne_morale_raison_sociale, petitionnaire_5.personne_morale_denomination, ''représenté(e) par'', petitionnaire_5_civilite.libelle, petitionnaire_5.personne_morale_nom, petitionnaire_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_5.personne_morale_raison_sociale, '' '', petitionnaire_5.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier'' OR petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_nom
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL
                THEN petitionnaire_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_5_civilite.libelle, petitionnaire_5.particulier_nom, petitionnaire_5.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_5,
    CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_5.personne_morale_raison_sociale, petitionnaire_5.personne_morale_denomination, ''représenté(e) par'', petitionnaire_5_civilite.libelle, petitionnaire_5.personne_morale_nom, petitionnaire_5.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_5.personne_morale_raison_sociale, '' '', petitionnaire_5.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL
        THEN petitionnaire_5.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_5.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_5_civilite.libelle, petitionnaire_5.particulier_nom, petitionnaire_5.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_5.personne_morale_raison_sociale, petitionnaire_5.personne_morale_denomination, ''représenté(e) par'', petitionnaire_5_civilite.libelle, petitionnaire_5.personne_morale_nom, petitionnaire_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_5.personne_morale_raison_sociale, '' '', petitionnaire_5.personne_morale_denomination))
            END
    END as nom_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier'' OR petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_5_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_nom
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL
                THEN petitionnaire_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_5.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_5.personne_morale_denomination
    END as denomination_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_5.personne_morale_categorie_juridique
    END as categorie_juridique_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_5.personne_morale_siret
    END as siret_petitionnaire_5,
    petitionnaire_5.numero as numero_petitionnaire_5,&DB_PREFIXEadresse(petitionnaire_5.numero::text, petitionnaire_5.voie::text, petitionnaire_5.complement::text, petitionnaire_5.lieu_dit::text, petitionnaire_5.bp::text, petitionnaire_5.code_postal::text, petitionnaire_5.localite::text, petitionnaire_5.cedex::text, petitionnaire_5.pays::text) as adresse_petitionnaire_5_sdl,&DB_PREFIXEadresse(petitionnaire_5.numero::text, petitionnaire_5.voie::text, petitionnaire_5.complement::text, petitionnaire_5.lieu_dit::text, petitionnaire_5.bp::text, petitionnaire_5.code_postal::text, petitionnaire_5.localite::text, petitionnaire_5.cedex::text, petitionnaire_5.pays::text, '' ''::text) as adresse_petitionnaire_5,
    petitionnaire_5.voie as voie_petitionnaire_5,
    petitionnaire_5.complement as complement_petitionnaire_5,
    petitionnaire_5.lieu_dit as lieu_dit_petitionnaire_5,
    CASE 
        WHEN petitionnaire_5.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_5.bp)
    END as bp_petitionnaire_5,
    petitionnaire_5.code_postal as code_postal_petitionnaire_5,
    petitionnaire_5.localite as localite_petitionnaire_5,
    CASE 
        WHEN petitionnaire_5.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_5.cedex)
    END as cedex_petitionnaire_5,
    petitionnaire_5.pays as pays_petitionnaire_5,
    petitionnaire_5.division_territoriale as division_territoriale_petitionnaire_5,

    --Coordonnées du contrevenant principal

    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_principal_civilite.libelle, contrevenant_principal.particulier_nom, contrevenant_principal.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_principal.personne_morale_nom IS NOT NULL OR contrevenant_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_principal.personne_morale_raison_sociale, contrevenant_principal.personne_morale_denomination, ''représenté(e) par'', contrevenant_principal_civilite.libelle, contrevenant_principal.personne_morale_nom, contrevenant_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_principal.personne_morale_raison_sociale, '' '', contrevenant_principal.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier'' OR contrevenant_principal.personne_morale_nom IS NOT NULL OR contrevenant_principal.personne_morale_prenom IS NOT NULL
        THEN contrevenant_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN contrevenant_principal.particulier_nom
        ELSE
            CASE WHEN contrevenant_principal.personne_morale_nom IS NOT NULL
                THEN contrevenant_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN contrevenant_principal.particulier_prenom
        ELSE
            CASE WHEN contrevenant_principal.personne_morale_prenom IS NOT NULL
                THEN contrevenant_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_principal_civilite.libelle, contrevenant_principal.particulier_nom, contrevenant_principal.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN contrevenant_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN contrevenant_principal.particulier_nom
        ELSE ''''
    END as nom_qualite_part_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN contrevenant_principal.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_contrevenant_principal,
    CASE WHEN contrevenant_principal.personne_morale_nom IS NOT NULL OR contrevenant_principal.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', contrevenant_principal.personne_morale_raison_sociale, contrevenant_principal.personne_morale_denomination, ''représenté(e) par'', contrevenant_principal_civilite.libelle, contrevenant_principal.personne_morale_nom, contrevenant_principal.personne_morale_prenom))
        ELSE TRIM(CONCAT(contrevenant_principal.personne_morale_raison_sociale, '' '', contrevenant_principal.personne_morale_denomination))
    END as nom_complet_qualite_pm_contrevenant_principal,
    CASE WHEN contrevenant_principal.personne_morale_nom IS NOT NULL OR contrevenant_principal.personne_morale_prenom IS NOT NULL
        THEN contrevenant_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_contrevenant_principal,
    CASE WHEN contrevenant_principal.personne_morale_nom IS NOT NULL
        THEN contrevenant_principal.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_contrevenant_principal,
    CASE WHEN contrevenant_principal.personne_morale_prenom IS NOT NULL
        THEN contrevenant_principal.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_principal_civilite.libelle, contrevenant_principal.particulier_nom, contrevenant_principal.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_principal.personne_morale_nom IS NOT NULL OR contrevenant_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_principal.personne_morale_raison_sociale, contrevenant_principal.personne_morale_denomination, ''représenté(e) par'', contrevenant_principal_civilite.libelle, contrevenant_principal.personne_morale_nom, contrevenant_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_principal.personne_morale_raison_sociale, '' '', contrevenant_principal.personne_morale_denomination))
            END
    END as nom_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier'' OR contrevenant_principal.personne_morale_nom IS NOT NULL OR contrevenant_principal.personne_morale_prenom IS NOT NULL
        THEN contrevenant_principal_civilite.libelle
        ELSE ''''
    END as civilite_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN contrevenant_principal.particulier_nom
        ELSE
            CASE WHEN contrevenant_principal.personne_morale_nom IS NOT NULL
                THEN contrevenant_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN contrevenant_principal.particulier_prenom
        ELSE
            CASE WHEN contrevenant_principal.personne_morale_prenom IS NOT NULL
                THEN contrevenant_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_principal.personne_morale_raison_sociale
    END as raison_sociale_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_principal.personne_morale_denomination
    END as denomination_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_principal.personne_morale_siret
    END as siret_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_principal.personne_morale_categorie_juridique
    END as categorie_juridique_contrevenant_principal,
    contrevenant_principal.numero as numero_contrevenant_principal,&DB_PREFIXEadresse(contrevenant_principal.numero::text, contrevenant_principal.voie::text, contrevenant_principal.complement::text, contrevenant_principal.lieu_dit::text, contrevenant_principal.bp::text, contrevenant_principal.code_postal::text, contrevenant_principal.localite::text, contrevenant_principal.cedex::text, contrevenant_principal.pays::text) as adresse_contrevenant_principal_sdl,&DB_PREFIXEadresse(contrevenant_principal.numero::text, contrevenant_principal.voie::text, contrevenant_principal.complement::text, contrevenant_principal.lieu_dit::text, contrevenant_principal.bp::text, contrevenant_principal.code_postal::text, contrevenant_principal.localite::text, contrevenant_principal.cedex::text, contrevenant_principal.pays::text, '' ''::text) as adresse_contrevenant_principal,
    contrevenant_principal.voie as voie_contrevenant_principal,
    contrevenant_principal.complement as complement_contrevenant_principal,
    contrevenant_principal.lieu_dit as lieu_dit_contrevenant_principal,
    CASE 
        WHEN contrevenant_principal.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', contrevenant_principal.bp)
    END as bp_contrevenant_principal,
    contrevenant_principal.code_postal as code_postal_contrevenant_principal,
    contrevenant_principal.localite as localite_contrevenant_principal,
    CASE 
        WHEN contrevenant_principal.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', contrevenant_principal.cedex)
    END as cedex_contrevenant_principal,
    contrevenant_principal.pays as pays_contrevenant_principal,
    contrevenant_principal.division_territoriale as division_territoriale_contrevenant_principal,

    --Coordonnées du contrevenant 1

    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_1_civilite.libelle, contrevenant_1.particulier_nom, contrevenant_1.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_1.personne_morale_nom IS NOT NULL OR contrevenant_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_1.personne_morale_raison_sociale, contrevenant_1.personne_morale_denomination, ''représenté(e) par'', contrevenant_1_civilite.libelle, contrevenant_1.personne_morale_nom, contrevenant_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_1.personne_morale_raison_sociale, '' '', contrevenant_1.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier'' OR contrevenant_1.personne_morale_nom IS NOT NULL OR contrevenant_1.personne_morale_prenom IS NOT NULL
        THEN contrevenant_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN contrevenant_1.particulier_nom
        ELSE
            CASE WHEN contrevenant_1.personne_morale_nom IS NOT NULL
                THEN contrevenant_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN contrevenant_1.particulier_prenom
        ELSE
            CASE WHEN contrevenant_1.personne_morale_prenom IS NOT NULL
                THEN contrevenant_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_1_civilite.libelle, contrevenant_1.particulier_nom, contrevenant_1.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN contrevenant_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN contrevenant_1.particulier_nom
        ELSE ''''
    END as nom_qualite_part_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN contrevenant_1.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_contrevenant_1,
    CASE WHEN contrevenant_1.personne_morale_nom IS NOT NULL OR contrevenant_1.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', contrevenant_1.personne_morale_raison_sociale, contrevenant_1.personne_morale_denomination, ''représenté(e) par'', contrevenant_1_civilite.libelle, contrevenant_1.personne_morale_nom, contrevenant_1.personne_morale_prenom))
        ELSE TRIM(CONCAT(contrevenant_1.personne_morale_raison_sociale, '' '', contrevenant_1.personne_morale_denomination))
    END as nom_complet_qualite_pm_contrevenant_1,
    CASE WHEN contrevenant_1.personne_morale_nom IS NOT NULL OR contrevenant_1.personne_morale_prenom IS NOT NULL
        THEN contrevenant_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_contrevenant_1,
    CASE WHEN contrevenant_1.personne_morale_nom IS NOT NULL
        THEN contrevenant_1.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_contrevenant_1,
    CASE WHEN contrevenant_1.personne_morale_prenom IS NOT NULL
        THEN contrevenant_1.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_1_civilite.libelle, contrevenant_1.particulier_nom, contrevenant_1.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_1.personne_morale_nom IS NOT NULL OR contrevenant_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_1.personne_morale_raison_sociale, contrevenant_1.personne_morale_denomination, ''représenté(e) par'', contrevenant_1_civilite.libelle, contrevenant_1.personne_morale_nom, contrevenant_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_1.personne_morale_raison_sociale, '' '', contrevenant_1.personne_morale_denomination))
            END
    END as nom_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier'' OR contrevenant_1.personne_morale_nom IS NOT NULL OR contrevenant_1.personne_morale_prenom IS NOT NULL
        THEN contrevenant_1_civilite.libelle
        ELSE ''''
    END as civilite_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN contrevenant_1.particulier_nom
        ELSE
            CASE WHEN contrevenant_1.personne_morale_nom IS NOT NULL
                THEN contrevenant_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN contrevenant_1.particulier_prenom
        ELSE
            CASE WHEN contrevenant_1.personne_morale_prenom IS NOT NULL
                THEN contrevenant_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_1.personne_morale_raison_sociale
    END as raison_sociale_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_1.personne_morale_denomination
    END as denomination_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_1.personne_morale_siret
    END as siret_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_1.personne_morale_categorie_juridique
    END as categorie_juridique_contrevenant_1,
    contrevenant_1.numero as numero_contrevenant_1,&DB_PREFIXEadresse(contrevenant_1.numero::text, contrevenant_1.voie::text, contrevenant_1.complement::text, contrevenant_1.lieu_dit::text, contrevenant_1.bp::text, contrevenant_1.code_postal::text, contrevenant_1.localite::text, contrevenant_1.cedex::text, contrevenant_1.pays::text) as adresse_contrevenant_1_sdl,&DB_PREFIXEadresse(contrevenant_1.numero::text, contrevenant_1.voie::text, contrevenant_1.complement::text, contrevenant_1.lieu_dit::text, contrevenant_1.bp::text, contrevenant_1.code_postal::text, contrevenant_1.localite::text, contrevenant_1.cedex::text, contrevenant_1.pays::text, '' ''::text) as adresse_contrevenant_1,
    contrevenant_1.voie as voie_contrevenant_1,
    contrevenant_1.complement as complement_contrevenant_1,
    contrevenant_1.lieu_dit as lieu_dit_contrevenant_1,
    CASE 
        WHEN contrevenant_1.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', contrevenant_1.bp)
    END as bp_contrevenant_1,
    contrevenant_1.code_postal as code_postal_contrevenant_1,
    contrevenant_1.localite as localite_contrevenant_1,
    CASE 
        WHEN contrevenant_1.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', contrevenant_1.cedex)
    END as cedex_contrevenant_1,
    contrevenant_1.pays as pays_contrevenant_1,
    contrevenant_1.division_territoriale as division_territoriale_contrevenant_1,

    --Coordonnées du contrevenant 2

    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_2_civilite.libelle, contrevenant_2.particulier_nom, contrevenant_2.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_2.personne_morale_nom IS NOT NULL OR contrevenant_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_2.personne_morale_raison_sociale, contrevenant_2.personne_morale_denomination, ''représenté(e) par'', contrevenant_2_civilite.libelle, contrevenant_2.personne_morale_nom, contrevenant_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_2.personne_morale_raison_sociale, '' '', contrevenant_2.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier'' OR contrevenant_2.personne_morale_nom IS NOT NULL OR contrevenant_2.personne_morale_prenom IS NOT NULL
        THEN contrevenant_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN contrevenant_2.particulier_nom
        ELSE
            CASE WHEN contrevenant_2.personne_morale_nom IS NOT NULL
                THEN contrevenant_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN contrevenant_2.particulier_prenom
        ELSE
            CASE WHEN contrevenant_2.personne_morale_prenom IS NOT NULL
                THEN contrevenant_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_2_civilite.libelle, contrevenant_2.particulier_nom, contrevenant_2.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN contrevenant_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN contrevenant_2.particulier_nom
        ELSE ''''
    END as nom_qualite_part_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN contrevenant_2.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_contrevenant_2,
    CASE WHEN contrevenant_2.personne_morale_nom IS NOT NULL OR contrevenant_2.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', contrevenant_2.personne_morale_raison_sociale, contrevenant_2.personne_morale_denomination, ''représenté(e) par'', contrevenant_2_civilite.libelle, contrevenant_2.personne_morale_nom, contrevenant_2.personne_morale_prenom))
        ELSE TRIM(CONCAT(contrevenant_2.personne_morale_raison_sociale, '' '', contrevenant_2.personne_morale_denomination))
    END as nom_complet_qualite_pm_contrevenant_2,
    CASE WHEN contrevenant_2.personne_morale_nom IS NOT NULL OR contrevenant_2.personne_morale_prenom IS NOT NULL
        THEN contrevenant_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_contrevenant_2,
    CASE WHEN contrevenant_2.personne_morale_nom IS NOT NULL
        THEN contrevenant_2.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_contrevenant_2,
    CASE WHEN contrevenant_2.personne_morale_prenom IS NOT NULL
        THEN contrevenant_2.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_2_civilite.libelle, contrevenant_2.particulier_nom, contrevenant_2.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_2.personne_morale_nom IS NOT NULL OR contrevenant_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_2.personne_morale_raison_sociale, contrevenant_2.personne_morale_denomination, ''représenté(e) par'', contrevenant_2_civilite.libelle, contrevenant_2.personne_morale_nom, contrevenant_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_2.personne_morale_raison_sociale, '' '', contrevenant_2.personne_morale_denomination))
            END
    END as nom_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier'' OR contrevenant_2.personne_morale_nom IS NOT NULL OR contrevenant_2.personne_morale_prenom IS NOT NULL
        THEN contrevenant_2_civilite.libelle
        ELSE ''''
    END as civilite_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN contrevenant_2.particulier_nom
        ELSE
            CASE WHEN contrevenant_2.personne_morale_nom IS NOT NULL
                THEN contrevenant_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN contrevenant_2.particulier_prenom
        ELSE
            CASE WHEN contrevenant_2.personne_morale_prenom IS NOT NULL
                THEN contrevenant_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_2.personne_morale_raison_sociale
    END as raison_sociale_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_2.personne_morale_denomination
    END as denomination_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_2.personne_morale_categorie_juridique
    END as categorie_juridique_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_2.personne_morale_siret
    END as siret_contrevenant_2,
    contrevenant_2.numero as numero_contrevenant_2,&DB_PREFIXEadresse(contrevenant_2.numero::text, contrevenant_2.voie::text, contrevenant_2.complement::text, contrevenant_2.lieu_dit::text, contrevenant_2.bp::text, contrevenant_2.code_postal::text, contrevenant_2.localite::text, contrevenant_2.cedex::text, contrevenant_2.pays::text) as adresse_contrevenant_2_sdl,&DB_PREFIXEadresse(contrevenant_2.numero::text, contrevenant_2.voie::text, contrevenant_2.complement::text, contrevenant_2.lieu_dit::text, contrevenant_2.bp::text, contrevenant_2.code_postal::text, contrevenant_2.localite::text, contrevenant_2.cedex::text, contrevenant_2.pays::text, '' ''::text) as adresse_contrevenant_2,
    contrevenant_2.voie as voie_contrevenant_2,
    contrevenant_2.complement as complement_contrevenant_2,
    contrevenant_2.lieu_dit as lieu_dit_contrevenant_2,
    CASE 
        WHEN contrevenant_2.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', contrevenant_2.bp)
    END as bp_contrevenant_2,
    contrevenant_2.code_postal as code_postal_contrevenant_2,
    contrevenant_2.localite as localite_contrevenant_2,
    CASE 
        WHEN contrevenant_2.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', contrevenant_2.cedex)
    END as cedex_contrevenant_2,
    contrevenant_2.pays as pays_contrevenant_2,
    contrevenant_2.division_territoriale as division_territoriale_contrevenant_2,

    --Coordonnées du contrevenant 3

    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_3_civilite.libelle, contrevenant_3.particulier_nom, contrevenant_3.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL OR contrevenant_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_3.personne_morale_raison_sociale, contrevenant_3.personne_morale_denomination, ''représenté(e) par'', contrevenant_3_civilite.libelle, contrevenant_3.personne_morale_nom, contrevenant_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_3.personne_morale_raison_sociale, '' '', contrevenant_3.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier'' OR contrevenant_3.personne_morale_nom IS NOT NULL OR contrevenant_3.personne_morale_prenom IS NOT NULL
        THEN contrevenant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3.particulier_nom
        ELSE
            CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL
                THEN contrevenant_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3.particulier_prenom
        ELSE
            CASE WHEN contrevenant_3.personne_morale_prenom IS NOT NULL
                THEN contrevenant_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_3_civilite.libelle, contrevenant_3.particulier_nom, contrevenant_3.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3.particulier_nom
        ELSE ''''
    END as nom_qualite_part_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_contrevenant_3,
    CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL OR contrevenant_3.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', contrevenant_3.personne_morale_raison_sociale, contrevenant_3.personne_morale_denomination, ''représenté(e) par'', contrevenant_3_civilite.libelle, contrevenant_3.personne_morale_nom, contrevenant_3.personne_morale_prenom))
        ELSE TRIM(CONCAT(contrevenant_3.personne_morale_raison_sociale, '' '', contrevenant_3.personne_morale_denomination))
    END as nom_complet_qualite_pm_contrevenant_3,
    CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL OR contrevenant_3.personne_morale_prenom IS NOT NULL
        THEN contrevenant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_contrevenant_3,
    CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL
        THEN contrevenant_3.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_contrevenant_3,
    CASE WHEN contrevenant_3.personne_morale_prenom IS NOT NULL
        THEN contrevenant_3.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_3_civilite.libelle, contrevenant_3.particulier_nom, contrevenant_3.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL OR contrevenant_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_3.personne_morale_raison_sociale, contrevenant_3.personne_morale_denomination, ''représenté(e) par'', contrevenant_3_civilite.libelle, contrevenant_3.personne_morale_nom, contrevenant_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_3.personne_morale_raison_sociale, '' '', contrevenant_3.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier'' OR contrevenant_3.personne_morale_nom IS NOT NULL OR contrevenant_3.personne_morale_prenom IS NOT NULL
        THEN contrevenant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3.particulier_nom
        ELSE
            CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL
                THEN contrevenant_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3.particulier_prenom
        ELSE
            CASE WHEN contrevenant_3.personne_morale_prenom IS NOT NULL
                THEN contrevenant_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_3_civilite.libelle, contrevenant_3.particulier_nom, contrevenant_3.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3.particulier_nom
        ELSE ''''
    END as nom_qualite_part_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_contrevenant_3,
    CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL OR contrevenant_3.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', contrevenant_3.personne_morale_raison_sociale, contrevenant_3.personne_morale_denomination, ''représenté(e) par'', contrevenant_3_civilite.libelle, contrevenant_3.personne_morale_nom, contrevenant_3.personne_morale_prenom))
        ELSE TRIM(CONCAT(contrevenant_3.personne_morale_raison_sociale, '' '', contrevenant_3.personne_morale_denomination))
    END as nom_complet_qualite_pm_contrevenant_3,
    CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL OR contrevenant_3.personne_morale_prenom IS NOT NULL
        THEN contrevenant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_contrevenant_3,
    CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL
        THEN contrevenant_3.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_contrevenant_3,
    CASE WHEN contrevenant_3.personne_morale_prenom IS NOT NULL
        THEN contrevenant_3.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_3_civilite.libelle, contrevenant_3.particulier_nom, contrevenant_3.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL OR contrevenant_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_3.personne_morale_raison_sociale, contrevenant_3.personne_morale_denomination, ''représenté(e) par'', contrevenant_3_civilite.libelle, contrevenant_3.personne_morale_nom, contrevenant_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_3.personne_morale_raison_sociale, '' '', contrevenant_3.personne_morale_denomination))
            END
    END as nom_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier'' OR contrevenant_3.personne_morale_nom IS NOT NULL OR contrevenant_3.personne_morale_prenom IS NOT NULL
        THEN contrevenant_3_civilite.libelle
        ELSE ''''
    END as civilite_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3.particulier_nom
        ELSE
            CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL
                THEN contrevenant_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3.particulier_prenom
        ELSE
            CASE WHEN contrevenant_3.personne_morale_prenom IS NOT NULL
                THEN contrevenant_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_3.personne_morale_raison_sociale
    END as raison_sociale_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_3.personne_morale_denomination
    END as denomination_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_3.personne_morale_siret
    END as siret_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_3.personne_morale_categorie_juridique
    END as categorie_juridique_contrevenant_3,
    contrevenant_3.numero as numero_contrevenant_3,&DB_PREFIXEadresse(contrevenant_3.numero::text, contrevenant_3.voie::text, contrevenant_3.complement::text, contrevenant_3.lieu_dit::text, contrevenant_3.bp::text, contrevenant_3.code_postal::text, contrevenant_3.localite::text, contrevenant_3.cedex::text, contrevenant_3.pays::text) as adresse_contrevenant_3_sdl,&DB_PREFIXEadresse(contrevenant_3.numero::text, contrevenant_3.voie::text, contrevenant_3.complement::text, contrevenant_3.lieu_dit::text, contrevenant_3.bp::text, contrevenant_3.code_postal::text, contrevenant_3.localite::text, contrevenant_3.cedex::text, contrevenant_3.pays::text, '' ''::text) as adresse_contrevenant_3,
    contrevenant_3.voie as voie_contrevenant_3,
    contrevenant_3.complement as complement_contrevenant_3,
    contrevenant_3.lieu_dit as lieu_dit_contrevenant_3,
    CASE 
        WHEN contrevenant_3.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', contrevenant_3.bp)
    END as bp_contrevenant_3,
    contrevenant_3.code_postal as code_postal_contrevenant_3,
    contrevenant_3.localite as localite_contrevenant_3,
    CASE 
        WHEN contrevenant_3.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', contrevenant_3.cedex)
    END as cedex_contrevenant_3,
    contrevenant_3.pays as pays_contrevenant_3,
    contrevenant_3.division_territoriale as division_territoriale_contrevenant_3,

    --Coordonnées du contrevenant 4

    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_4_civilite.libelle, contrevenant_4.particulier_nom, contrevenant_4.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_4.personne_morale_nom IS NOT NULL OR contrevenant_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_4.personne_morale_raison_sociale, contrevenant_4.personne_morale_denomination, ''représenté(e) par'', contrevenant_4_civilite.libelle, contrevenant_4.personne_morale_nom, contrevenant_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_4.personne_morale_raison_sociale, '' '', contrevenant_4.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier'' OR contrevenant_4.personne_morale_nom IS NOT NULL OR contrevenant_4.personne_morale_prenom IS NOT NULL
        THEN contrevenant_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN contrevenant_4.particulier_nom
        ELSE
            CASE WHEN contrevenant_4.personne_morale_nom IS NOT NULL
                THEN contrevenant_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN contrevenant_4.particulier_prenom
        ELSE
            CASE WHEN contrevenant_4.personne_morale_prenom IS NOT NULL
                THEN contrevenant_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_4_civilite.libelle, contrevenant_4.particulier_nom, contrevenant_4.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN contrevenant_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN contrevenant_4.particulier_nom
        ELSE ''''
    END as nom_qualite_part_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN contrevenant_4.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_contrevenant_4,
    CASE WHEN contrevenant_4.personne_morale_nom IS NOT NULL OR contrevenant_4.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', contrevenant_4.personne_morale_raison_sociale, contrevenant_4.personne_morale_denomination, ''représenté(e) par'', contrevenant_4_civilite.libelle, contrevenant_4.personne_morale_nom, contrevenant_4.personne_morale_prenom))
        ELSE TRIM(CONCAT(contrevenant_4.personne_morale_raison_sociale, '' '', contrevenant_4.personne_morale_denomination))
    END as nom_complet_qualite_pm_contrevenant_4,
    CASE WHEN contrevenant_4.personne_morale_nom IS NOT NULL OR contrevenant_4.personne_morale_prenom IS NOT NULL
        THEN contrevenant_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_contrevenant_4,
    CASE WHEN contrevenant_4.personne_morale_nom IS NOT NULL
        THEN contrevenant_4.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_contrevenant_4,
    CASE WHEN contrevenant_4.personne_morale_prenom IS NOT NULL
        THEN contrevenant_4.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_4_civilite.libelle, contrevenant_4.particulier_nom, contrevenant_4.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_4.personne_morale_nom IS NOT NULL OR contrevenant_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_4.personne_morale_raison_sociale, contrevenant_4.personne_morale_denomination, ''représenté(e) par'', contrevenant_4_civilite.libelle, contrevenant_4.personne_morale_nom, contrevenant_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_4.personne_morale_raison_sociale, '' '', contrevenant_4.personne_morale_denomination))
            END
    END as nom_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier'' OR contrevenant_4.personne_morale_nom IS NOT NULL OR contrevenant_4.personne_morale_prenom IS NOT NULL
        THEN contrevenant_4_civilite.libelle
        ELSE ''''
    END as civilite_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN contrevenant_4.particulier_nom
        ELSE
            CASE WHEN contrevenant_4.personne_morale_nom IS NOT NULL
                THEN contrevenant_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN contrevenant_4.particulier_prenom
        ELSE
            CASE WHEN contrevenant_4.personne_morale_prenom IS NOT NULL
                THEN contrevenant_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_4.personne_morale_raison_sociale
    END as raison_sociale_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_4.personne_morale_denomination
    END as denomination_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_4.personne_morale_categorie_juridique
    END as categorie_juridique_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_4.personne_morale_siret
    END as siret_contrevenant_4,
    contrevenant_4.numero as numero_contrevenant_4,&DB_PREFIXEadresse(contrevenant_4.numero::text, contrevenant_4.voie::text, contrevenant_4.complement::text, contrevenant_4.lieu_dit::text, contrevenant_4.bp::text, contrevenant_4.code_postal::text, contrevenant_4.localite::text, contrevenant_4.cedex::text, contrevenant_4.pays::text) as adresse_contrevenant_4_sdl,&DB_PREFIXEadresse(contrevenant_4.numero::text, contrevenant_4.voie::text, contrevenant_4.complement::text, contrevenant_4.lieu_dit::text, contrevenant_4.bp::text, contrevenant_4.code_postal::text, contrevenant_4.localite::text, contrevenant_4.cedex::text, contrevenant_4.pays::text, '' ''::text) as adresse_contrevenant_4,
    contrevenant_4.voie as voie_contrevenant_4,
    contrevenant_4.complement as complement_contrevenant_4,
    contrevenant_4.lieu_dit as lieu_dit_contrevenant_4,
    CASE 
        WHEN contrevenant_4.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', contrevenant_4.bp)
    END as bp_contrevenant_4,
    contrevenant_4.code_postal as code_postal_contrevenant_4,
    contrevenant_4.localite as localite_contrevenant_4,
    CASE 
        WHEN contrevenant_4.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', contrevenant_4.cedex)
    END as cedex_contrevenant_4,
    contrevenant_4.pays as pays_contrevenant_4,
    contrevenant_4.division_territoriale as division_territoriale_contrevenant_4,

    --Coordonnées du contrevenant 5

    CASE WHEN contrevenant_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_5_civilite.libelle, contrevenant_5.particulier_nom, contrevenant_5.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_5.personne_morale_nom IS NOT NULL OR contrevenant_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_5.personne_morale_raison_sociale, contrevenant_5.personne_morale_denomination, ''représenté(e) par'', contrevenant_5_civilite.libelle, contrevenant_5.personne_morale_nom, contrevenant_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_5.personne_morale_raison_sociale, '' '', contrevenant_5.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_contrevenant_5,
    CASE WHEN contrevenant_5.qualite=''particulier'' OR contrevenant_5.personne_morale_nom IS NOT NULL OR contrevenant_5.personne_morale_prenom IS NOT NULL
        THEN contrevenant_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_contrevenant_5,
    CASE WHEN contrevenant_5.qualite=''particulier''
        THEN contrevenant_5.particulier_nom
        ELSE
            CASE WHEN contrevenant_5.personne_morale_nom IS NOT NULL
                THEN contrevenant_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_contrevenant_5,
    CASE WHEN contrevenant_5.qualite=''particulier''
        THEN contrevenant_5.particulier_prenom
        ELSE
            CASE WHEN contrevenant_5.personne_morale_prenom IS NOT NULL
                THEN contrevenant_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_contrevenant_5,
    CASE WHEN contrevenant_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_5_civilite.libelle, contrevenant_5.particulier_nom, contrevenant_5.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_contrevenant_5,
    CASE WHEN contrevenant_5.qualite=''particulier''
        THEN contrevenant_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_contrevenant_5,
    CASE WHEN contrevenant_5.qualite=''particulier''
        THEN contrevenant_5.particulier_nom
        ELSE ''''
    END as nom_qualite_part_contrevenant_5,
    CASE WHEN contrevenant_5.qualite=''particulier''
        THEN contrevenant_5.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_contrevenant_5,
    CASE WHEN contrevenant_5.personne_morale_nom IS NOT NULL OR contrevenant_5.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', contrevenant_5.personne_morale_raison_sociale, contrevenant_5.personne_morale_denomination, ''représenté(e) par'', contrevenant_5_civilite.libelle, contrevenant_5.personne_morale_nom, contrevenant_5.personne_morale_prenom))
        ELSE TRIM(CONCAT(contrevenant_5.personne_morale_raison_sociale, '' '', contrevenant_5.personne_morale_denomination))
    END as nom_complet_qualite_pm_contrevenant_5,
    CASE WHEN contrevenant_5.personne_morale_nom IS NOT NULL OR contrevenant_5.personne_morale_prenom IS NOT NULL
        THEN contrevenant_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_contrevenant_5,
    CASE WHEN contrevenant_5.personne_morale_nom IS NOT NULL
        THEN contrevenant_5.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_contrevenant_5,
    CASE WHEN contrevenant_5.personne_morale_prenom IS NOT NULL
        THEN contrevenant_5.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_contrevenant_5,
    CASE WHEN contrevenant_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_5_civilite.libelle, contrevenant_5.particulier_nom, contrevenant_5.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_5.personne_morale_nom IS NOT NULL OR contrevenant_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_5.personne_morale_raison_sociale, contrevenant_5.personne_morale_denomination, ''représenté(e) par'', contrevenant_5_civilite.libelle, contrevenant_5.personne_morale_nom, contrevenant_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_5.personne_morale_raison_sociale, '' '', contrevenant_5.personne_morale_denomination))
            END
    END as nom_contrevenant_5,
    CASE WHEN contrevenant_5.qualite=''particulier'' OR contrevenant_5.personne_morale_nom IS NOT NULL OR contrevenant_5.personne_morale_prenom IS NOT NULL
        THEN contrevenant_5_civilite.libelle
        ELSE ''''
    END as civilite_contrevenant_5,
    CASE WHEN contrevenant_5.qualite=''particulier''
        THEN contrevenant_5.particulier_nom
        ELSE
            CASE WHEN contrevenant_5.personne_morale_nom IS NOT NULL
                THEN contrevenant_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_contrevenant_5,
    CASE WHEN contrevenant_5.qualite=''particulier''
        THEN contrevenant_5.particulier_prenom
        ELSE
            CASE WHEN contrevenant_5.personne_morale_prenom IS NOT NULL
                THEN contrevenant_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_contrevenant_5,
    CASE WHEN contrevenant_5.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_5.personne_morale_raison_sociale
    END as raison_sociale_contrevenant_5,
    CASE WHEN contrevenant_5.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_5.personne_morale_denomination
    END as denomination_contrevenant_5,
    CASE WHEN contrevenant_5.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_5.personne_morale_categorie_juridique
    END as categorie_juridique_contrevenant_5,
    CASE WHEN contrevenant_5.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_5.personne_morale_siret
    END as siret_contrevenant_5,
    contrevenant_5.numero as numero_contrevenant_5,&DB_PREFIXEadresse(contrevenant_5.numero::text, contrevenant_5.voie::text, contrevenant_5.complement::text, contrevenant_5.lieu_dit::text, contrevenant_5.bp::text, contrevenant_5.code_postal::text, contrevenant_5.localite::text, contrevenant_5.cedex::text, contrevenant_5.pays::text) as adresse_contrevenant_5_sdl,&DB_PREFIXEadresse(contrevenant_5.numero::text, contrevenant_5.voie::text, contrevenant_5.complement::text, contrevenant_5.lieu_dit::text, contrevenant_5.bp::text, contrevenant_5.code_postal::text, contrevenant_5.localite::text, contrevenant_5.cedex::text, contrevenant_5.pays::text, '' ''::text) as adresse_contrevenant_5,
    contrevenant_5.voie as voie_contrevenant_5,
    contrevenant_5.complement as complement_contrevenant_5,
    contrevenant_5.lieu_dit as lieu_dit_contrevenant_5,
    CASE 
        WHEN contrevenant_5.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', contrevenant_5.bp)
    END as bp_contrevenant_5,
    contrevenant_5.code_postal as code_postal_contrevenant_5,
    contrevenant_5.localite as localite_contrevenant_5,
    CASE 
        WHEN contrevenant_5.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', contrevenant_5.cedex)
    END as cedex_contrevenant_5,
    contrevenant_5.pays as pays_contrevenant_5,
    contrevenant_5.division_territoriale as division_territoriale_contrevenant_5,

    --Coordonnées du requérant principal

    CASE WHEN requerant_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_principal_civilite.libelle, requerant_principal.particulier_nom, requerant_principal.particulier_prenom))
        ELSE
            CASE WHEN requerant_principal.personne_morale_nom IS NOT NULL OR requerant_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_principal.personne_morale_raison_sociale, requerant_principal.personne_morale_denomination, ''représenté(e) par'', requerant_principal_civilite.libelle, requerant_principal.personne_morale_nom, requerant_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_principal.personne_morale_raison_sociale, '' '', requerant_principal.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier'' OR requerant_principal.personne_morale_nom IS NOT NULL OR requerant_principal.personne_morale_prenom IS NOT NULL
        THEN requerant_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN requerant_principal.particulier_nom
        ELSE
            CASE WHEN requerant_principal.personne_morale_nom IS NOT NULL
                THEN requerant_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN requerant_principal.particulier_prenom
        ELSE
            CASE WHEN requerant_principal.personne_morale_prenom IS NOT NULL
                THEN requerant_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_principal_civilite.libelle, requerant_principal.particulier_nom, requerant_principal.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN requerant_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN requerant_principal.particulier_nom
        ELSE ''''
    END as nom_qualite_part_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN requerant_principal.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_requerant_principal,
    CASE WHEN requerant_principal.personne_morale_nom IS NOT NULL OR requerant_principal.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', requerant_principal.personne_morale_raison_sociale, requerant_principal.personne_morale_denomination, ''représenté(e) par'', requerant_principal_civilite.libelle, requerant_principal.personne_morale_nom, requerant_principal.personne_morale_prenom))
        ELSE TRIM(CONCAT(requerant_principal.personne_morale_raison_sociale, '' '', requerant_principal.personne_morale_denomination))
    END as nom_complet_qualite_pm_requerant_principal,
    CASE WHEN requerant_principal.personne_morale_nom IS NOT NULL OR requerant_principal.personne_morale_prenom IS NOT NULL
        THEN requerant_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_requerant_principal,
    CASE WHEN requerant_principal.personne_morale_nom IS NOT NULL
        THEN requerant_principal.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_requerant_principal,
    CASE WHEN requerant_principal.personne_morale_prenom IS NOT NULL
        THEN requerant_principal.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_principal_civilite.libelle, requerant_principal.particulier_nom, requerant_principal.particulier_prenom))
        ELSE
            CASE WHEN requerant_principal.personne_morale_nom IS NOT NULL OR requerant_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_principal.personne_morale_raison_sociale, requerant_principal.personne_morale_denomination, ''représenté(e) par'', requerant_principal_civilite.libelle, requerant_principal.personne_morale_nom, requerant_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_principal.personne_morale_raison_sociale, '' '', requerant_principal.personne_morale_denomination))
            END
    END as nom_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_principal_civilite.libelle, requerant_principal.particulier_nom, requerant_principal.particulier_prenom))
        ELSE
            CASE WHEN requerant_principal.personne_morale_nom IS NOT NULL OR requerant_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_principal.personne_morale_raison_sociale, requerant_principal.personne_morale_denomination, ''représenté(e) par'', requerant_principal_civilite.libelle, requerant_principal.personne_morale_nom, requerant_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_principal.personne_morale_raison_sociale, '' '', requerant_principal.personne_morale_denomination))
            END
    END as nom_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier'' OR requerant_principal.personne_morale_nom IS NOT NULL OR requerant_principal.personne_morale_prenom IS NOT NULL
        THEN requerant_principal_civilite.libelle
        ELSE ''''
    END as civilite_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN requerant_principal.particulier_nom
        ELSE
            CASE WHEN requerant_principal.personne_morale_nom IS NOT NULL
                THEN requerant_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN requerant_principal.particulier_prenom
        ELSE
            CASE WHEN requerant_principal.personne_morale_prenom IS NOT NULL
                THEN requerant_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN ''''
        ELSE requerant_principal.personne_morale_raison_sociale
    END as raison_sociale_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN ''''
        ELSE requerant_principal.personne_morale_denomination
    END as denomination_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN ''''
        ELSE requerant_principal.personne_morale_siret
    END as siret_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN ''''
        ELSE requerant_principal.personne_morale_categorie_juridique
    END as categorie_juridique_requerant_principal,
    requerant_principal.numero as numero_requerant_principal,&DB_PREFIXEadresse(requerant_principal.numero::text, requerant_principal.voie::text, requerant_principal.complement::text, requerant_principal.lieu_dit::text, requerant_principal.bp::text, requerant_principal.code_postal::text, requerant_principal.localite::text, requerant_principal.cedex::text, requerant_principal.pays::text) as adresse_requerant_principal_sdl,&DB_PREFIXEadresse(requerant_principal.numero::text, requerant_principal.voie::text, requerant_principal.complement::text, requerant_principal.lieu_dit::text, requerant_principal.bp::text, requerant_principal.code_postal::text, requerant_principal.localite::text, requerant_principal.cedex::text, requerant_principal.pays::text, '' ''::text) as adresse_requerant_principal,
    requerant_principal.voie as voie_requerant_principal,
    requerant_principal.complement as complement_requerant_principal,
    requerant_principal.lieu_dit as lieu_dit_requerant_principal,
    CASE 
        WHEN requerant_principal.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', requerant_principal.bp)
    END as bp_requerant_principal,
    requerant_principal.code_postal as code_postal_requerant_principal,
    requerant_principal.localite as localite_requerant_principal,
    CASE 
        WHEN requerant_principal.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', requerant_principal.cedex)
    END as cedex_requerant_principal,
    requerant_principal.pays as pays_requerant_principal,
    requerant_principal.division_territoriale as division_territoriale_requerant_principal,

    --Coordonnées du requérant 1

    CASE WHEN requerant_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_1_civilite.libelle, requerant_1.particulier_nom, requerant_1.particulier_prenom))
        ELSE
            CASE WHEN requerant_1.personne_morale_nom IS NOT NULL OR requerant_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_1.personne_morale_raison_sociale, requerant_1.personne_morale_denomination, ''représenté(e) par'', requerant_1_civilite.libelle, requerant_1.personne_morale_nom, requerant_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_1.personne_morale_raison_sociale, '' '', requerant_1.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier'' OR requerant_1.personne_morale_nom IS NOT NULL OR requerant_1.personne_morale_prenom IS NOT NULL
        THEN requerant_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN requerant_1.particulier_nom
        ELSE
            CASE WHEN requerant_1.personne_morale_nom IS NOT NULL
                THEN requerant_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN requerant_1.particulier_prenom
        ELSE
            CASE WHEN requerant_1.personne_morale_prenom IS NOT NULL
                THEN requerant_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_1_civilite.libelle, requerant_1.particulier_nom, requerant_1.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN requerant_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN requerant_1.particulier_nom
        ELSE ''''
    END as nom_qualite_part_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN requerant_1.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_requerant_1,
    CASE WHEN requerant_1.personne_morale_nom IS NOT NULL OR requerant_1.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', requerant_1.personne_morale_raison_sociale, requerant_1.personne_morale_denomination, ''représenté(e) par'', requerant_1_civilite.libelle, requerant_1.personne_morale_nom, requerant_1.personne_morale_prenom))
        ELSE TRIM(CONCAT(requerant_1.personne_morale_raison_sociale, '' '', requerant_1.personne_morale_denomination))
    END as nom_complet_qualite_pm_requerant_1,
    CASE WHEN requerant_1.personne_morale_nom IS NOT NULL OR requerant_1.personne_morale_prenom IS NOT NULL
        THEN requerant_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_requerant_1,
    CASE WHEN requerant_1.personne_morale_nom IS NOT NULL
        THEN requerant_1.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_requerant_1,
    CASE WHEN requerant_1.personne_morale_prenom IS NOT NULL
        THEN requerant_1.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_1_civilite.libelle, requerant_1.particulier_nom, requerant_1.particulier_prenom))
        ELSE
            CASE WHEN requerant_1.personne_morale_nom IS NOT NULL OR requerant_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_1.personne_morale_raison_sociale, requerant_1.personne_morale_denomination, ''représenté(e) par'', requerant_1_civilite.libelle, requerant_1.personne_morale_nom, requerant_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_1.personne_morale_raison_sociale, '' '', requerant_1.personne_morale_denomination))
            END
    END as nom_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier'' OR requerant_1.personne_morale_nom IS NOT NULL OR requerant_1.personne_morale_prenom IS NOT NULL
        THEN requerant_1_civilite.libelle
        ELSE ''''
    END as civilite_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN requerant_1.particulier_nom
        ELSE
            CASE WHEN requerant_1.personne_morale_nom IS NOT NULL
                THEN requerant_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN requerant_1.particulier_prenom
        ELSE
            CASE WHEN requerant_1.personne_morale_prenom IS NOT NULL
                THEN requerant_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN ''''
        ELSE requerant_1.personne_morale_raison_sociale
    END as raison_sociale_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN ''''
        ELSE requerant_1.personne_morale_denomination
    END as denomination_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN ''''
        ELSE requerant_1.personne_morale_siret
    END as siret_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN ''''
        ELSE requerant_1.personne_morale_categorie_juridique
    END as categorie_juridique_requerant_1,
    requerant_1.numero as numero_requerant_1,&DB_PREFIXEadresse(requerant_1.numero::text, requerant_1.voie::text, requerant_1.complement::text, requerant_1.lieu_dit::text, requerant_1.bp::text, requerant_1.code_postal::text, requerant_1.localite::text, requerant_1.cedex::text, requerant_1.pays::text) as adresse_requerant_1_sdl,&DB_PREFIXEadresse(requerant_1.numero::text, requerant_1.voie::text, requerant_1.complement::text, requerant_1.lieu_dit::text, requerant_1.bp::text, requerant_1.code_postal::text, requerant_1.localite::text, requerant_1.cedex::text, requerant_1.pays::text, '' ''::text) as adresse_requerant_1,
    requerant_1.voie as voie_requerant_1,
    requerant_1.complement as complement_requerant_1,
    requerant_1.lieu_dit as lieu_dit_requerant_1,
    CASE 
        WHEN requerant_1.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', requerant_1.bp)
    END as bp_requerant_1,
    requerant_1.code_postal as code_postal_requerant_1,
    requerant_1.localite as localite_requerant_1,
    CASE 
        WHEN requerant_1.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', requerant_1.cedex)
    END as cedex_requerant_1,
    requerant_1.pays as pays_requerant_1,
    requerant_1.division_territoriale as division_territoriale_requerant_1,

    --Coordonnées du requérant 2

    CASE WHEN requerant_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_2_civilite.libelle, requerant_2.particulier_nom, requerant_2.particulier_prenom))
        ELSE
            CASE WHEN requerant_2.personne_morale_nom IS NOT NULL OR requerant_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_2.personne_morale_raison_sociale, requerant_2.personne_morale_denomination, ''représenté(e) par'', requerant_2_civilite.libelle, requerant_2.personne_morale_nom, requerant_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_2.personne_morale_raison_sociale, '' '', requerant_2.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier'' OR requerant_2.personne_morale_nom IS NOT NULL OR requerant_2.personne_morale_prenom IS NOT NULL
        THEN requerant_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN requerant_2.particulier_nom
        ELSE
            CASE WHEN requerant_2.personne_morale_nom IS NOT NULL
                THEN requerant_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN requerant_2.particulier_prenom
        ELSE
            CASE WHEN requerant_2.personne_morale_prenom IS NOT NULL
                THEN requerant_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_2_civilite.libelle, requerant_2.particulier_nom, requerant_2.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN requerant_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN requerant_2.particulier_nom
        ELSE ''''
    END as nom_qualite_part_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN requerant_2.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_requerant_2,
    CASE WHEN requerant_2.personne_morale_nom IS NOT NULL OR requerant_2.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', requerant_2.personne_morale_raison_sociale, requerant_2.personne_morale_denomination, ''représenté(e) par'', requerant_2_civilite.libelle, requerant_2.personne_morale_nom, requerant_2.personne_morale_prenom))
        ELSE TRIM(CONCAT(requerant_2.personne_morale_raison_sociale, '' '', requerant_2.personne_morale_denomination))
    END as nom_complet_qualite_pm_requerant_2,
    CASE WHEN requerant_2.personne_morale_nom IS NOT NULL OR requerant_2.personne_morale_prenom IS NOT NULL
        THEN requerant_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_requerant_2,
    CASE WHEN requerant_2.personne_morale_nom IS NOT NULL
        THEN requerant_2.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_requerant_2,
    CASE WHEN requerant_2.personne_morale_prenom IS NOT NULL
        THEN requerant_2.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_2_civilite.libelle, requerant_2.particulier_nom, requerant_2.particulier_prenom))
        ELSE
            CASE WHEN requerant_2.personne_morale_nom IS NOT NULL OR requerant_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_2.personne_morale_raison_sociale, requerant_2.personne_morale_denomination, ''représenté(e) par'', requerant_2_civilite.libelle, requerant_2.personne_morale_nom, requerant_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_2.personne_morale_raison_sociale, '' '', requerant_2.personne_morale_denomination))
            END
    END as nom_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier'' OR requerant_2.personne_morale_nom IS NOT NULL OR requerant_2.personne_morale_prenom IS NOT NULL
        THEN requerant_2_civilite.libelle
        ELSE ''''
    END as civilite_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN requerant_2.particulier_nom
        ELSE
            CASE WHEN requerant_2.personne_morale_nom IS NOT NULL
                THEN requerant_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN requerant_2.particulier_prenom
        ELSE
            CASE WHEN requerant_2.personne_morale_prenom IS NOT NULL
                THEN requerant_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN ''''
        ELSE requerant_2.personne_morale_raison_sociale
    END as raison_sociale_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN ''''
        ELSE requerant_2.personne_morale_denomination
    END as denomination_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN ''''
        ELSE requerant_2.personne_morale_categorie_juridique
    END as categorie_juridique_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN ''''
        ELSE requerant_2.personne_morale_siret
    END as siret_requerant_2,
    requerant_2.numero as numero_requerant_2,&DB_PREFIXEadresse(requerant_2.numero::text, requerant_2.voie::text, requerant_2.complement::text, requerant_2.lieu_dit::text, requerant_2.bp::text, requerant_2.code_postal::text, requerant_2.localite::text, requerant_2.cedex::text, requerant_2.pays::text) as adresse_requerant_2_sdl,&DB_PREFIXEadresse(requerant_2.numero::text, requerant_2.voie::text, requerant_2.complement::text, requerant_2.lieu_dit::text, requerant_2.bp::text, requerant_2.code_postal::text, requerant_2.localite::text, requerant_2.cedex::text, requerant_2.pays::text, '' ''::text) as adresse_requerant_2,
    requerant_2.voie as voie_requerant_2,
    requerant_2.complement as complement_requerant_2,
    requerant_2.lieu_dit as lieu_dit_requerant_2,
    CASE 
        WHEN requerant_2.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', requerant_2.bp)
    END as bp_requerant_2,
    requerant_2.code_postal as code_postal_requerant_2,
    requerant_2.localite as localite_requerant_2,
    CASE 
        WHEN requerant_2.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', requerant_2.cedex)
    END as cedex_requerant_2,
    requerant_2.pays as pays_requerant_2,
    requerant_2.division_territoriale as division_territoriale_requerant_2,

    --Coordonnées du requérant 3

    CASE WHEN requerant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_3_civilite.libelle, requerant_3.particulier_nom, requerant_3.particulier_prenom))
        ELSE
            CASE WHEN requerant_3.personne_morale_nom IS NOT NULL OR requerant_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_3.personne_morale_raison_sociale, requerant_3.personne_morale_denomination, ''représenté(e) par'', requerant_3_civilite.libelle, requerant_3.personne_morale_nom, requerant_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_3.personne_morale_raison_sociale, '' '', requerant_3.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier'' OR requerant_3.personne_morale_nom IS NOT NULL OR requerant_3.personne_morale_prenom IS NOT NULL
        THEN requerant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN requerant_3.particulier_nom
        ELSE
            CASE WHEN requerant_3.personne_morale_nom IS NOT NULL
                THEN requerant_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN requerant_3.particulier_prenom
        ELSE
            CASE WHEN requerant_3.personne_morale_prenom IS NOT NULL
                THEN requerant_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_3_civilite.libelle, requerant_3.particulier_nom, requerant_3.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN requerant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN requerant_3.particulier_nom
        ELSE ''''
    END as nom_qualite_part_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN requerant_3.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_requerant_3,
    CASE WHEN requerant_3.personne_morale_nom IS NOT NULL OR requerant_3.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', requerant_3.personne_morale_raison_sociale, requerant_3.personne_morale_denomination, ''représenté(e) par'', requerant_3_civilite.libelle, requerant_3.personne_morale_nom, requerant_3.personne_morale_prenom))
        ELSE TRIM(CONCAT(requerant_3.personne_morale_raison_sociale, '' '', requerant_3.personne_morale_denomination))
    END as nom_complet_qualite_pm_requerant_3,
    CASE WHEN requerant_3.personne_morale_nom IS NOT NULL OR requerant_3.personne_morale_prenom IS NOT NULL
        THEN requerant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_requerant_3,
    CASE WHEN requerant_3.personne_morale_nom IS NOT NULL
        THEN requerant_3.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_requerant_3,
    CASE WHEN requerant_3.personne_morale_prenom IS NOT NULL
        THEN requerant_3.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_3_civilite.libelle, requerant_3.particulier_nom, requerant_3.particulier_prenom))
        ELSE
            CASE WHEN requerant_3.personne_morale_nom IS NOT NULL OR requerant_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_3.personne_morale_raison_sociale, requerant_3.personne_morale_denomination, ''représenté(e) par'', requerant_3_civilite.libelle, requerant_3.personne_morale_nom, requerant_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_3.personne_morale_raison_sociale, '' '', requerant_3.personne_morale_denomination))
            END
    END as nom_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier'' OR requerant_3.personne_morale_nom IS NOT NULL OR requerant_3.personne_morale_prenom IS NOT NULL
        THEN requerant_3_civilite.libelle
        ELSE ''''
    END as civilite_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN requerant_3.particulier_nom
        ELSE
            CASE WHEN requerant_3.personne_morale_nom IS NOT NULL
                THEN requerant_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN requerant_3.particulier_prenom
        ELSE
            CASE WHEN requerant_3.personne_morale_prenom IS NOT NULL
                THEN requerant_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN ''''
        ELSE requerant_3.personne_morale_raison_sociale
    END as raison_sociale_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN ''''
        ELSE requerant_3.personne_morale_denomination
    END as denomination_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN ''''
        ELSE requerant_3.personne_morale_siret
    END as siret_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN ''''
        ELSE requerant_3.personne_morale_categorie_juridique
    END as categorie_juridique_requerant_3,
    requerant_3.numero as numero_requerant_3,&DB_PREFIXEadresse(requerant_3.numero::text, requerant_3.voie::text, requerant_3.complement::text, requerant_3.lieu_dit::text, requerant_3.bp::text, requerant_3.code_postal::text, requerant_3.localite::text, requerant_3.cedex::text, requerant_3.pays::text) as adresse_requerant_3_sdl,&DB_PREFIXEadresse(requerant_3.numero::text, requerant_3.voie::text, requerant_3.complement::text, requerant_3.lieu_dit::text, requerant_3.bp::text, requerant_3.code_postal::text, requerant_3.localite::text, requerant_3.cedex::text, requerant_3.pays::text, '' ''::text) as adresse_requerant_3,
    requerant_3.voie as voie_requerant_3,
    requerant_3.complement as complement_requerant_3,
    requerant_3.lieu_dit as lieu_dit_requerant_3,
    CASE 
        WHEN requerant_3.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', requerant_3.bp)
    END as bp_requerant_3,
    requerant_3.code_postal as code_postal_requerant_3,
    requerant_3.localite as localite_requerant_3,
    CASE 
        WHEN requerant_3.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', requerant_3.cedex)
    END as cedex_requerant_3,
    requerant_3.pays as pays_requerant_3,
    requerant_3.division_territoriale as division_territoriale_requerant_3,

    --Coordonnées du requérant 4

    CASE WHEN requerant_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_4_civilite.libelle, requerant_4.particulier_nom, requerant_4.particulier_prenom))
        ELSE
            CASE WHEN requerant_4.personne_morale_nom IS NOT NULL OR requerant_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_4.personne_morale_raison_sociale, requerant_4.personne_morale_denomination, ''représenté(e) par'', requerant_4_civilite.libelle, requerant_4.personne_morale_nom, requerant_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_4.personne_morale_raison_sociale, '' '', requerant_4.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier'' OR requerant_4.personne_morale_nom IS NOT NULL OR requerant_4.personne_morale_prenom IS NOT NULL
        THEN requerant_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN requerant_4.particulier_nom
        ELSE
            CASE WHEN requerant_4.personne_morale_nom IS NOT NULL
                THEN requerant_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN requerant_4.particulier_prenom
        ELSE
            CASE WHEN requerant_4.personne_morale_prenom IS NOT NULL
                THEN requerant_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_4_civilite.libelle, requerant_4.particulier_nom, requerant_4.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN requerant_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN requerant_4.particulier_nom
        ELSE ''''
    END as nom_qualite_part_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN requerant_4.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_requerant_4,
    CASE WHEN requerant_4.personne_morale_nom IS NOT NULL OR requerant_4.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', requerant_4.personne_morale_raison_sociale, requerant_4.personne_morale_denomination, ''représenté(e) par'', requerant_4_civilite.libelle, requerant_4.personne_morale_nom, requerant_4.personne_morale_prenom))
        ELSE TRIM(CONCAT(requerant_4.personne_morale_raison_sociale, '' '', requerant_4.personne_morale_denomination))
    END as nom_complet_qualite_pm_requerant_4,
    CASE WHEN requerant_4.personne_morale_nom IS NOT NULL OR requerant_4.personne_morale_prenom IS NOT NULL
        THEN requerant_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_requerant_4,
    CASE WHEN requerant_4.personne_morale_nom IS NOT NULL
        THEN requerant_4.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_requerant_4,
    CASE WHEN requerant_4.personne_morale_prenom IS NOT NULL
        THEN requerant_4.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_4_civilite.libelle, requerant_4.particulier_nom, requerant_4.particulier_prenom))
        ELSE
            CASE WHEN requerant_4.personne_morale_nom IS NOT NULL OR requerant_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_4.personne_morale_raison_sociale, requerant_4.personne_morale_denomination, ''représenté(e) par'', requerant_4_civilite.libelle, requerant_4.personne_morale_nom, requerant_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_4.personne_morale_raison_sociale, '' '', requerant_4.personne_morale_denomination))
            END
    END as nom_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier'' OR requerant_4.personne_morale_nom IS NOT NULL OR requerant_4.personne_morale_prenom IS NOT NULL
        THEN requerant_4_civilite.libelle
        ELSE ''''
    END as civilite_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN requerant_4.particulier_nom
        ELSE
            CASE WHEN requerant_4.personne_morale_nom IS NOT NULL
                THEN requerant_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN requerant_4.particulier_prenom
        ELSE
            CASE WHEN requerant_4.personne_morale_prenom IS NOT NULL
                THEN requerant_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN ''''
        ELSE requerant_4.personne_morale_raison_sociale
    END as raison_sociale_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN ''''
        ELSE requerant_4.personne_morale_denomination
    END as denomination_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN ''''
        ELSE requerant_4.personne_morale_categorie_juridique
    END as categorie_juridique_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN ''''
        ELSE requerant_4.personne_morale_siret
    END as siret_requerant_4,
    requerant_4.numero as numero_requerant_4,&DB_PREFIXEadresse(requerant_4.numero::text, requerant_4.voie::text, requerant_4.complement::text, requerant_4.lieu_dit::text, requerant_4.bp::text, requerant_4.code_postal::text, requerant_4.localite::text, requerant_4.cedex::text, requerant_4.pays::text) as adresse_requerant_4_sdl,&DB_PREFIXEadresse(requerant_4.numero::text, requerant_4.voie::text, requerant_4.complement::text, requerant_4.lieu_dit::text, requerant_4.bp::text, requerant_4.code_postal::text, requerant_4.localite::text, requerant_4.cedex::text, requerant_4.pays::text, '' ''::text) as adresse_requerant_4,
    requerant_4.voie as voie_requerant_4,
    requerant_4.complement as complement_requerant_4,
    requerant_4.lieu_dit as lieu_dit_requerant_4,
    CASE 
        WHEN requerant_4.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', requerant_4.bp)
    END as bp_requerant_4,
    requerant_4.code_postal as code_postal_requerant_4,
    requerant_4.localite as localite_requerant_4,
    CASE 
        WHEN requerant_4.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', requerant_4.cedex)
    END as cedex_requerant_4,
    requerant_4.pays as pays_requerant_4,
    requerant_4.division_territoriale as division_territoriale_requerant_4,

    --Coordonnées du requérant 5

    CASE WHEN requerant_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_5_civilite.libelle, requerant_5.particulier_nom, requerant_5.particulier_prenom))
        ELSE
            CASE WHEN requerant_5.personne_morale_nom IS NOT NULL OR requerant_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_5.personne_morale_raison_sociale, requerant_5.personne_morale_denomination, ''représenté(e) par'', requerant_5_civilite.libelle, requerant_5.personne_morale_nom, requerant_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_5.personne_morale_raison_sociale, '' '', requerant_5.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier'' OR requerant_5.personne_morale_nom IS NOT NULL OR requerant_5.personne_morale_prenom IS NOT NULL
        THEN requerant_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN requerant_5.particulier_nom
        ELSE
            CASE WHEN requerant_5.personne_morale_nom IS NOT NULL
                THEN requerant_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN requerant_5.particulier_prenom
        ELSE
            CASE WHEN requerant_5.personne_morale_prenom IS NOT NULL
                THEN requerant_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_5_civilite.libelle, requerant_5.particulier_nom, requerant_5.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN requerant_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN requerant_5.particulier_nom
        ELSE ''''
    END as nom_qualite_part_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN requerant_5.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_requerant_5,
    CASE WHEN requerant_5.personne_morale_nom IS NOT NULL OR requerant_5.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', requerant_5.personne_morale_raison_sociale, requerant_5.personne_morale_denomination, ''représenté(e) par'', requerant_5_civilite.libelle, requerant_5.personne_morale_nom, requerant_5.personne_morale_prenom))
        ELSE TRIM(CONCAT(requerant_5.personne_morale_raison_sociale, '' '', requerant_5.personne_morale_denomination))
    END as nom_complet_qualite_pm_requerant_5,
    CASE WHEN requerant_5.personne_morale_nom IS NOT NULL OR requerant_5.personne_morale_prenom IS NOT NULL
        THEN requerant_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_requerant_5,
    CASE WHEN requerant_5.personne_morale_nom IS NOT NULL
        THEN requerant_5.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_requerant_5,
    CASE WHEN requerant_5.personne_morale_prenom IS NOT NULL
        THEN requerant_5.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_5_civilite.libelle, requerant_5.particulier_nom, requerant_5.particulier_prenom))
        ELSE
            CASE WHEN requerant_5.personne_morale_nom IS NOT NULL OR requerant_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_5.personne_morale_raison_sociale, requerant_5.personne_morale_denomination, ''représenté(e) par'', requerant_5_civilite.libelle, requerant_5.personne_morale_nom, requerant_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_5.personne_morale_raison_sociale, '' '', requerant_5.personne_morale_denomination))
            END
    END as nom_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier'' OR requerant_5.personne_morale_nom IS NOT NULL OR requerant_5.personne_morale_prenom IS NOT NULL
        THEN requerant_5_civilite.libelle
        ELSE ''''
    END as civilite_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN requerant_5.particulier_nom
        ELSE
            CASE WHEN requerant_5.personne_morale_nom IS NOT NULL
                THEN requerant_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN requerant_5.particulier_prenom
        ELSE
            CASE WHEN requerant_5.personne_morale_prenom IS NOT NULL
                THEN requerant_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN ''''
        ELSE requerant_5.personne_morale_raison_sociale
    END as raison_sociale_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN ''''
        ELSE requerant_5.personne_morale_denomination
    END as denomination_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN ''''
        ELSE requerant_5.personne_morale_categorie_juridique
    END as categorie_juridique_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN ''''
        ELSE requerant_5.personne_morale_siret
    END as siret_requerant_5,
    requerant_5.numero as numero_requerant_5,&DB_PREFIXEadresse(requerant_5.numero::text, requerant_5.voie::text, requerant_5.complement::text, requerant_5.lieu_dit::text, requerant_5.bp::text, requerant_5.code_postal::text, requerant_5.localite::text, requerant_5.cedex::text, requerant_5.pays::text) as adresse_requerant_5_sdl,&DB_PREFIXEadresse(requerant_5.numero::text, requerant_5.voie::text, requerant_5.complement::text, requerant_5.lieu_dit::text, requerant_5.bp::text, requerant_5.code_postal::text, requerant_5.localite::text, requerant_5.cedex::text, requerant_5.pays::text, '' ''::text) as adresse_requerant_5,
    requerant_5.voie as voie_requerant_5,
    requerant_5.complement as complement_requerant_5,
    requerant_5.lieu_dit as lieu_dit_requerant_5,
    CASE 
        WHEN requerant_5.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', requerant_5.bp)
    END as bp_requerant_5,
    requerant_5.code_postal as code_postal_requerant_5,
    requerant_5.localite as localite_requerant_5,
    CASE 
        WHEN requerant_5.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', requerant_5.cedex)
    END as cedex_requerant_5,
    requerant_5.pays as pays_requerant_5,
    requerant_5.division_territoriale as division_territoriale_requerant_5,

    --Coordonnées de l''avocat principal

    CASE WHEN avocat_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_principal_civilite.libelle, avocat_principal.particulier_nom, avocat_principal.particulier_prenom))
        ELSE
            CASE WHEN avocat_principal.personne_morale_nom IS NOT NULL OR avocat_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', avocat_principal.personne_morale_raison_sociale, avocat_principal.personne_morale_denomination, ''représenté(e) par'', avocat_principal_civilite.libelle, avocat_principal.personne_morale_nom, avocat_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(avocat_principal.personne_morale_raison_sociale, '' '', avocat_principal.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier'' OR avocat_principal.personne_morale_nom IS NOT NULL OR avocat_principal.personne_morale_prenom IS NOT NULL
        THEN avocat_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN avocat_principal.particulier_nom
        ELSE
            CASE WHEN avocat_principal.personne_morale_nom IS NOT NULL
                THEN avocat_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN avocat_principal.particulier_prenom
        ELSE
            CASE WHEN avocat_principal.personne_morale_prenom IS NOT NULL
                THEN avocat_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_principal_civilite.libelle, avocat_principal.particulier_nom, avocat_principal.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN avocat_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN avocat_principal.particulier_nom
        ELSE ''''
    END as nom_qualite_part_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN avocat_principal.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_avocat_principal,
    CASE WHEN avocat_principal.personne_morale_nom IS NOT NULL OR avocat_principal.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', avocat_principal.personne_morale_raison_sociale, avocat_principal.personne_morale_denomination, ''représenté(e) par'', avocat_principal_civilite.libelle, avocat_principal.personne_morale_nom, avocat_principal.personne_morale_prenom))
        ELSE TRIM(CONCAT(avocat_principal.personne_morale_raison_sociale, '' '', avocat_principal.personne_morale_denomination))
    END as nom_complet_qualite_pm_avocat_principal,
    CASE WHEN avocat_principal.personne_morale_nom IS NOT NULL OR avocat_principal.personne_morale_prenom IS NOT NULL
        THEN avocat_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_avocat_principal,
    CASE WHEN avocat_principal.personne_morale_nom IS NOT NULL
        THEN avocat_principal.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_avocat_principal,
    CASE WHEN avocat_principal.personne_morale_prenom IS NOT NULL
        THEN avocat_principal.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_principal_civilite.libelle, avocat_principal.particulier_nom, avocat_principal.particulier_prenom))
        ELSE
            CASE WHEN avocat_principal.personne_morale_nom IS NOT NULL OR avocat_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', avocat_principal.personne_morale_raison_sociale, avocat_principal.personne_morale_denomination, ''représenté(e) par'', avocat_principal_civilite.libelle, avocat_principal.personne_morale_nom, avocat_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(avocat_principal.personne_morale_raison_sociale, '' '', avocat_principal.personne_morale_denomination))
            END
    END as nom_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier'' OR avocat_principal.personne_morale_nom IS NOT NULL OR avocat_principal.personne_morale_prenom IS NOT NULL
        THEN avocat_principal_civilite.libelle
        ELSE ''''
    END as civilite_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN avocat_principal.particulier_nom
        ELSE
            CASE WHEN avocat_principal.personne_morale_nom IS NOT NULL
                THEN avocat_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN avocat_principal.particulier_prenom
        ELSE
            CASE WHEN avocat_principal.personne_morale_prenom IS NOT NULL
                THEN avocat_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN ''''
        ELSE avocat_principal.personne_morale_raison_sociale
    END as raison_sociale_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN ''''
        ELSE avocat_principal.personne_morale_denomination
    END as denomination_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN ''''
        ELSE avocat_principal.personne_morale_siret
    END as siret_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN ''''
        ELSE avocat_principal.personne_morale_categorie_juridique
    END as categorie_juridique_avocat_principal,
    avocat_principal.numero as numero_avocat_principal,&DB_PREFIXEadresse(avocat_principal.numero::text, avocat_principal.voie::text, avocat_principal.complement::text, avocat_principal.lieu_dit::text, avocat_principal.bp::text, avocat_principal.code_postal::text, avocat_principal.localite::text, avocat_principal.cedex::text, avocat_principal.pays::text) as adresse_avocat_principal_sdl,&DB_PREFIXEadresse(avocat_principal.numero::text, avocat_principal.voie::text, avocat_principal.complement::text, avocat_principal.lieu_dit::text, avocat_principal.bp::text, avocat_principal.code_postal::text, avocat_principal.localite::text, avocat_principal.cedex::text, avocat_principal.pays::text, '' ''::text) as adresse_avocat_principal,
    avocat_principal.voie as voie_avocat_principal,
    avocat_principal.complement as complement_avocat_principal,
    avocat_principal.lieu_dit as lieu_dit_avocat_principal,
    CASE 
        WHEN avocat_principal.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', avocat_principal.bp)
    END as bp_avocat_principal,
    avocat_principal.code_postal as code_postal_avocat_principal,
    avocat_principal.localite as localite_avocat_principal,
    CASE 
        WHEN avocat_principal.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', avocat_principal.cedex)
    END as cedex_avocat_principal,
    avocat_principal.pays as pays_avocat_principal,
    avocat_principal.division_territoriale as division_territoriale_avocat_principal,

    --Coordonnées de l''avocat 1

    CASE WHEN avocat_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_1_civilite.libelle, avocat_1.particulier_nom, avocat_1.particulier_prenom))
        ELSE
            CASE WHEN avocat_1.personne_morale_nom IS NOT NULL OR avocat_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', avocat_1.personne_morale_raison_sociale, avocat_1.personne_morale_denomination, ''représenté(e) par'', avocat_1_civilite.libelle, avocat_1.personne_morale_nom, avocat_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(avocat_1.personne_morale_raison_sociale, '' '', avocat_1.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier'' OR avocat_1.personne_morale_nom IS NOT NULL OR avocat_1.personne_morale_prenom IS NOT NULL
        THEN avocat_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN avocat_1.particulier_nom
        ELSE
            CASE WHEN avocat_1.personne_morale_nom IS NOT NULL
                THEN avocat_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN avocat_1.particulier_prenom
        ELSE
            CASE WHEN avocat_1.personne_morale_prenom IS NOT NULL
                THEN avocat_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_1_civilite.libelle, avocat_1.particulier_nom, avocat_1.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN avocat_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN avocat_1.particulier_nom
        ELSE ''''
    END as nom_qualite_part_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN avocat_1.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_avocat_1,
    CASE WHEN avocat_1.personne_morale_nom IS NOT NULL OR avocat_1.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', avocat_1.personne_morale_raison_sociale, avocat_1.personne_morale_denomination, ''représenté(e) par'', avocat_1_civilite.libelle, avocat_1.personne_morale_nom, avocat_1.personne_morale_prenom))
        ELSE TRIM(CONCAT(avocat_1.personne_morale_raison_sociale, '' '', avocat_1.personne_morale_denomination))
    END as nom_complet_qualite_pm_avocat_1,
    CASE WHEN avocat_1.personne_morale_nom IS NOT NULL OR avocat_1.personne_morale_prenom IS NOT NULL
        THEN avocat_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_avocat_1,
    CASE WHEN avocat_1.personne_morale_nom IS NOT NULL
        THEN avocat_1.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_avocat_1,
    CASE WHEN avocat_1.personne_morale_prenom IS NOT NULL
        THEN avocat_1.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_1_civilite.libelle, avocat_1.particulier_nom, avocat_1.particulier_prenom))
        ELSE
            CASE WHEN avocat_1.personne_morale_nom IS NOT NULL OR avocat_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', avocat_1.personne_morale_raison_sociale, avocat_1.personne_morale_denomination, ''représenté(e) par'', avocat_1_civilite.libelle, avocat_1.personne_morale_nom, avocat_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(avocat_1.personne_morale_raison_sociale, '' '', avocat_1.personne_morale_denomination))
            END
    END as nom_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier'' OR avocat_1.personne_morale_nom IS NOT NULL OR avocat_1.personne_morale_prenom IS NOT NULL
        THEN avocat_1_civilite.libelle
        ELSE ''''
    END as civilite_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN avocat_1.particulier_nom
        ELSE
            CASE WHEN avocat_1.personne_morale_nom IS NOT NULL
                THEN avocat_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN avocat_1.particulier_prenom
        ELSE
            CASE WHEN avocat_1.personne_morale_prenom IS NOT NULL
                THEN avocat_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN ''''
        ELSE avocat_1.personne_morale_raison_sociale
    END as raison_sociale_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN ''''
        ELSE avocat_1.personne_morale_denomination
    END as denomination_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN ''''
        ELSE avocat_1.personne_morale_siret
    END as siret_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN ''''
        ELSE avocat_1.personne_morale_categorie_juridique
    END as categorie_juridique_avocat_1,
    avocat_1.numero as numero_avocat_1,&DB_PREFIXEadresse(avocat_1.numero::text, avocat_1.voie::text, avocat_1.complement::text, avocat_1.lieu_dit::text, avocat_1.bp::text, avocat_1.code_postal::text, avocat_1.localite::text, avocat_1.cedex::text, avocat_1.pays::text) as adresse_avocat_1_sdl,&DB_PREFIXEadresse(avocat_1.numero::text, avocat_1.voie::text, avocat_1.complement::text, avocat_1.lieu_dit::text, avocat_1.bp::text, avocat_1.code_postal::text, avocat_1.localite::text, avocat_1.cedex::text, avocat_1.pays::text, '' ''::text) as adresse_avocat_1,
    avocat_1.voie as voie_avocat_1,
    avocat_1.complement as complement_avocat_1,
    avocat_1.lieu_dit as lieu_dit_avocat_1,
    CASE 
        WHEN avocat_1.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', avocat_1.bp)
    END as bp_avocat_1,
    avocat_1.code_postal as code_postal_avocat_1,
    avocat_1.localite as localite_avocat_1,
    CASE 
        WHEN avocat_1.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', avocat_1.cedex)
    END as cedex_avocat_1,
    avocat_1.pays as pays_avocat_1,
    avocat_1.division_territoriale as division_territoriale_avocat_1,

    --Coordonnées de l''avocat 2

    CASE WHEN avocat_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_2_civilite.libelle, avocat_2.particulier_nom, avocat_2.particulier_prenom))
        ELSE
            CASE WHEN avocat_2.personne_morale_nom IS NOT NULL OR avocat_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', avocat_2.personne_morale_raison_sociale, avocat_2.personne_morale_denomination, ''représenté(e) par'', avocat_2_civilite.libelle, avocat_2.personne_morale_nom, avocat_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(avocat_2.personne_morale_raison_sociale, '' '', avocat_2.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier'' OR avocat_2.personne_morale_nom IS NOT NULL OR avocat_2.personne_morale_prenom IS NOT NULL
        THEN avocat_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN avocat_2.particulier_nom
        ELSE
            CASE WHEN avocat_2.personne_morale_nom IS NOT NULL
                THEN avocat_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN avocat_2.particulier_prenom
        ELSE
            CASE WHEN avocat_2.personne_morale_prenom IS NOT NULL
                THEN avocat_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_2_civilite.libelle, avocat_2.particulier_nom, avocat_2.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN avocat_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN avocat_2.particulier_nom
        ELSE ''''
    END as nom_qualite_part_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN avocat_2.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_avocat_2,
    CASE WHEN avocat_2.personne_morale_nom IS NOT NULL OR avocat_2.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', avocat_2.personne_morale_raison_sociale, avocat_2.personne_morale_denomination, ''représenté(e) par'', avocat_2_civilite.libelle, avocat_2.personne_morale_nom, avocat_2.personne_morale_prenom))
        ELSE TRIM(CONCAT(avocat_2.personne_morale_raison_sociale, '' '', avocat_2.personne_morale_denomination))
    END as nom_complet_qualite_pm_avocat_2,
    CASE WHEN avocat_2.personne_morale_nom IS NOT NULL OR avocat_2.personne_morale_prenom IS NOT NULL
        THEN avocat_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_avocat_2,
    CASE WHEN avocat_2.personne_morale_nom IS NOT NULL
        THEN avocat_2.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_avocat_2,
    CASE WHEN avocat_2.personne_morale_prenom IS NOT NULL
        THEN avocat_2.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_2_civilite.libelle, avocat_2.particulier_nom, avocat_2.particulier_prenom))
        ELSE
            CASE WHEN avocat_2.personne_morale_nom IS NOT NULL OR avocat_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', avocat_2.personne_morale_raison_sociale, avocat_2.personne_morale_denomination, ''représenté(e) par'', avocat_2_civilite.libelle, avocat_2.personne_morale_nom, avocat_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(avocat_2.personne_morale_raison_sociale, '' '', avocat_2.personne_morale_denomination))
            END
    END as nom_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier'' OR avocat_2.personne_morale_nom IS NOT NULL OR avocat_2.personne_morale_prenom IS NOT NULL
        THEN avocat_2_civilite.libelle
        ELSE ''''
    END as civilite_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN avocat_2.particulier_nom
        ELSE
            CASE WHEN avocat_2.personne_morale_nom IS NOT NULL
                THEN avocat_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN avocat_2.particulier_prenom
        ELSE
            CASE WHEN avocat_2.personne_morale_prenom IS NOT NULL
                THEN avocat_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN ''''
        ELSE avocat_2.personne_morale_raison_sociale
    END as raison_sociale_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN ''''
        ELSE avocat_2.personne_morale_denomination
    END as denomination_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN ''''
        ELSE avocat_2.personne_morale_categorie_juridique
    END as categorie_juridique_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN ''''
        ELSE avocat_2.personne_morale_siret
    END as siret_avocat_2,
    avocat_2.numero as numero_avocat_2,&DB_PREFIXEadresse(avocat_2.numero::text, avocat_2.voie::text, avocat_2.complement::text, avocat_2.lieu_dit::text, avocat_2.bp::text, avocat_2.code_postal::text, avocat_2.localite::text, avocat_2.cedex::text, avocat_2.pays::text) as adresse_avocat_2_sdl,&DB_PREFIXEadresse(avocat_2.numero::text, avocat_2.voie::text, avocat_2.complement::text, avocat_2.lieu_dit::text, avocat_2.bp::text, avocat_2.code_postal::text, avocat_2.localite::text, avocat_2.cedex::text, avocat_2.pays::text, '' ''::text) as adresse_avocat_2,
    avocat_2.voie as voie_avocat_2,
    avocat_2.complement as complement_avocat_2,
    avocat_2.lieu_dit as lieu_dit_avocat_2,
    CASE 
        WHEN avocat_2.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', avocat_2.bp)
    END as bp_avocat_2,
    avocat_2.code_postal as code_postal_avocat_2,
    avocat_2.localite as localite_avocat_2,
    CASE 
        WHEN avocat_2.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', avocat_2.cedex)
    END as cedex_avocat_2,
    avocat_2.pays as pays_avocat_2,
    avocat_2.division_territoriale as division_territoriale_avocat_2,

    --Coordonnées de l''avocat 3

    CASE WHEN avocat_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_3_civilite.libelle, avocat_3.particulier_nom, avocat_3.particulier_prenom))
        ELSE
            CASE WHEN avocat_3.personne_morale_nom IS NOT NULL OR avocat_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', avocat_3.personne_morale_raison_sociale, avocat_3.personne_morale_denomination, ''représenté(e) par'', avocat_3_civilite.libelle, avocat_3.personne_morale_nom, avocat_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(avocat_3.personne_morale_raison_sociale, '' '', avocat_3.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier'' OR avocat_3.personne_morale_nom IS NOT NULL OR avocat_3.personne_morale_prenom IS NOT NULL
        THEN avocat_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN avocat_3.particulier_nom
        ELSE
            CASE WHEN avocat_3.personne_morale_nom IS NOT NULL
                THEN avocat_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN avocat_3.particulier_prenom
        ELSE
            CASE WHEN avocat_3.personne_morale_prenom IS NOT NULL
                THEN avocat_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_3_civilite.libelle, avocat_3.particulier_nom, avocat_3.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN avocat_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN avocat_3.particulier_nom
        ELSE ''''
    END as nom_qualite_part_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN avocat_3.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_avocat_3,
    CASE WHEN avocat_3.personne_morale_nom IS NOT NULL OR avocat_3.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', avocat_3.personne_morale_raison_sociale, avocat_3.personne_morale_denomination, ''représenté(e) par'', avocat_3_civilite.libelle, avocat_3.personne_morale_nom, avocat_3.personne_morale_prenom))
        ELSE TRIM(CONCAT(avocat_3.personne_morale_raison_sociale, '' '', avocat_3.personne_morale_denomination))
    END as nom_complet_qualite_pm_avocat_3,
    CASE WHEN avocat_3.personne_morale_nom IS NOT NULL OR avocat_3.personne_morale_prenom IS NOT NULL
        THEN avocat_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_avocat_3,
    CASE WHEN avocat_3.personne_morale_nom IS NOT NULL
        THEN avocat_3.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_avocat_3,
    CASE WHEN avocat_3.personne_morale_prenom IS NOT NULL
        THEN avocat_3.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_3_civilite.libelle, avocat_3.particulier_nom, avocat_3.particulier_prenom))
        ELSE
            CASE WHEN avocat_3.personne_morale_nom IS NOT NULL OR avocat_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', avocat_3.personne_morale_raison_sociale, avocat_3.personne_morale_denomination, ''représenté(e) par'', avocat_3_civilite.libelle, avocat_3.personne_morale_nom, avocat_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(avocat_3.personne_morale_raison_sociale, '' '', avocat_3.personne_morale_denomination))
            END
    END as nom_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier'' OR avocat_3.personne_morale_nom IS NOT NULL OR avocat_3.personne_morale_prenom IS NOT NULL
        THEN avocat_3_civilite.libelle
        ELSE ''''
    END as civilite_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN avocat_3.particulier_nom
        ELSE
            CASE WHEN avocat_3.personne_morale_nom IS NOT NULL
                THEN avocat_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN avocat_3.particulier_prenom
        ELSE
            CASE WHEN avocat_3.personne_morale_prenom IS NOT NULL
                THEN avocat_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN ''''
        ELSE avocat_3.personne_morale_raison_sociale
    END as raison_sociale_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN ''''
        ELSE avocat_3.personne_morale_denomination
    END as denomination_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN ''''
        ELSE avocat_3.personne_morale_siret
    END as siret_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN ''''
        ELSE avocat_3.personne_morale_categorie_juridique
    END as categorie_juridique_avocat_3,
    avocat_3.numero as numero_avocat_3,&DB_PREFIXEadresse(avocat_3.numero::text, avocat_3.voie::text, avocat_3.complement::text, avocat_3.lieu_dit::text, avocat_3.bp::text, avocat_3.code_postal::text, avocat_3.localite::text, avocat_3.cedex::text, avocat_3.pays::text) as adresse_avocat_3_sdl,&DB_PREFIXEadresse(avocat_3.numero::text, avocat_3.voie::text, avocat_3.complement::text, avocat_3.lieu_dit::text, avocat_3.bp::text, avocat_3.code_postal::text, avocat_3.localite::text, avocat_3.cedex::text, avocat_3.pays::text, '' ''::text) as adresse_avocat_3,
    avocat_3.voie as voie_avocat_3,
    avocat_3.complement as complement_avocat_3,
    avocat_3.lieu_dit as lieu_dit_avocat_3,
    CASE 
        WHEN avocat_3.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', avocat_3.bp)
    END as bp_avocat_3,
    avocat_3.code_postal as code_postal_avocat_3,
    avocat_3.localite as localite_avocat_3,
    CASE 
        WHEN avocat_3.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', avocat_3.cedex)
    END as cedex_avocat_3,
    avocat_3.pays as pays_avocat_3,
    avocat_3.division_territoriale as division_territoriale_avocat_3,

    --Coordonnées de l''avocat 4

    CASE WHEN avocat_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_4_civilite.libelle, avocat_4.particulier_nom, avocat_4.particulier_prenom))
        ELSE
            CASE WHEN avocat_4.personne_morale_nom IS NOT NULL OR avocat_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', avocat_4.personne_morale_raison_sociale, avocat_4.personne_morale_denomination, ''représenté(e) par'', avocat_4_civilite.libelle, avocat_4.personne_morale_nom, avocat_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(avocat_4.personne_morale_raison_sociale, '' '', avocat_4.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier'' OR avocat_4.personne_morale_nom IS NOT NULL OR avocat_4.personne_morale_prenom IS NOT NULL
        THEN avocat_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN avocat_4.particulier_nom
        ELSE
            CASE WHEN avocat_4.personne_morale_nom IS NOT NULL
                THEN avocat_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN avocat_4.particulier_prenom
        ELSE
            CASE WHEN avocat_4.personne_morale_prenom IS NOT NULL
                THEN avocat_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_4_civilite.libelle, avocat_4.particulier_nom, avocat_4.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN avocat_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN avocat_4.particulier_nom
        ELSE ''''
    END as nom_qualite_part_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN avocat_4.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_avocat_4,
    CASE WHEN avocat_4.personne_morale_nom IS NOT NULL OR avocat_4.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', avocat_4.personne_morale_raison_sociale, avocat_4.personne_morale_denomination, ''représenté(e) par'', avocat_4_civilite.libelle, avocat_4.personne_morale_nom, avocat_4.personne_morale_prenom))
        ELSE TRIM(CONCAT(avocat_4.personne_morale_raison_sociale, '' '', avocat_4.personne_morale_denomination))
    END as nom_complet_qualite_pm_avocat_4,
    CASE WHEN avocat_4.personne_morale_nom IS NOT NULL OR avocat_4.personne_morale_prenom IS NOT NULL
        THEN avocat_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_avocat_4,
    CASE WHEN avocat_4.personne_morale_nom IS NOT NULL
        THEN avocat_4.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_avocat_4,
    CASE WHEN avocat_4.personne_morale_prenom IS NOT NULL
        THEN avocat_4.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_4_civilite.libelle, avocat_4.particulier_nom, avocat_4.particulier_prenom))
        ELSE
            CASE WHEN avocat_4.personne_morale_nom IS NOT NULL OR avocat_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', avocat_4.personne_morale_raison_sociale, avocat_4.personne_morale_denomination, ''représenté(e) par'', avocat_4_civilite.libelle, avocat_4.personne_morale_nom, avocat_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(avocat_4.personne_morale_raison_sociale, '' '', avocat_4.personne_morale_denomination))
            END
    END as nom_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier'' OR avocat_4.personne_morale_nom IS NOT NULL OR avocat_4.personne_morale_prenom IS NOT NULL
        THEN avocat_4_civilite.libelle
        ELSE ''''
    END as civilite_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN avocat_4.particulier_nom
        ELSE
            CASE WHEN avocat_4.personne_morale_nom IS NOT NULL
                THEN avocat_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN avocat_4.particulier_prenom
        ELSE
            CASE WHEN avocat_4.personne_morale_prenom IS NOT NULL
                THEN avocat_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN ''''
        ELSE avocat_4.personne_morale_raison_sociale
    END as raison_sociale_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN ''''
        ELSE avocat_4.personne_morale_denomination
    END as denomination_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN ''''
        ELSE avocat_4.personne_morale_categorie_juridique
    END as categorie_juridique_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN ''''
        ELSE avocat_4.personne_morale_siret
    END as siret_avocat_4,
    avocat_4.numero as numero_avocat_4,&DB_PREFIXEadresse(avocat_4.numero::text, avocat_4.voie::text, avocat_4.complement::text, avocat_4.lieu_dit::text, avocat_4.bp::text, avocat_4.code_postal::text, avocat_4.localite::text, avocat_4.cedex::text, avocat_4.pays::text) as adresse_avocat_4_sdl,&DB_PREFIXEadresse(avocat_4.numero::text, avocat_4.voie::text, avocat_4.complement::text, avocat_4.lieu_dit::text, avocat_4.bp::text, avocat_4.code_postal::text, avocat_4.localite::text, avocat_4.cedex::text, avocat_4.pays::text, '' ''::text) as adresse_avocat_4,
    avocat_4.voie as voie_avocat_4,
    avocat_4.complement as complement_avocat_4,
    avocat_4.lieu_dit as lieu_dit_avocat_4,
    CASE 
        WHEN avocat_4.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', avocat_4.bp)
    END as bp_avocat_4,
    avocat_4.code_postal as code_postal_avocat_4,
    avocat_4.localite as localite_avocat_4,
    CASE 
        WHEN avocat_4.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', avocat_4.cedex)
    END as cedex_avocat_4,
    avocat_4.pays as pays_avocat_4,
    avocat_4.division_territoriale as division_territoriale_avocat_4,

    --Coordonnées de l''avocat 5

    CASE WHEN avocat_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_5_civilite.libelle, avocat_5.particulier_nom, avocat_5.particulier_prenom))
        ELSE
            CASE WHEN avocat_5.personne_morale_nom IS NOT NULL OR avocat_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', avocat_5.personne_morale_raison_sociale, avocat_5.personne_morale_denomination, ''représenté(e) par'', avocat_5_civilite.libelle, avocat_5.personne_morale_nom, avocat_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(avocat_5.personne_morale_raison_sociale, '' '', avocat_5.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier'' OR avocat_5.personne_morale_nom IS NOT NULL OR avocat_5.personne_morale_prenom IS NOT NULL
        THEN avocat_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN avocat_5.particulier_nom
        ELSE
            CASE WHEN avocat_5.personne_morale_nom IS NOT NULL
                THEN avocat_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN avocat_5.particulier_prenom
        ELSE
            CASE WHEN avocat_5.personne_morale_prenom IS NOT NULL
                THEN avocat_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_5_civilite.libelle, avocat_5.particulier_nom, avocat_5.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN avocat_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN avocat_5.particulier_nom
        ELSE ''''
    END as nom_qualite_part_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN avocat_5.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_avocat_5,
    CASE WHEN avocat_5.personne_morale_nom IS NOT NULL OR avocat_5.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', avocat_5.personne_morale_raison_sociale, avocat_5.personne_morale_denomination, ''représenté(e) par'', avocat_5_civilite.libelle, avocat_5.personne_morale_nom, avocat_5.personne_morale_prenom))
        ELSE TRIM(CONCAT(avocat_5.personne_morale_raison_sociale, '' '', avocat_5.personne_morale_denomination))
    END as nom_complet_qualite_pm_avocat_5,
    CASE WHEN avocat_5.personne_morale_nom IS NOT NULL OR avocat_5.personne_morale_prenom IS NOT NULL
        THEN avocat_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_avocat_5,
    CASE WHEN avocat_5.personne_morale_nom IS NOT NULL
        THEN avocat_5.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_avocat_5,
    CASE WHEN avocat_5.personne_morale_prenom IS NOT NULL
        THEN avocat_5.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_5_civilite.libelle, avocat_5.particulier_nom, avocat_5.particulier_prenom))
        ELSE
            CASE WHEN avocat_5.personne_morale_nom IS NOT NULL OR avocat_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', avocat_5.personne_morale_raison_sociale, avocat_5.personne_morale_denomination, ''représenté(e) par'', avocat_5_civilite.libelle, avocat_5.personne_morale_nom, avocat_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(avocat_5.personne_morale_raison_sociale, '' '', avocat_5.personne_morale_denomination))
            END
    END as nom_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier'' OR avocat_5.personne_morale_nom IS NOT NULL OR avocat_5.personne_morale_prenom IS NOT NULL
        THEN avocat_5_civilite.libelle
        ELSE ''''
    END as civilite_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN avocat_5.particulier_nom
        ELSE
            CASE WHEN avocat_5.personne_morale_nom IS NOT NULL
                THEN avocat_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN avocat_5.particulier_prenom
        ELSE
            CASE WHEN avocat_5.personne_morale_prenom IS NOT NULL
                THEN avocat_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN ''''
        ELSE avocat_5.personne_morale_raison_sociale
    END as raison_sociale_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN ''''
        ELSE avocat_5.personne_morale_denomination
    END as denomination_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN ''''
        ELSE avocat_5.personne_morale_categorie_juridique
    END as categorie_juridique_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN ''''
        ELSE avocat_5.personne_morale_siret
    END as siret_avocat_5,
    avocat_5.numero as numero_avocat_5,&DB_PREFIXEadresse(avocat_5.numero::text, avocat_5.voie::text, avocat_5.complement::text, avocat_5.lieu_dit::text, avocat_5.bp::text, avocat_5.code_postal::text, avocat_5.localite::text, avocat_5.cedex::text, avocat_5.pays::text) as adresse_avocat_5_sdl,&DB_PREFIXEadresse(avocat_5.numero::text, avocat_5.voie::text, avocat_5.complement::text, avocat_5.lieu_dit::text, avocat_5.bp::text, avocat_5.code_postal::text, avocat_5.localite::text, avocat_5.cedex::text, avocat_5.pays::text, '' ''::text) as adresse_avocat_5,
    avocat_5.voie as voie_avocat_5,
    avocat_5.complement as complement_avocat_5,
    avocat_5.lieu_dit as lieu_dit_avocat_5,
    CASE 
        WHEN avocat_5.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', avocat_5.bp)
    END as bp_avocat_5,
    avocat_5.code_postal as code_postal_avocat_5,
    avocat_5.localite as localite_avocat_5,
    CASE 
        WHEN avocat_5.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', avocat_5.cedex)
    END as cedex_avocat_5,
    avocat_5.pays as pays_avocat_5,
    avocat_5.division_territoriale as division_territoriale_avocat_5,

    --Coordonnées du plaignant principal

    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_principal_civilite.libelle, plaignant_principal.particulier_nom, plaignant_principal.particulier_prenom))
        ELSE
            CASE WHEN plaignant_principal.personne_morale_nom IS NOT NULL OR plaignant_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', plaignant_principal.personne_morale_raison_sociale, plaignant_principal.personne_morale_denomination, ''représenté(e) par'', plaignant_principal_civilite.libelle, plaignant_principal.personne_morale_nom, plaignant_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(plaignant_principal.personne_morale_raison_sociale, '' '', plaignant_principal.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier'' OR plaignant_principal.personne_morale_nom IS NOT NULL OR plaignant_principal.personne_morale_prenom IS NOT NULL
        THEN plaignant_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN plaignant_principal.particulier_nom
        ELSE
            CASE WHEN plaignant_principal.personne_morale_nom IS NOT NULL
                THEN plaignant_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN plaignant_principal.particulier_prenom
        ELSE
            CASE WHEN plaignant_principal.personne_morale_prenom IS NOT NULL
                THEN plaignant_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_principal_civilite.libelle, plaignant_principal.particulier_nom, plaignant_principal.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN plaignant_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN plaignant_principal.particulier_nom
        ELSE ''''
    END as nom_qualite_part_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN plaignant_principal.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_plaignant_principal,
    CASE WHEN plaignant_principal.personne_morale_nom IS NOT NULL OR plaignant_principal.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', plaignant_principal.personne_morale_raison_sociale, plaignant_principal.personne_morale_denomination, ''représenté(e) par'', plaignant_principal_civilite.libelle, plaignant_principal.personne_morale_nom, plaignant_principal.personne_morale_prenom))
        ELSE TRIM(CONCAT(plaignant_principal.personne_morale_raison_sociale, '' '', plaignant_principal.personne_morale_denomination))
    END as nom_complet_qualite_pm_plaignant_principal,
    CASE WHEN plaignant_principal.personne_morale_nom IS NOT NULL OR plaignant_principal.personne_morale_prenom IS NOT NULL
        THEN plaignant_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_plaignant_principal,
    CASE WHEN plaignant_principal.personne_morale_nom IS NOT NULL
        THEN plaignant_principal.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_plaignant_principal,
    CASE WHEN plaignant_principal.personne_morale_prenom IS NOT NULL
        THEN plaignant_principal.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_principal_civilite.libelle, plaignant_principal.particulier_nom, plaignant_principal.particulier_prenom))
        ELSE
            CASE WHEN plaignant_principal.personne_morale_nom IS NOT NULL OR plaignant_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', plaignant_principal.personne_morale_raison_sociale, plaignant_principal.personne_morale_denomination, ''représenté(e) par'', plaignant_principal_civilite.libelle, plaignant_principal.personne_morale_nom, plaignant_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(plaignant_principal.personne_morale_raison_sociale, '' '', plaignant_principal.personne_morale_denomination))
            END
    END as nom_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier'' OR plaignant_principal.personne_morale_nom IS NOT NULL OR plaignant_principal.personne_morale_prenom IS NOT NULL
        THEN plaignant_principal_civilite.libelle
        ELSE ''''
    END as civilite_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN plaignant_principal.particulier_nom
        ELSE
            CASE WHEN plaignant_principal.personne_morale_nom IS NOT NULL
                THEN plaignant_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN plaignant_principal.particulier_prenom
        ELSE
            CASE WHEN plaignant_principal.personne_morale_prenom IS NOT NULL
                THEN plaignant_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN ''''
        ELSE plaignant_principal.personne_morale_raison_sociale
    END as raison_sociale_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN ''''
        ELSE plaignant_principal.personne_morale_denomination
    END as denomination_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN ''''
        ELSE plaignant_principal.personne_morale_siret
    END as siret_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN ''''
        ELSE plaignant_principal.personne_morale_categorie_juridique
    END as categorie_juridique_plaignant_principal,
    plaignant_principal.numero as numero_plaignant_principal,&DB_PREFIXEadresse(plaignant_principal.numero::text, plaignant_principal.voie::text, plaignant_principal.complement::text, plaignant_principal.lieu_dit::text, plaignant_principal.bp::text, plaignant_principal.code_postal::text, plaignant_principal.localite::text, plaignant_principal.cedex::text, plaignant_principal.pays::text) as adresse_plaignant_principal_sdl,&DB_PREFIXEadresse(plaignant_principal.numero::text, plaignant_principal.voie::text, plaignant_principal.complement::text, plaignant_principal.lieu_dit::text, plaignant_principal.bp::text, plaignant_principal.code_postal::text, plaignant_principal.localite::text, plaignant_principal.cedex::text, plaignant_principal.pays::text, '' ''::text) as adresse_plaignant_principal,
    plaignant_principal.voie as voie_plaignant_principal,
    plaignant_principal.complement as complement_plaignant_principal,
    plaignant_principal.lieu_dit as lieu_dit_plaignant_principal,
    CASE 
        WHEN plaignant_principal.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', plaignant_principal.bp)
    END as bp_plaignant_principal,
    plaignant_principal.code_postal as code_postal_plaignant_principal,
    plaignant_principal.localite as localite_plaignant_principal,
    CASE 
        WHEN plaignant_principal.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', plaignant_principal.cedex)
    END as cedex_plaignant_principal,
    plaignant_principal.pays as pays_plaignant_principal,
    plaignant_principal.division_territoriale as division_territoriale_plaignant_principal,

    --Coordonnées de l''plaignant 1

    CASE WHEN plaignant_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_1_civilite.libelle, plaignant_1.particulier_nom, plaignant_1.particulier_prenom))
        ELSE
            CASE WHEN plaignant_1.personne_morale_nom IS NOT NULL OR plaignant_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', plaignant_1.personne_morale_raison_sociale, plaignant_1.personne_morale_denomination, ''représenté(e) par'', plaignant_1_civilite.libelle, plaignant_1.personne_morale_nom, plaignant_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(plaignant_1.personne_morale_raison_sociale, '' '', plaignant_1.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier'' OR plaignant_1.personne_morale_nom IS NOT NULL OR plaignant_1.personne_morale_prenom IS NOT NULL
        THEN plaignant_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN plaignant_1.particulier_nom
        ELSE
            CASE WHEN plaignant_1.personne_morale_nom IS NOT NULL
                THEN plaignant_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN plaignant_1.particulier_prenom
        ELSE
            CASE WHEN plaignant_1.personne_morale_prenom IS NOT NULL
                THEN plaignant_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_1_civilite.libelle, plaignant_1.particulier_nom, plaignant_1.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN plaignant_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN plaignant_1.particulier_nom
        ELSE ''''
    END as nom_qualite_part_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN plaignant_1.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_plaignant_1,
    CASE WHEN plaignant_1.personne_morale_nom IS NOT NULL OR plaignant_1.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', plaignant_1.personne_morale_raison_sociale, plaignant_1.personne_morale_denomination, ''représenté(e) par'', plaignant_1_civilite.libelle, plaignant_1.personne_morale_nom, plaignant_1.personne_morale_prenom))
        ELSE TRIM(CONCAT(plaignant_1.personne_morale_raison_sociale, '' '', plaignant_1.personne_morale_denomination))
    END as nom_complet_qualite_pm_plaignant_1,
    CASE WHEN plaignant_1.personne_morale_nom IS NOT NULL OR plaignant_1.personne_morale_prenom IS NOT NULL
        THEN plaignant_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_plaignant_1,
    CASE WHEN plaignant_1.personne_morale_nom IS NOT NULL
        THEN plaignant_1.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_plaignant_1,
    CASE WHEN plaignant_1.personne_morale_prenom IS NOT NULL
        THEN plaignant_1.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_1_civilite.libelle, plaignant_1.particulier_nom, plaignant_1.particulier_prenom))
        ELSE
            CASE WHEN plaignant_1.personne_morale_nom IS NOT NULL OR plaignant_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', plaignant_1.personne_morale_raison_sociale, plaignant_1.personne_morale_denomination, ''représenté(e) par'', plaignant_1_civilite.libelle, plaignant_1.personne_morale_nom, plaignant_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(plaignant_1.personne_morale_raison_sociale, '' '', plaignant_1.personne_morale_denomination))
            END
    END as nom_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier'' OR plaignant_1.personne_morale_nom IS NOT NULL OR plaignant_1.personne_morale_prenom IS NOT NULL
        THEN plaignant_1_civilite.libelle
        ELSE ''''
    END as civilite_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN plaignant_1.particulier_nom
        ELSE
            CASE WHEN plaignant_1.personne_morale_nom IS NOT NULL
                THEN plaignant_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN plaignant_1.particulier_prenom
        ELSE
            CASE WHEN plaignant_1.personne_morale_prenom IS NOT NULL
                THEN plaignant_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN ''''
        ELSE plaignant_1.personne_morale_raison_sociale
    END as raison_sociale_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN ''''
        ELSE plaignant_1.personne_morale_denomination
    END as denomination_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN ''''
        ELSE plaignant_1.personne_morale_siret
    END as siret_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN ''''
        ELSE plaignant_1.personne_morale_categorie_juridique
    END as categorie_juridique_plaignant_1,
    plaignant_1.numero as numero_plaignant_1,&DB_PREFIXEadresse(plaignant_1.numero::text, plaignant_1.voie::text, plaignant_1.complement::text, plaignant_1.lieu_dit::text, plaignant_1.bp::text, plaignant_1.code_postal::text, plaignant_1.localite::text, plaignant_1.cedex::text, plaignant_1.pays::text) as adresse_plaignant_1_sdl,&DB_PREFIXEadresse(plaignant_1.numero::text, plaignant_1.voie::text, plaignant_1.complement::text, plaignant_1.lieu_dit::text, plaignant_1.bp::text, plaignant_1.code_postal::text, plaignant_1.localite::text, plaignant_1.cedex::text, plaignant_1.pays::text, '' ''::text) as adresse_plaignant_1,
    plaignant_1.voie as voie_plaignant_1,
    plaignant_1.complement as complement_plaignant_1,
    plaignant_1.lieu_dit as lieu_dit_plaignant_1,
    CASE 
        WHEN plaignant_1.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', plaignant_1.bp)
    END as bp_plaignant_1,
    plaignant_1.code_postal as code_postal_plaignant_1,
    plaignant_1.localite as localite_plaignant_1,
    CASE 
        WHEN plaignant_1.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', plaignant_1.cedex)
    END as cedex_plaignant_1,
    plaignant_1.pays as pays_plaignant_1,
    plaignant_1.division_territoriale as division_territoriale_plaignant_1,

    --Coordonnées de l''plaignant 2

    CASE WHEN plaignant_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_2_civilite.libelle, plaignant_2.particulier_nom, plaignant_2.particulier_prenom))
        ELSE
            CASE WHEN plaignant_2.personne_morale_nom IS NOT NULL OR plaignant_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', plaignant_2.personne_morale_raison_sociale, plaignant_2.personne_morale_denomination, ''représenté(e) par'', plaignant_2_civilite.libelle, plaignant_2.personne_morale_nom, plaignant_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(plaignant_2.personne_morale_raison_sociale, '' '', plaignant_2.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier'' OR plaignant_2.personne_morale_nom IS NOT NULL OR plaignant_2.personne_morale_prenom IS NOT NULL
        THEN plaignant_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN plaignant_2.particulier_nom
        ELSE
            CASE WHEN plaignant_2.personne_morale_nom IS NOT NULL
                THEN plaignant_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN plaignant_2.particulier_prenom
        ELSE
            CASE WHEN plaignant_2.personne_morale_prenom IS NOT NULL
                THEN plaignant_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_2_civilite.libelle, plaignant_2.particulier_nom, plaignant_2.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN plaignant_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN plaignant_2.particulier_nom
        ELSE ''''
    END as nom_qualite_part_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN plaignant_2.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_plaignant_2,
    CASE WHEN plaignant_2.personne_morale_nom IS NOT NULL OR plaignant_2.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', plaignant_2.personne_morale_raison_sociale, plaignant_2.personne_morale_denomination, ''représenté(e) par'', plaignant_2_civilite.libelle, plaignant_2.personne_morale_nom, plaignant_2.personne_morale_prenom))
        ELSE TRIM(CONCAT(plaignant_2.personne_morale_raison_sociale, '' '', plaignant_2.personne_morale_denomination))
    END as nom_complet_qualite_pm_plaignant_2,
    CASE WHEN plaignant_2.personne_morale_nom IS NOT NULL OR plaignant_2.personne_morale_prenom IS NOT NULL
        THEN plaignant_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_plaignant_2,
    CASE WHEN plaignant_2.personne_morale_nom IS NOT NULL
        THEN plaignant_2.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_plaignant_2,
    CASE WHEN plaignant_2.personne_morale_prenom IS NOT NULL
        THEN plaignant_2.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_2_civilite.libelle, plaignant_2.particulier_nom, plaignant_2.particulier_prenom))
        ELSE
            CASE WHEN plaignant_2.personne_morale_nom IS NOT NULL OR plaignant_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', plaignant_2.personne_morale_raison_sociale, plaignant_2.personne_morale_denomination, ''représenté(e) par'', plaignant_2_civilite.libelle, plaignant_2.personne_morale_nom, plaignant_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(plaignant_2.personne_morale_raison_sociale, '' '', plaignant_2.personne_morale_denomination))
            END
    END as nom_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier'' OR plaignant_2.personne_morale_nom IS NOT NULL OR plaignant_2.personne_morale_prenom IS NOT NULL
        THEN plaignant_2_civilite.libelle
        ELSE ''''
    END as civilite_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN plaignant_2.particulier_nom
        ELSE
            CASE WHEN plaignant_2.personne_morale_nom IS NOT NULL
                THEN plaignant_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN plaignant_2.particulier_prenom
        ELSE
            CASE WHEN plaignant_2.personne_morale_prenom IS NOT NULL
                THEN plaignant_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN ''''
        ELSE plaignant_2.personne_morale_raison_sociale
    END as raison_sociale_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN ''''
        ELSE plaignant_2.personne_morale_denomination
    END as denomination_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN ''''
        ELSE plaignant_2.personne_morale_categorie_juridique
    END as categorie_juridique_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN ''''
        ELSE plaignant_2.personne_morale_siret
    END as siret_plaignant_2,
    plaignant_2.numero as numero_plaignant_2,&DB_PREFIXEadresse(plaignant_2.numero::text, plaignant_2.voie::text, plaignant_2.complement::text, plaignant_2.lieu_dit::text, plaignant_2.bp::text, plaignant_2.code_postal::text, plaignant_2.localite::text, plaignant_2.cedex::text, plaignant_2.pays::text) as adresse_plaignant_2_sdl,&DB_PREFIXEadresse(plaignant_2.numero::text, plaignant_2.voie::text, plaignant_2.complement::text, plaignant_2.lieu_dit::text, plaignant_2.bp::text, plaignant_2.code_postal::text, plaignant_2.localite::text, plaignant_2.cedex::text, plaignant_2.pays::text, '' ''::text) as adresse_plaignant_2,
    plaignant_2.voie as voie_plaignant_2,
    plaignant_2.complement as complement_plaignant_2,
    plaignant_2.lieu_dit as lieu_dit_plaignant_2,
    CASE 
        WHEN plaignant_2.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', plaignant_2.bp)
    END as bp_plaignant_2,
    plaignant_2.code_postal as code_postal_plaignant_2,
    plaignant_2.localite as localite_plaignant_2,
    CASE 
        WHEN plaignant_2.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', plaignant_2.cedex)
    END as cedex_plaignant_2,
    plaignant_2.pays as pays_plaignant_2,
    plaignant_2.division_territoriale as division_territoriale_plaignant_2,

    --Coordonnées de l''plaignant 3

    CASE WHEN plaignant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_3_civilite.libelle, plaignant_3.particulier_nom, plaignant_3.particulier_prenom))
        ELSE
            CASE WHEN plaignant_3.personne_morale_nom IS NOT NULL OR plaignant_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', plaignant_3.personne_morale_raison_sociale, plaignant_3.personne_morale_denomination, ''représenté(e) par'', plaignant_3_civilite.libelle, plaignant_3.personne_morale_nom, plaignant_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(plaignant_3.personne_morale_raison_sociale, '' '', plaignant_3.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier'' OR plaignant_3.personne_morale_nom IS NOT NULL OR plaignant_3.personne_morale_prenom IS NOT NULL
        THEN plaignant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN plaignant_3.particulier_nom
        ELSE
            CASE WHEN plaignant_3.personne_morale_nom IS NOT NULL
                THEN plaignant_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN plaignant_3.particulier_prenom
        ELSE
            CASE WHEN plaignant_3.personne_morale_prenom IS NOT NULL
                THEN plaignant_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_3_civilite.libelle, plaignant_3.particulier_nom, plaignant_3.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN plaignant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN plaignant_3.particulier_nom
        ELSE ''''
    END as nom_qualite_part_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN plaignant_3.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_plaignant_3,
    CASE WHEN plaignant_3.personne_morale_nom IS NOT NULL OR plaignant_3.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', plaignant_3.personne_morale_raison_sociale, plaignant_3.personne_morale_denomination, ''représenté(e) par'', plaignant_3_civilite.libelle, plaignant_3.personne_morale_nom, plaignant_3.personne_morale_prenom))
        ELSE TRIM(CONCAT(plaignant_3.personne_morale_raison_sociale, '' '', plaignant_3.personne_morale_denomination))
    END as nom_complet_qualite_pm_plaignant_3,
    CASE WHEN plaignant_3.personne_morale_nom IS NOT NULL OR plaignant_3.personne_morale_prenom IS NOT NULL
        THEN plaignant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_plaignant_3,
    CASE WHEN plaignant_3.personne_morale_nom IS NOT NULL
        THEN plaignant_3.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_plaignant_3,
    CASE WHEN plaignant_3.personne_morale_prenom IS NOT NULL
        THEN plaignant_3.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_3_civilite.libelle, plaignant_3.particulier_nom, plaignant_3.particulier_prenom))
        ELSE
            CASE WHEN plaignant_3.personne_morale_nom IS NOT NULL OR plaignant_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', plaignant_3.personne_morale_raison_sociale, plaignant_3.personne_morale_denomination, ''représenté(e) par'', plaignant_3_civilite.libelle, plaignant_3.personne_morale_nom, plaignant_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(plaignant_3.personne_morale_raison_sociale, '' '', plaignant_3.personne_morale_denomination))
            END
    END as nom_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier'' OR plaignant_3.personne_morale_nom IS NOT NULL OR plaignant_3.personne_morale_prenom IS NOT NULL
        THEN plaignant_3_civilite.libelle
        ELSE ''''
    END as civilite_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN plaignant_3.particulier_nom
        ELSE
            CASE WHEN plaignant_3.personne_morale_nom IS NOT NULL
                THEN plaignant_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN plaignant_3.particulier_prenom
        ELSE
            CASE WHEN plaignant_3.personne_morale_prenom IS NOT NULL
                THEN plaignant_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN ''''
        ELSE plaignant_3.personne_morale_raison_sociale
    END as raison_sociale_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN ''''
        ELSE plaignant_3.personne_morale_denomination
    END as denomination_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN ''''
        ELSE plaignant_3.personne_morale_siret
    END as siret_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN ''''
        ELSE plaignant_3.personne_morale_categorie_juridique
    END as categorie_juridique_plaignant_3,
    plaignant_3.numero as numero_plaignant_3,&DB_PREFIXEadresse(plaignant_3.numero::text, plaignant_3.voie::text, plaignant_3.complement::text, plaignant_3.lieu_dit::text, plaignant_3.bp::text, plaignant_3.code_postal::text, plaignant_3.localite::text, plaignant_3.cedex::text, plaignant_3.pays::text) as adresse_plaignant_3_sdl,&DB_PREFIXEadresse(plaignant_3.numero::text, plaignant_3.voie::text, plaignant_3.complement::text, plaignant_3.lieu_dit::text, plaignant_3.bp::text, plaignant_3.code_postal::text, plaignant_3.localite::text, plaignant_3.cedex::text, plaignant_3.pays::text, '' ''::text) as adresse_plaignant_3,
    plaignant_3.voie as voie_plaignant_3,
    plaignant_3.complement as complement_plaignant_3,
    plaignant_3.lieu_dit as lieu_dit_plaignant_3,
    CASE 
        WHEN plaignant_3.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', plaignant_3.bp)
    END as bp_plaignant_3,
    plaignant_3.code_postal as code_postal_plaignant_3,
    plaignant_3.localite as localite_plaignant_3,
    CASE 
        WHEN plaignant_3.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', plaignant_3.cedex)
    END as cedex_plaignant_3,
    plaignant_3.pays as pays_plaignant_3,
    plaignant_3.division_territoriale as division_territoriale_plaignant_3,

    --Coordonnées de l''plaignant 4

    CASE WHEN plaignant_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_4_civilite.libelle, plaignant_4.particulier_nom, plaignant_4.particulier_prenom))
        ELSE
            CASE WHEN plaignant_4.personne_morale_nom IS NOT NULL OR plaignant_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', plaignant_4.personne_morale_raison_sociale, plaignant_4.personne_morale_denomination, ''représenté(e) par'', plaignant_4_civilite.libelle, plaignant_4.personne_morale_nom, plaignant_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(plaignant_4.personne_morale_raison_sociale, '' '', plaignant_4.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier'' OR plaignant_4.personne_morale_nom IS NOT NULL OR plaignant_4.personne_morale_prenom IS NOT NULL
        THEN plaignant_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN plaignant_4.particulier_nom
        ELSE
            CASE WHEN plaignant_4.personne_morale_nom IS NOT NULL
                THEN plaignant_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN plaignant_4.particulier_prenom
        ELSE
            CASE WHEN plaignant_4.personne_morale_prenom IS NOT NULL
                THEN plaignant_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_4_civilite.libelle, plaignant_4.particulier_nom, plaignant_4.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN plaignant_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN plaignant_4.particulier_nom
        ELSE ''''
    END as nom_qualite_part_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN plaignant_4.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_plaignant_4,
    CASE WHEN plaignant_4.personne_morale_nom IS NOT NULL OR plaignant_4.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', plaignant_4.personne_morale_raison_sociale, plaignant_4.personne_morale_denomination, ''représenté(e) par'', plaignant_4_civilite.libelle, plaignant_4.personne_morale_nom, plaignant_4.personne_morale_prenom))
        ELSE TRIM(CONCAT(plaignant_4.personne_morale_raison_sociale, '' '', plaignant_4.personne_morale_denomination))
    END as nom_complet_qualite_pm_plaignant_4,
    CASE WHEN plaignant_4.personne_morale_nom IS NOT NULL OR plaignant_4.personne_morale_prenom IS NOT NULL
        THEN plaignant_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_plaignant_4,
    CASE WHEN plaignant_4.personne_morale_nom IS NOT NULL
        THEN plaignant_4.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_plaignant_4,
    CASE WHEN plaignant_4.personne_morale_prenom IS NOT NULL
        THEN plaignant_4.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_4_civilite.libelle, plaignant_4.particulier_nom, plaignant_4.particulier_prenom))
        ELSE
            CASE WHEN plaignant_4.personne_morale_nom IS NOT NULL OR plaignant_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', plaignant_4.personne_morale_raison_sociale, plaignant_4.personne_morale_denomination, ''représenté(e) par'', plaignant_4_civilite.libelle, plaignant_4.personne_morale_nom, plaignant_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(plaignant_4.personne_morale_raison_sociale, '' '', plaignant_4.personne_morale_denomination))
            END
    END as nom_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier'' OR plaignant_4.personne_morale_nom IS NOT NULL OR plaignant_4.personne_morale_prenom IS NOT NULL
        THEN plaignant_4_civilite.libelle
        ELSE ''''
    END as civilite_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN plaignant_4.particulier_nom
        ELSE
            CASE WHEN plaignant_4.personne_morale_nom IS NOT NULL
                THEN plaignant_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN plaignant_4.particulier_prenom
        ELSE
            CASE WHEN plaignant_4.personne_morale_prenom IS NOT NULL
                THEN plaignant_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN ''''
        ELSE plaignant_4.personne_morale_raison_sociale
    END as raison_sociale_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN ''''
        ELSE plaignant_4.personne_morale_denomination
    END as denomination_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN ''''
        ELSE plaignant_4.personne_morale_categorie_juridique
    END as categorie_juridique_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN ''''
        ELSE plaignant_4.personne_morale_siret
    END as siret_plaignant_4,
    plaignant_4.numero as numero_plaignant_4,&DB_PREFIXEadresse(plaignant_4.numero::text, plaignant_4.voie::text, plaignant_4.complement::text, plaignant_4.lieu_dit::text, plaignant_4.bp::text, plaignant_4.code_postal::text, plaignant_4.localite::text, plaignant_4.cedex::text, plaignant_4.pays::text) as adresse_plaignant_4_sdl,&DB_PREFIXEadresse(plaignant_4.numero::text, plaignant_4.voie::text, plaignant_4.complement::text, plaignant_4.lieu_dit::text, plaignant_4.bp::text, plaignant_4.code_postal::text, plaignant_4.localite::text, plaignant_4.cedex::text, plaignant_4.pays::text, '' ''::text) as adresse_plaignant_4,
    plaignant_4.voie as voie_plaignant_4,
    plaignant_4.complement as complement_plaignant_4,
    plaignant_4.lieu_dit as lieu_dit_plaignant_4,
    CASE 
        WHEN plaignant_4.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', plaignant_4.bp)
    END as bp_plaignant_4,
    plaignant_4.code_postal as code_postal_plaignant_4,
    plaignant_4.localite as localite_plaignant_4,
    CASE 
        WHEN plaignant_4.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', plaignant_4.cedex)
    END as cedex_plaignant_4,
    plaignant_4.pays as pays_plaignant_4,
    plaignant_4.division_territoriale as division_territoriale_plaignant_4,

    --Coordonnées de l''plaignant 5

    CASE WHEN plaignant_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_5_civilite.libelle, plaignant_5.particulier_nom, plaignant_5.particulier_prenom))
        ELSE
            CASE WHEN plaignant_5.personne_morale_nom IS NOT NULL OR plaignant_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', plaignant_5.personne_morale_raison_sociale, plaignant_5.personne_morale_denomination, ''représenté(e) par'', plaignant_5_civilite.libelle, plaignant_5.personne_morale_nom, plaignant_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(plaignant_5.personne_morale_raison_sociale, '' '', plaignant_5.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier'' OR plaignant_5.personne_morale_nom IS NOT NULL OR plaignant_5.personne_morale_prenom IS NOT NULL
        THEN plaignant_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN plaignant_5.particulier_nom
        ELSE
            CASE WHEN plaignant_5.personne_morale_nom IS NOT NULL
                THEN plaignant_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN plaignant_5.particulier_prenom
        ELSE
            CASE WHEN plaignant_5.personne_morale_prenom IS NOT NULL
                THEN plaignant_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_5_civilite.libelle, plaignant_5.particulier_nom, plaignant_5.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN plaignant_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN plaignant_5.particulier_nom
        ELSE ''''
    END as nom_qualite_part_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN plaignant_5.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_plaignant_5,
    CASE WHEN plaignant_5.personne_morale_nom IS NOT NULL OR plaignant_5.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', plaignant_5.personne_morale_raison_sociale, plaignant_5.personne_morale_denomination, ''représenté(e) par'', plaignant_5_civilite.libelle, plaignant_5.personne_morale_nom, plaignant_5.personne_morale_prenom))
        ELSE TRIM(CONCAT(plaignant_5.personne_morale_raison_sociale, '' '', plaignant_5.personne_morale_denomination))
    END as nom_complet_qualite_pm_plaignant_5,
    CASE WHEN plaignant_5.personne_morale_nom IS NOT NULL OR plaignant_5.personne_morale_prenom IS NOT NULL
        THEN plaignant_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_plaignant_5,
    CASE WHEN plaignant_5.personne_morale_nom IS NOT NULL
        THEN plaignant_5.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_plaignant_5,
    CASE WHEN plaignant_5.personne_morale_prenom IS NOT NULL
        THEN plaignant_5.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_5_civilite.libelle, plaignant_5.particulier_nom, plaignant_5.particulier_prenom))
        ELSE
            CASE WHEN plaignant_5.personne_morale_nom IS NOT NULL OR plaignant_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', plaignant_5.personne_morale_raison_sociale, plaignant_5.personne_morale_denomination, ''représenté(e) par'', plaignant_5_civilite.libelle, plaignant_5.personne_morale_nom, plaignant_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(plaignant_5.personne_morale_raison_sociale, '' '', plaignant_5.personne_morale_denomination))
            END
    END as nom_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier'' OR plaignant_5.personne_morale_nom IS NOT NULL OR plaignant_5.personne_morale_prenom IS NOT NULL
        THEN plaignant_5_civilite.libelle
        ELSE ''''
    END as civilite_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN plaignant_5.particulier_nom
        ELSE
            CASE WHEN plaignant_5.personne_morale_nom IS NOT NULL
                THEN plaignant_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN plaignant_5.particulier_prenom
        ELSE
            CASE WHEN plaignant_5.personne_morale_prenom IS NOT NULL
                THEN plaignant_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN ''''
        ELSE plaignant_5.personne_morale_raison_sociale
    END as raison_sociale_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN ''''
        ELSE plaignant_5.personne_morale_denomination
    END as denomination_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN ''''
        ELSE plaignant_5.personne_morale_categorie_juridique
    END as categorie_juridique_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN ''''
        ELSE plaignant_5.personne_morale_siret
    END as siret_plaignant_5,
    plaignant_5.numero as numero_plaignant_5,&DB_PREFIXEadresse(plaignant_5.numero::text, plaignant_5.voie::text, plaignant_5.complement::text, plaignant_5.lieu_dit::text, plaignant_5.bp::text, plaignant_5.code_postal::text, plaignant_5.localite::text, plaignant_5.cedex::text, plaignant_5.pays::text) as adresse_plaignant_5_sdl,&DB_PREFIXEadresse(plaignant_5.numero::text, plaignant_5.voie::text, plaignant_5.complement::text, plaignant_5.lieu_dit::text, plaignant_5.bp::text, plaignant_5.code_postal::text, plaignant_5.localite::text, plaignant_5.cedex::text, plaignant_5.pays::text, '' ''::text) as adresse_plaignant_5,
    plaignant_5.voie as voie_plaignant_5,
    plaignant_5.complement as complement_plaignant_5,
    plaignant_5.lieu_dit as lieu_dit_plaignant_5,
    CASE 
        WHEN plaignant_5.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', plaignant_5.bp)
    END as bp_plaignant_5,
    plaignant_5.code_postal as code_postal_plaignant_5,
    plaignant_5.localite as localite_plaignant_5,
    CASE 
        WHEN plaignant_5.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', plaignant_5.cedex)
    END as cedex_plaignant_5,
    plaignant_5.pays as pays_plaignant_5,
    plaignant_5.division_territoriale as division_territoriale_plaignant_5,

    -- Coordonnées du délégataire
    
    CASE WHEN delegataire.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
        ELSE
            CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', delegataire.personne_morale_raison_sociale, delegataire.personne_morale_denomination, ''représenté(e) par'', delegataire_civilite.libelle, delegataire.personne_morale_nom, delegataire.personne_morale_prenom))
                ELSE TRIM(CONCAT(delegataire.personne_morale_raison_sociale, '' '', delegataire.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_delegataire,
    CASE WHEN delegataire.qualite=''particulier'' OR delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
        THEN delegataire_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire.particulier_nom
        ELSE
            CASE WHEN delegataire.personne_morale_nom IS NOT NULL
                THEN delegataire.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire.particulier_prenom
        ELSE
            CASE WHEN delegataire.personne_morale_prenom IS NOT NULL
                THEN delegataire.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire.particulier_nom
        ELSE ''''
    END as nom_qualite_part_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_delegataire,
    CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', delegataire.personne_morale_raison_sociale, delegataire.personne_morale_denomination, ''représenté(e) par'', delegataire_civilite.libelle, delegataire.personne_morale_nom, delegataire.personne_morale_prenom))
        ELSE TRIM(CONCAT(delegataire.personne_morale_raison_sociale, '' '', delegataire.personne_morale_denomination))
    END as nom_complet_qualite_pm_delegataire,
    CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
        THEN delegataire_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_delegataire,
    CASE WHEN delegataire.personne_morale_nom IS NOT NULL
        THEN delegataire.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_delegataire,
    CASE WHEN delegataire.personne_morale_prenom IS NOT NULL
        THEN delegataire.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_delegataire,
    CASE
        WHEN delegataire.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '',delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
        ELSE
            CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', delegataire.personne_morale_raison_sociale, delegataire.personne_morale_denomination, ''représenté(e) par'', delegataire_civilite.libelle, delegataire.personne_morale_nom, delegataire.personne_morale_prenom))
                ELSE TRIM(CONCAT(delegataire.personne_morale_raison_sociale, '' '', delegataire.personne_morale_denomination))
            END
    END as nom_delegataire,
    CASE WHEN delegataire.qualite=''particulier'' OR delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
        THEN delegataire_civilite.libelle
        ELSE ''''
    END as civilite_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire.particulier_nom
        ELSE
            CASE WHEN delegataire.personne_morale_nom IS NOT NULL
                THEN delegataire.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire.particulier_prenom
        ELSE
            CASE WHEN delegataire.personne_morale_prenom IS NOT NULL
                THEN delegataire.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN ''''
        ELSE delegataire.personne_morale_raison_sociale
    END as raison_sociale_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN ''''
        ELSE delegataire.personne_morale_denomination
    END as denomination_delegataire,
    delegataire.numero as numero_delegataire,&DB_PREFIXEadresse(delegataire.numero::text, delegataire.voie::text, delegataire.complement::text, delegataire.lieu_dit::text, delegataire.bp::text, delegataire.code_postal::text, delegataire.localite::text, delegataire.cedex::text, delegataire.pays::text) as adresse_delegataire_sdl,&DB_PREFIXEadresse(delegataire.numero::text, delegataire.voie::text, delegataire.complement::text, delegataire.lieu_dit::text, delegataire.bp::text, delegataire.code_postal::text, delegataire.localite::text, delegataire.cedex::text, delegataire.pays::text, '' ''::text) as adresse_delegataire,
    delegataire.voie as voie_delegataire,
    delegataire.complement as complement_delegataire,
    delegataire.lieu_dit as lieu_dit_delegataire,
    CASE 
        WHEN delegataire.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', delegataire.bp)
    END as bp_delegataire,
    delegataire.code_postal as code_postal_delegataire,
    delegataire.localite as ville_delegataire,
    CASE 
        WHEN delegataire.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', delegataire.cedex)
    END as cedex_delegataire,
    delegataire.pays as pays_delegataire,

    --Coordonnées de du bailleur principal

    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_principal_civilite.libelle, bailleur_principal.particulier_nom, bailleur_principal.particulier_prenom))
        ELSE
            CASE WHEN bailleur_principal.personne_morale_nom IS NOT NULL OR bailleur_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', bailleur_principal.personne_morale_raison_sociale, bailleur_principal.personne_morale_denomination, ''représenté(e) par'', bailleur_principal_civilite.libelle, bailleur_principal.personne_morale_nom, bailleur_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(bailleur_principal.personne_morale_raison_sociale, '' '', bailleur_principal.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier'' OR bailleur_principal.personne_morale_nom IS NOT NULL OR bailleur_principal.personne_morale_prenom IS NOT NULL
        THEN bailleur_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN bailleur_principal.particulier_nom
        ELSE
            CASE WHEN bailleur_principal.personne_morale_nom IS NOT NULL
                THEN bailleur_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN bailleur_principal.particulier_prenom
        ELSE
            CASE WHEN bailleur_principal.personne_morale_prenom IS NOT NULL
                THEN bailleur_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_principal_civilite.libelle, bailleur_principal.particulier_nom, bailleur_principal.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN bailleur_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN bailleur_principal.particulier_nom
        ELSE ''''
    END as nom_qualite_part_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN bailleur_principal.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_bailleur_principal,
    CASE WHEN bailleur_principal.personne_morale_nom IS NOT NULL OR bailleur_principal.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', bailleur_principal.personne_morale_raison_sociale, bailleur_principal.personne_morale_denomination, ''représenté(e) par'', bailleur_principal_civilite.libelle, bailleur_principal.personne_morale_nom, bailleur_principal.personne_morale_prenom))
        ELSE TRIM(CONCAT(bailleur_principal.personne_morale_raison_sociale, '' '', bailleur_principal.personne_morale_denomination))
    END as nom_complet_qualite_pm_bailleur_principal,
    CASE WHEN bailleur_principal.personne_morale_nom IS NOT NULL OR bailleur_principal.personne_morale_prenom IS NOT NULL
        THEN bailleur_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_bailleur_principal,
    CASE WHEN bailleur_principal.personne_morale_nom IS NOT NULL
        THEN bailleur_principal.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_bailleur_principal,
    CASE WHEN bailleur_principal.personne_morale_prenom IS NOT NULL
        THEN bailleur_principal.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN ''''
        ELSE bailleur_principal.personne_morale_raison_sociale
    END as raison_sociale_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN ''''
        ELSE bailleur_principal.personne_morale_denomination
    END as denomination_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN ''''
        ELSE bailleur_principal.personne_morale_siret
    END as siret_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN ''''
        ELSE bailleur_principal.personne_morale_categorie_juridique
    END as categorie_juridique_bailleur_principal,
    bailleur_principal.numero as numero_bailleur_principal,&DB_PREFIXEadresse(bailleur_principal.numero::text, bailleur_principal.voie::text, bailleur_principal.complement::text, bailleur_principal.lieu_dit::text, bailleur_principal.bp::text, bailleur_principal.code_postal::text, bailleur_principal.localite::text, bailleur_principal.cedex::text, bailleur_principal.pays::text) as adresse_bailleur_principal_sdl,&DB_PREFIXEadresse(bailleur_principal.numero::text, bailleur_principal.voie::text, bailleur_principal.complement::text, bailleur_principal.lieu_dit::text, bailleur_principal.bp::text, bailleur_principal.code_postal::text, bailleur_principal.localite::text, bailleur_principal.cedex::text, bailleur_principal.pays::text, '' ''::text) as adresse_bailleur_principal,
    bailleur_principal.voie as voie_bailleur_principal,
    bailleur_principal.complement as complement_bailleur_principal,
    bailleur_principal.lieu_dit as lieu_dit_bailleur_principal,
    CASE 
        WHEN bailleur_principal.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', bailleur_principal.bp)
    END as bp_bailleur_principal,
    bailleur_principal.code_postal as code_postal_bailleur_principal,
    bailleur_principal.localite as localite_bailleur_principal,
    CASE 
        WHEN bailleur_principal.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', bailleur_principal.cedex)
    END as cedex_bailleur_principal,
    bailleur_principal.pays as pays_bailleur_principal,
    bailleur_principal.division_territoriale as division_territoriale_bailleur_principal,

    --Coordonnées de du bailleur 1

    CASE WHEN bailleur_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_1_civilite.libelle, bailleur_1.particulier_nom, bailleur_1.particulier_prenom))
        ELSE
            CASE WHEN bailleur_1.personne_morale_nom IS NOT NULL OR bailleur_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', bailleur_1.personne_morale_raison_sociale, bailleur_1.personne_morale_denomination, ''représenté(e) par'', bailleur_1_civilite.libelle, bailleur_1.personne_morale_nom, bailleur_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(bailleur_1.personne_morale_raison_sociale, '' '', bailleur_1.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier'' OR bailleur_1.personne_morale_nom IS NOT NULL OR bailleur_1.personne_morale_prenom IS NOT NULL
        THEN bailleur_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN bailleur_1.particulier_nom
        ELSE
            CASE WHEN bailleur_1.personne_morale_nom IS NOT NULL
                THEN bailleur_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN bailleur_1.particulier_prenom
        ELSE
            CASE WHEN bailleur_1.personne_morale_prenom IS NOT NULL
                THEN bailleur_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_1_civilite.libelle, bailleur_1.particulier_nom, bailleur_1.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN bailleur_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN bailleur_1.particulier_nom
        ELSE ''''
    END as nom_qualite_part_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN bailleur_1.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_bailleur_1,
    CASE WHEN bailleur_1.personne_morale_nom IS NOT NULL OR bailleur_1.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', bailleur_1.personne_morale_raison_sociale, bailleur_1.personne_morale_denomination, ''représenté(e) par'', bailleur_1_civilite.libelle, bailleur_1.personne_morale_nom, bailleur_1.personne_morale_prenom))
        ELSE TRIM(CONCAT(bailleur_1.personne_morale_raison_sociale, '' '', bailleur_1.personne_morale_denomination))
    END as nom_complet_qualite_pm_bailleur_1,
    CASE WHEN bailleur_1.personne_morale_nom IS NOT NULL OR bailleur_1.personne_morale_prenom IS NOT NULL
        THEN bailleur_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_bailleur_1,
    CASE WHEN bailleur_1.personne_morale_nom IS NOT NULL
        THEN bailleur_1.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_bailleur_1,
    CASE WHEN bailleur_1.personne_morale_prenom IS NOT NULL
        THEN bailleur_1.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN ''''
        ELSE bailleur_1.personne_morale_raison_sociale
    END as raison_sociale_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN ''''
        ELSE bailleur_1.personne_morale_denomination
    END as denomination_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN ''''
        ELSE bailleur_1.personne_morale_siret
    END as siret_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN ''''
        ELSE bailleur_1.personne_morale_categorie_juridique
    END as categorie_juridique_bailleur_1,
    bailleur_1.numero as numero_bailleur_1,&DB_PREFIXEadresse(bailleur_1.numero::text, bailleur_1.voie::text, bailleur_1.complement::text, bailleur_1.lieu_dit::text, bailleur_1.bp::text, bailleur_1.code_postal::text, bailleur_1.localite::text, bailleur_1.cedex::text, bailleur_1.pays::text) as adresse_bailleur_1_sdl,&DB_PREFIXEadresse(bailleur_1.numero::text, bailleur_1.voie::text, bailleur_1.complement::text, bailleur_1.lieu_dit::text, bailleur_1.bp::text, bailleur_1.code_postal::text, bailleur_1.localite::text, bailleur_1.cedex::text, bailleur_1.pays::text, '' ''::text) as adresse_bailleur_1,
    bailleur_1.voie as voie_bailleur_1,
    bailleur_1.complement as complement_bailleur_1,
    bailleur_1.lieu_dit as lieu_dit_bailleur_1,
    CASE 
        WHEN bailleur_1.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', bailleur_1.bp)
    END as bp_bailleur_1,
    bailleur_1.code_postal as code_postal_bailleur_1,
    bailleur_1.localite as localite_bailleur_1,
    CASE 
        WHEN bailleur_1.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', bailleur_1.cedex)
    END as cedex_bailleur_1,
    bailleur_1.pays as pays_bailleur_1,
    bailleur_1.division_territoriale as division_territoriale_bailleur_1,

    --Coordonnées de du bailleur 2

    CASE WHEN bailleur_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_2_civilite.libelle, bailleur_2.particulier_nom, bailleur_2.particulier_prenom))
        ELSE
            CASE WHEN bailleur_2.personne_morale_nom IS NOT NULL OR bailleur_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', bailleur_2.personne_morale_raison_sociale, bailleur_2.personne_morale_denomination, ''représenté(e) par'', bailleur_2_civilite.libelle, bailleur_2.personne_morale_nom, bailleur_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(bailleur_2.personne_morale_raison_sociale, '' '', bailleur_2.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier'' OR bailleur_2.personne_morale_nom IS NOT NULL OR bailleur_2.personne_morale_prenom IS NOT NULL
        THEN bailleur_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN bailleur_2.particulier_nom
        ELSE
            CASE WHEN bailleur_2.personne_morale_nom IS NOT NULL
                THEN bailleur_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN bailleur_2.particulier_prenom
        ELSE
            CASE WHEN bailleur_2.personne_morale_prenom IS NOT NULL
                THEN bailleur_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_2_civilite.libelle, bailleur_2.particulier_nom, bailleur_2.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN bailleur_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN bailleur_2.particulier_nom
        ELSE ''''
    END as nom_qualite_part_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN bailleur_2.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_bailleur_2,
    CASE WHEN bailleur_2.personne_morale_nom IS NOT NULL OR bailleur_2.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', bailleur_2.personne_morale_raison_sociale, bailleur_2.personne_morale_denomination, ''représenté(e) par'', bailleur_2_civilite.libelle, bailleur_2.personne_morale_nom, bailleur_2.personne_morale_prenom))
        ELSE TRIM(CONCAT(bailleur_2.personne_morale_raison_sociale, '' '', bailleur_2.personne_morale_denomination))
    END as nom_complet_qualite_pm_bailleur_2,
    CASE WHEN bailleur_2.personne_morale_nom IS NOT NULL OR bailleur_2.personne_morale_prenom IS NOT NULL
        THEN bailleur_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_bailleur_2,
    CASE WHEN bailleur_2.personne_morale_nom IS NOT NULL
        THEN bailleur_2.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_bailleur_2,
    CASE WHEN bailleur_2.personne_morale_prenom IS NOT NULL
        THEN bailleur_2.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN ''''
        ELSE bailleur_2.personne_morale_raison_sociale
    END as raison_sociale_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN ''''
        ELSE bailleur_2.personne_morale_denomination
    END as denomination_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN ''''
        ELSE bailleur_2.personne_morale_categorie_juridique
    END as categorie_juridique_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN ''''
        ELSE bailleur_2.personne_morale_siret
    END as siret_bailleur_2,
    bailleur_2.numero as numero_bailleur_2,&DB_PREFIXEadresse(bailleur_2.numero::text, bailleur_2.voie::text, bailleur_2.complement::text, bailleur_2.lieu_dit::text, bailleur_2.bp::text, bailleur_2.code_postal::text, bailleur_2.localite::text, bailleur_2.cedex::text, bailleur_2.pays::text) as adresse_bailleur_2_sdl,&DB_PREFIXEadresse(bailleur_2.numero::text, bailleur_2.voie::text, bailleur_2.complement::text, bailleur_2.lieu_dit::text, bailleur_2.bp::text, bailleur_2.code_postal::text, bailleur_2.localite::text, bailleur_2.cedex::text, bailleur_2.pays::text, '' ''::text) as adresse_bailleur_2,
    bailleur_2.voie as voie_bailleur_2,
    bailleur_2.complement as complement_bailleur_2,
    bailleur_2.lieu_dit as lieu_dit_bailleur_2,
    CASE 
        WHEN bailleur_2.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', bailleur_2.bp)
    END as bp_bailleur_2,
    bailleur_2.code_postal as code_postal_bailleur_2,
    bailleur_2.localite as localite_bailleur_2,
    CASE 
        WHEN bailleur_2.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', bailleur_2.cedex)
    END as cedex_bailleur_2,
    bailleur_2.pays as pays_bailleur_2,
    bailleur_2.division_territoriale as division_territoriale_bailleur_2,

    --Coordonnées de du bailleur 3

    CASE WHEN bailleur_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_3_civilite.libelle, bailleur_3.particulier_nom, bailleur_3.particulier_prenom))
        ELSE
            CASE WHEN bailleur_3.personne_morale_nom IS NOT NULL OR bailleur_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', bailleur_3.personne_morale_raison_sociale, bailleur_3.personne_morale_denomination, ''représenté(e) par'', bailleur_3_civilite.libelle, bailleur_3.personne_morale_nom, bailleur_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(bailleur_3.personne_morale_raison_sociale, '' '', bailleur_3.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier'' OR bailleur_3.personne_morale_nom IS NOT NULL OR bailleur_3.personne_morale_prenom IS NOT NULL
        THEN bailleur_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN bailleur_3.particulier_nom
        ELSE
            CASE WHEN bailleur_3.personne_morale_nom IS NOT NULL
                THEN bailleur_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN bailleur_3.particulier_prenom
        ELSE
            CASE WHEN bailleur_3.personne_morale_prenom IS NOT NULL
                THEN bailleur_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_3_civilite.libelle, bailleur_3.particulier_nom, bailleur_3.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN bailleur_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN bailleur_3.particulier_nom
        ELSE ''''
    END as nom_qualite_part_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN bailleur_3.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_bailleur_3,
    CASE WHEN bailleur_3.personne_morale_nom IS NOT NULL OR bailleur_3.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', bailleur_3.personne_morale_raison_sociale, bailleur_3.personne_morale_denomination, ''représenté(e) par'', bailleur_3_civilite.libelle, bailleur_3.personne_morale_nom, bailleur_3.personne_morale_prenom))
        ELSE TRIM(CONCAT(bailleur_3.personne_morale_raison_sociale, '' '', bailleur_3.personne_morale_denomination))
    END as nom_complet_qualite_pm_bailleur_3,
    CASE WHEN bailleur_3.personne_morale_nom IS NOT NULL OR bailleur_3.personne_morale_prenom IS NOT NULL
        THEN bailleur_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_bailleur_3,
    CASE WHEN bailleur_3.personne_morale_nom IS NOT NULL
        THEN bailleur_3.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_bailleur_3,
    CASE WHEN bailleur_3.personne_morale_prenom IS NOT NULL
        THEN bailleur_3.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN ''''
        ELSE bailleur_3.personne_morale_raison_sociale
    END as raison_sociale_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN ''''
        ELSE bailleur_3.personne_morale_denomination
    END as denomination_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN ''''
        ELSE bailleur_3.personne_morale_siret
    END as siret_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN ''''
        ELSE bailleur_3.personne_morale_categorie_juridique
    END as categorie_juridique_bailleur_3,
    bailleur_3.numero as numero_bailleur_3,&DB_PREFIXEadresse(bailleur_3.numero::text, bailleur_3.voie::text, bailleur_3.complement::text, bailleur_3.lieu_dit::text, bailleur_3.bp::text, bailleur_3.code_postal::text, bailleur_3.localite::text, bailleur_3.cedex::text, bailleur_3.pays::text) as adresse_bailleur_3_sdl,&DB_PREFIXEadresse(bailleur_3.numero::text, bailleur_3.voie::text, bailleur_3.complement::text, bailleur_3.lieu_dit::text, bailleur_3.bp::text, bailleur_3.code_postal::text, bailleur_3.localite::text, bailleur_3.cedex::text, bailleur_3.pays::text, '' ''::text) as adresse_bailleur_3,
    bailleur_3.voie as voie_bailleur_3,
    bailleur_3.complement as complement_bailleur_3,
    bailleur_3.lieu_dit as lieu_dit_bailleur_3,
    CASE 
        WHEN bailleur_3.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', bailleur_3.bp)
    END as bp_bailleur_3,
    bailleur_3.code_postal as code_postal_bailleur_3,
    bailleur_3.localite as localite_bailleur_3,
    CASE 
        WHEN bailleur_3.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', bailleur_3.cedex)
    END as cedex_bailleur_3,
    bailleur_3.pays as pays_bailleur_3,
    bailleur_3.division_territoriale as division_territoriale_bailleur_3,

    --Coordonnées de du bailleur 4

    CASE WHEN bailleur_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_4_civilite.libelle, bailleur_4.particulier_nom, bailleur_4.particulier_prenom))
        ELSE
            CASE WHEN bailleur_4.personne_morale_nom IS NOT NULL OR bailleur_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', bailleur_4.personne_morale_raison_sociale, bailleur_4.personne_morale_denomination, ''représenté(e) par'', bailleur_4_civilite.libelle, bailleur_4.personne_morale_nom, bailleur_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(bailleur_4.personne_morale_raison_sociale, '' '', bailleur_4.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier'' OR bailleur_4.personne_morale_nom IS NOT NULL OR bailleur_4.personne_morale_prenom IS NOT NULL
        THEN bailleur_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN bailleur_4.particulier_nom
        ELSE
            CASE WHEN bailleur_4.personne_morale_nom IS NOT NULL
                THEN bailleur_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN bailleur_4.particulier_prenom
        ELSE
            CASE WHEN bailleur_4.personne_morale_prenom IS NOT NULL
                THEN bailleur_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_4_civilite.libelle, bailleur_4.particulier_nom, bailleur_4.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN bailleur_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN bailleur_4.particulier_nom
        ELSE ''''
    END as nom_qualite_part_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN bailleur_4.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_bailleur_4,
    CASE WHEN bailleur_4.personne_morale_nom IS NOT NULL OR bailleur_4.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', bailleur_4.personne_morale_raison_sociale, bailleur_4.personne_morale_denomination, ''représenté(e) par'', bailleur_4_civilite.libelle, bailleur_4.personne_morale_nom, bailleur_4.personne_morale_prenom))
        ELSE TRIM(CONCAT(bailleur_4.personne_morale_raison_sociale, '' '', bailleur_4.personne_morale_denomination))
    END as nom_complet_qualite_pm_bailleur_4,
    CASE WHEN bailleur_4.personne_morale_nom IS NOT NULL OR bailleur_4.personne_morale_prenom IS NOT NULL
        THEN bailleur_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_bailleur_4,
    CASE WHEN bailleur_4.personne_morale_nom IS NOT NULL
        THEN bailleur_4.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_bailleur_4,
    CASE WHEN bailleur_4.personne_morale_prenom IS NOT NULL
        THEN bailleur_4.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN ''''
        ELSE bailleur_4.personne_morale_raison_sociale
    END as raison_sociale_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN ''''
        ELSE bailleur_4.personne_morale_denomination
    END as denomination_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN ''''
        ELSE bailleur_4.personne_morale_categorie_juridique
    END as categorie_juridique_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN ''''
        ELSE bailleur_4.personne_morale_siret
    END as siret_bailleur_4,
    bailleur_4.numero as numero_bailleur_4,&DB_PREFIXEadresse(bailleur_4.numero::text, bailleur_4.voie::text, bailleur_4.complement::text, bailleur_4.lieu_dit::text, bailleur_4.bp::text, bailleur_4.code_postal::text, bailleur_4.localite::text, bailleur_4.cedex::text, bailleur_4.pays::text) as adresse_bailleur_4_sdl,&DB_PREFIXEadresse(bailleur_4.numero::text, bailleur_4.voie::text, bailleur_4.complement::text, bailleur_4.lieu_dit::text, bailleur_4.bp::text, bailleur_4.code_postal::text, bailleur_4.localite::text, bailleur_4.cedex::text, bailleur_4.pays::text, '' ''::text) as adresse_bailleur_4,
    bailleur_4.voie as voie_bailleur_4,
    bailleur_4.complement as complement_bailleur_4,
    bailleur_4.lieu_dit as lieu_dit_bailleur_4,
    CASE 
        WHEN bailleur_4.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', bailleur_4.bp)
    END as bp_bailleur_4,
    bailleur_4.code_postal as code_postal_bailleur_4,
    bailleur_4.localite as localite_bailleur_4,
    CASE 
        WHEN bailleur_4.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', bailleur_4.cedex)
    END as cedex_bailleur_4,
    bailleur_4.pays as pays_bailleur_4,
    bailleur_4.division_territoriale as division_territoriale_bailleur_4,

    --Coordonnées de du bailleur 5

    CASE WHEN bailleur_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_5_civilite.libelle, bailleur_5.particulier_nom, bailleur_5.particulier_prenom))
        ELSE
            CASE WHEN bailleur_5.personne_morale_nom IS NOT NULL OR bailleur_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', bailleur_5.personne_morale_raison_sociale, bailleur_5.personne_morale_denomination, ''représenté(e) par'', bailleur_5_civilite.libelle, bailleur_5.personne_morale_nom, bailleur_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(bailleur_5.personne_morale_raison_sociale, '' '', bailleur_5.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier'' OR bailleur_5.personne_morale_nom IS NOT NULL OR bailleur_5.personne_morale_prenom IS NOT NULL
        THEN bailleur_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN bailleur_5.particulier_nom
        ELSE
            CASE WHEN bailleur_5.personne_morale_nom IS NOT NULL
                THEN bailleur_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN bailleur_5.particulier_prenom
        ELSE
            CASE WHEN bailleur_5.personne_morale_prenom IS NOT NULL
                THEN bailleur_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_5_civilite.libelle, bailleur_5.particulier_nom, bailleur_5.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN bailleur_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN bailleur_5.particulier_nom
        ELSE ''''
    END as nom_qualite_part_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN bailleur_5.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_bailleur_5,
    CASE WHEN bailleur_5.personne_morale_nom IS NOT NULL OR bailleur_5.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', bailleur_5.personne_morale_raison_sociale, bailleur_5.personne_morale_denomination, ''représenté(e) par'', bailleur_5_civilite.libelle, bailleur_5.personne_morale_nom, bailleur_5.personne_morale_prenom))
        ELSE TRIM(CONCAT(bailleur_5.personne_morale_raison_sociale, '' '', bailleur_5.personne_morale_denomination))
    END as nom_complet_qualite_pm_bailleur_5,
    CASE WHEN bailleur_5.personne_morale_nom IS NOT NULL OR bailleur_5.personne_morale_prenom IS NOT NULL
        THEN bailleur_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_bailleur_5,
    CASE WHEN bailleur_5.personne_morale_nom IS NOT NULL
        THEN bailleur_5.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_bailleur_5,
    CASE WHEN bailleur_5.personne_morale_prenom IS NOT NULL
        THEN bailleur_5.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN ''''
        ELSE bailleur_5.personne_morale_raison_sociale
    END as raison_sociale_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN ''''
        ELSE bailleur_5.personne_morale_denomination
    END as denomination_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN ''''
        ELSE bailleur_5.personne_morale_categorie_juridique
    END as categorie_juridique_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN ''''
        ELSE bailleur_5.personne_morale_siret
    END as siret_bailleur_5,
    bailleur_5.numero as numero_bailleur_5,&DB_PREFIXEadresse(bailleur_5.numero::text, bailleur_5.voie::text, bailleur_5.complement::text, bailleur_5.lieu_dit::text, bailleur_5.bp::text, bailleur_5.code_postal::text, bailleur_5.localite::text, bailleur_5.cedex::text, bailleur_5.pays::text) as adresse_bailleur_5_sdl,&DB_PREFIXEadresse(bailleur_5.numero::text, bailleur_5.voie::text, bailleur_5.complement::text, bailleur_5.lieu_dit::text, bailleur_5.bp::text, bailleur_5.code_postal::text, bailleur_5.localite::text, bailleur_5.cedex::text, bailleur_5.pays::text, '' ''::text) as adresse_bailleur_5,
    bailleur_5.voie as voie_bailleur_5,
    bailleur_5.complement as complement_bailleur_5,
    bailleur_5.lieu_dit as lieu_dit_bailleur_5,
    CASE 
        WHEN bailleur_5.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', bailleur_5.bp)
    END as bp_bailleur_5,
    bailleur_5.code_postal as code_postal_bailleur_5,
    bailleur_5.localite as localite_bailleur_5,
    CASE 
        WHEN bailleur_5.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', bailleur_5.cedex)
    END as cedex_bailleur_5,
    bailleur_5.pays as pays_bailleur_5,
    bailleur_5.division_territoriale as division_territoriale_bailleur_5,

    -- CORRESPONDANT : destinataire du courrier. Il est le délégataire ou le pétitionnaire principal
    CASE
        WHEN delegataire.qualite IS NULL
        THEN
                CASE WHEN petitionnaire_principal.qualite=''particulier''
                    THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
                    ELSE
                        CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                            THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                            ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
                        END
                END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
                ELSE
                    CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                        THEN TRIM(CONCAT_WS('' '', delegataire.personne_morale_raison_sociale, delegataire.personne_morale_denomination, ''représenté(e) par'', delegataire_civilite.libelle, delegataire.personne_morale_nom, delegataire.personne_morale_prenom))
                        ELSE TRIM(CONCAT(delegataire.personne_morale_raison_sociale, '' '', delegataire.personne_morale_denomination))
                    END
            END
    END as nom_complet_qualite_part_ou_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier'' OR petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal_civilite.libelle
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier'' OR delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                THEN delegataire_civilite.libelle
                ELSE ''''
            END
    END as civilite_qualite_part_ou_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN petitionnaire_principal.particulier_nom
                ELSE
                    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                        THEN petitionnaire_principal.personne_morale_nom
                        ELSE ''''
                    END
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN delegataire.particulier_nom
                ELSE
                    CASE WHEN delegataire.personne_morale_nom IS NOT NULL
                        THEN delegataire.personne_morale_nom
                        ELSE ''''
                    END
            END
    END as nom_qualite_part_ou_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN petitionnaire_principal.particulier_prenom
                ELSE
                    CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                        THEN petitionnaire_principal.personne_morale_prenom
                        ELSE ''''
                    END
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN delegataire.particulier_prenom
                ELSE
                    CASE WHEN delegataire.personne_morale_prenom IS NOT NULL
                        THEN delegataire.personne_morale_prenom
                        ELSE ''''
                    END
            END
    END as prenom_qualite_part_ou_pm_correspondant,
    CASE
        WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
                ELSE ''''
            END
    END as nom_complet_qualite_part_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN petitionnaire_principal_civilite.libelle
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN delegataire_civilite.libelle
                ELSE ''''
            END
    END as civilite_qualite_part_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            petitionnaire_principal.particulier_nom
        ELSE
            delegataire.particulier_nom
    END as nom_qualite_part_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            petitionnaire_principal.particulier_prenom
        ELSE
            delegataire.particulier_prenom
    END as prenom_qualite_part_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal_civilite.libelle
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                THEN delegataire_civilite.libelle
                ELSE ''''
            END
    END as civilite_qualite_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_nom
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.personne_morale_nom IS NOT NULL
                THEN delegataire.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_prenom
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.personne_morale_prenom IS NOT NULL
                THEN delegataire.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_pm_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN
                CASE WHEN petitionnaire_principal.qualite=''particulier''
                    THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
                    ELSE
                        CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                            THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                            ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
                        END
                END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
                ELSE
                    CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                        THEN TRIM(CONCAT_WS('' '', delegataire.personne_morale_raison_sociale, delegataire.personne_morale_denomination, ''représenté(e) par'', delegataire_civilite.libelle, delegataire.personne_morale_nom, delegataire.personne_morale_prenom))
                        ELSE TRIM(CONCAT(delegataire.personne_morale_raison_sociale, '' '', delegataire.personne_morale_denomination))
                    END
            END
    END as nom_complet_qualite_pm_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN
                CASE WHEN petitionnaire_principal.qualite=''particulier''
                    THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
                    ELSE
                        CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                            THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                            ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
                        END
                END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
                ELSE
                    CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                        THEN TRIM(CONCAT_WS('' '', delegataire.personne_morale_raison_sociale, delegataire.personne_morale_denomination, ''représenté(e) par'', delegataire_civilite.libelle, delegataire.personne_morale_nom, delegataire.personne_morale_prenom))
                        ELSE TRIM(CONCAT(delegataire.personne_morale_raison_sociale, '' '', delegataire.personne_morale_denomination))
                    END
            END
    END as nom_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier'' OR petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal_civilite.libelle
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier'' OR delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                THEN delegataire_civilite.libelle
                ELSE ''''
            END
    END as civilite_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN petitionnaire_principal.particulier_nom
                ELSE
                    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                        THEN petitionnaire_principal.personne_morale_nom
                        ELSE ''''
                    END
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN delegataire.particulier_nom
                ELSE
                    CASE WHEN delegataire.personne_morale_nom IS NOT NULL
                        THEN delegataire.personne_morale_nom
                        ELSE ''''
                    END
            END
    END as nom_particulier_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN petitionnaire_principal.particulier_prenom
                ELSE
                    CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                        THEN petitionnaire_principal.personne_morale_prenom
                        ELSE ''''
                    END
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN delegataire.particulier_prenom
                ELSE
                    CASE WHEN delegataire.personne_morale_prenom IS NOT NULL
                        THEN delegataire.personne_morale_prenom
                        ELSE ''''
                    END
            END
    END as prenom_particulier_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN
                CASE WHEN petitionnaire_principal.qualite=''particulier''
                    THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
                    ELSE
                        CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                            THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                            ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
                        END
                END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
                ELSE
                    CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                        THEN TRIM(CONCAT_WS('' '', delegataire.personne_morale_raison_sociale, delegataire.personne_morale_denomination, ''représenté(e) par'', delegataire_civilite.libelle, delegataire.personne_morale_nom, delegataire.personne_morale_prenom))
                        ELSE TRIM(CONCAT(delegataire.personne_morale_raison_sociale, '' '', delegataire.personne_morale_denomination))
                    END
            END
    END as nom_complet_qualite_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal_civilite.libelle
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                THEN delegataire_civilite.libelle
                ELSE ''''
            END
    END as civilite_qualite_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_nom
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.personne_morale_nom IS NOT NULL
                THEN delegataire.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_prenom
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.personne_morale_prenom IS NOT NULL
                THEN delegataire.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN ''''
                ELSE petitionnaire_principal.personne_morale_raison_sociale
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN ''''
                ELSE delegataire.personne_morale_raison_sociale
            END
    END as raison_sociale_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN ''''
                ELSE petitionnaire_principal.personne_morale_denomination
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN ''''
                ELSE delegataire.personne_morale_denomination
            END
    END as denomination_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.numero
        ELSE delegataire.numero
    END as numero_correspondant,&DB_PREFIXEadresse(CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.numero ELSE delegataire.numero END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.voie ELSE delegataire.voie END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.complement ELSE delegataire.complement END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.lieu_dit ELSE delegataire.lieu_dit END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.bp ELSE delegataire.bp END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.code_postal ELSE delegataire.code_postal END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.localite ELSE delegataire.localite END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.cedex ELSE delegataire.cedex END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.pays ELSE delegataire.pays END::text) as adresse_correspondant_sdl,&DB_PREFIXEadresse(CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.numero ELSE delegataire.numero END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.voie ELSE delegataire.voie END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.complement ELSE delegataire.complement END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.lieu_dit ELSE delegataire.lieu_dit END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.bp ELSE delegataire.bp END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.code_postal ELSE delegataire.code_postal END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.localite ELSE delegataire.localite END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.cedex ELSE delegataire.cedex END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.pays ELSE delegataire.pays END::text, '' ''::text) as adresse_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.voie
        ELSE delegataire.voie
    END as voie_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.complement
        ELSE delegataire.complement
    END as complement_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.lieu_dit
        ELSE delegataire.lieu_dit
    END as lieu_dit_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN 
            CASE 
                WHEN petitionnaire_principal.bp IS NULL
                THEN ''''
                ELSE CONCAT(''BP '', petitionnaire_principal.bp)
            END
        ELSE 
            CASE 
                WHEN delegataire.bp IS NULL
                THEN ''''
                ELSE CONCAT(''BP '', delegataire.bp)
            END
    END as bp_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.code_postal
        ELSE delegataire.code_postal
    END as code_postal_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.localite
        ELSE delegataire.localite
    END as ville_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN 
            CASE 
                WHEN petitionnaire_principal.cedex IS NULL
                THEN ''''
                ELSE CONCAT(''CEDEX '', petitionnaire_principal.cedex)
            END
        ELSE 
            CASE 
                WHEN delegataire.cedex IS NULL
                THEN ''''
                ELSE CONCAT(''CEDEX '', delegataire.cedex)
            END
    END as cedex_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.pays
        ELSE delegataire.pays
    END as pays_correspondant,

    -- Dates importantes du dossier d''instructionto_char(dossier.date_depot_mairie, ''DD/MM/YYYY'') as date_depot_mairie,
to_char(dossier.date_affichage, ''DD/MM/YYYY'') as date_affichage,
    to_char(dossier.date_depot, ''DD/MM/YYYY'') as date_depot_dossier,
    to_char(dossier.date_complet, ''DD/MM/YYYY'') as date_completude,
    to_char(dossier.date_dernier_depot, ''DD/MM/YYYY'') as date_dernier_depot,
    to_char(dossier.date_decision, ''DD/MM/YYYY'') as date_decision_dossier,
    CASE WHEN dossier.incomplet_notifie IS TRUE AND dossier.incompletude IS TRUE 
        THEN to_char(dossier.date_limite_incompletude ,''DD/MM/YYYY'') 
        ELSE to_char(dossier.date_limite ,''DD/MM/YYYY'')
    END as date_limite_dossier,
    to_char(dossier.date_achevement,''DD/MM/YYYY'') as date_achevement_dossier,
    to_char(dossier.date_conformite,''DD/MM/YYYY'') as date_conformite_dossier,
    
    -- Données générales des données techniques
    donnees_techniques.co_projet_desc as co_projet_desc_donnees_techniques,
    donnees_techniques.am_projet_desc as am_projet_desc_donnees_techniques,
    donnees_techniques.dm_projet_desc as dm_projet_desc_donnees_techniques,
    donnees_techniques.ope_proj_desc as ope_proj_desc_donnees_techniques,
    TRIM(CONCAT(
        donnees_techniques.co_projet_desc, '' '',
        donnees_techniques.am_projet_desc, '' '',
        donnees_techniques.dm_projet_desc, '' '',
        donnees_techniques.ope_proj_desc
        )) as projet_desc_donnees_techniques,
    donnees_techniques.am_lot_max_nb as am_lot_max_nb_donnees_techniques,
    donnees_techniques.am_lot_max_shon as am_lot_max_shon_donnees_techniques,
        -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        THEN donnees_techniques.su2_cstr_shon_tot
        ELSE donnees_techniques.su_cstr_shon_tot
    END as su_cstr_shon_tot_donnees_techniques,
    -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        THEN donnees_techniques.su2_demo_shon_tot
        ELSE donnees_techniques.su_demo_shon_tot
    END as su_demo_shon_tot_donnees_techniques,
    -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        THEN
            REGEXP_REPLACE(CONCAT(
                CASE WHEN donnees_techniques.su2_cstr_shon1 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Exploitation agricole - '', donnees_techniques.su2_cstr_shon1, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon2 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Exploitation forestière - '', donnees_techniques.su2_cstr_shon2, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon3 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Logement - '', donnees_techniques.su2_cstr_shon3, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon4 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Hébergement - '', donnees_techniques.su2_cstr_shon4, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon5 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Artisanat et commerce de détail - '', donnees_techniques.su2_cstr_shon5, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon6 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Restauration - '', donnees_techniques.su2_cstr_shon6, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon7 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Commerce de gros - '', donnees_techniques.su2_cstr_shon7, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon8 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Activités de services où s''''effectue l''''accueil d''''une clientèle - '', donnees_techniques.su2_cstr_shon8, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon9 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Hébergement hôtelier et touristique - '', donnees_techniques.su2_cstr_shon9, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon10 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Cinéma - '', donnees_techniques.su2_cstr_shon10, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon11 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Locaux et bureaux accueillant du public des administrations publiques et assimilés - '', donnees_techniques.su2_cstr_shon11, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon12 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Locaux techniques et industriels des administrations publiques et assimilés - '', donnees_techniques.su2_cstr_shon12, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon13 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Établissements d''''enseignement, de santé et d''''action sociale - '', donnees_techniques.su2_cstr_shon13, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon14 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Salles d''''art et de spectacles - '', donnees_techniques.su2_cstr_shon14, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon15 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Équipements sportifs - '', donnees_techniques.su2_cstr_shon15, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon16 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Autres équipements recevant du public - '', donnees_techniques.su2_cstr_shon16, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon17 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Industrie - '', donnees_techniques.su2_cstr_shon17, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon18 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Entrepôt - '', donnees_techniques.su2_cstr_shon18, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon19 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Bureau - '', donnees_techniques.su2_cstr_shon19, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon20 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Centre de congrès et d''''exposition - '', donnees_techniques.su2_cstr_shon20, '' m²'')
                END
            ), '' / $'', '''')
        ELSE
            REGEXP_REPLACE(CONCAT(
                CASE
                    WHEN donnees_techniques.su_cstr_shon1 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Habitation - '', donnees_techniques.su_cstr_shon1, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon2 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Hébergement hôtelier - '', donnees_techniques.su_cstr_shon2, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon3 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Bureaux - '', donnees_techniques.su_cstr_shon3, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon4 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Commerce - '', donnees_techniques.su_cstr_shon4, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon5 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Artisanat - '', donnees_techniques.su_cstr_shon5, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon6 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Industrie - '', donnees_techniques.su_cstr_shon6, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon7 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Exploitation agricole ou forestière - '', donnees_techniques.su_cstr_shon7, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon8 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Entrepôt - '', donnees_techniques.su_cstr_shon8, '' m² / '')
                END, 
                CASE
                    WHEN donnees_techniques.su_cstr_shon9 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Service public ou d''''intérêt collectif - '', donnees_techniques.su_cstr_shon9, '' m²'')
                END
            ), '' / $'', '''')
    END as tab_surface_donnees_techniques,
    donnees_techniques.co_tot_log_nb as co_tot_log_nb_donnees_techniques,
    donnees_techniques.co_statio_place_nb as co_statio_place_nb_donnees_techniques,
    -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        THEN donnees_techniques.su2_tot_shon_tot
        ELSE donnees_techniques.su_tot_shon_tot
    END as su_tot_shon_tot_donnees_techniques,

    -- Données techniques pour les AT
    CONCAT_WS('', '',
        CASE WHEN donnees_techniques.erp_cstr_neuve IS TRUE THEN ''construction neuve'' END,
        CASE WHEN donnees_techniques.erp_trvx_acc IS TRUE THEN ''travaux de mise en conformité totale aux règles d’accessibilité'' END,
        CASE WHEN donnees_techniques.erp_extension IS TRUE THEN ''extension'' END,
        CASE WHEN donnees_techniques.erp_rehab IS TRUE THEN ''réhabilitation'' END,
        CASE WHEN donnees_techniques.erp_trvx_am IS TRUE THEN ''travaux d’aménagement (remplacement de revêtements, rénovation électrique, création d’une rampe, par exemple)'' END,
        CASE WHEN donnees_techniques.erp_vol_nouv_exist IS TRUE THEN ''création de volumes nouveaux dans des volumes existants (modification du cloisonnement, par exemple)'' END
    ) as at_type_travaux,
    donnees_techniques.erp_public_eff_tot as at_effectif_public_total,
    CONCAT_WS('' - '', erp_categorie.libelle, erp_categorie.description) as at_categorie_etablissement,
    CONCAT_WS('' - '', erp_type.libelle, erp_type.description) as at_type_etablissement,

    -- Données techniques pour le contentieux
    objet_recours.libelle as ctx_objet_recours_libelle,
    donnees_techniques.ctx_reference_sagace as ctx_reference_sagace,
    donnees_techniques.ctx_nature_travaux_infra_om_html as ctx_nature_travaux_infra_om_html,
    donnees_techniques.ctx_synthese_nti as ctx_synthese_nti,
    donnees_techniques.ctx_article_non_resp_om_html as ctx_article_non_resp_om_html,
    donnees_techniques.ctx_synthese_anr as ctx_synthese_anr,
    donnees_techniques.ctx_reference_parquet as ctx_reference_parquet,
    donnees_techniques.ctx_element_taxation as ctx_element_taxation,
    CASE donnees_techniques.ctx_infraction WHEN ''t'' THEN ''Oui'' else ''Non'' end as ctx_infraction,
    CASE donnees_techniques.ctx_regularisable WHEN ''t'' THEN ''Oui'' else ''Non'' end as ctx_regularisable,
    donnees_techniques.ctx_reference_courrier as ctx_reference_courrier,
    to_char(donnees_techniques.ctx_date_audience, ''DD/MM/YYYY'') as date_audience_ctx,
    to_char(donnees_techniques.ctx_date_ajournement, ''DD/MM/YYYY'') as date_ajournement_ctx,

    -- Données techniques pour les DPC
    donnees_techniques.dpc_type as dpc_type,
    donnees_techniques.dpc_moda_cess_prix as dpc_moda_cess_prix

FROM
    &DB_PREFIXEdossier
LEFT JOIN (
        SELECT *
        FROM &DB_PREFIXElien_dossier_demandeur
        INNER JOIN &DB_PREFIXEdemandeur
            ON demandeur.demandeur = lien_dossier_demandeur.demandeur
        WHERE lien_dossier_demandeur.petitionnaire_principal IS TRUE
        AND demandeur.type_demandeur = ''petitionnaire''
    ) as petitionnaire_principal
    ON petitionnaire_principal.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEcivilite as petitionnaire_principal_civilite
    ON
        petitionnaire_principal.particulier_civilite = petitionnaire_principal_civilite.civilite OR petitionnaire_principal.personne_morale_civilite = petitionnaire_principal_civilite.civilite
LEFT JOIN (
        SELECT *
        FROM &DB_PREFIXElien_dossier_demandeur
        INNER JOIN &DB_PREFIXEdemandeur
            ON demandeur.demandeur = lien_dossier_demandeur.demandeur
        WHERE lien_dossier_demandeur.petitionnaire_principal IS TRUE
        AND demandeur.type_demandeur = ''contrevenant''
    ) as contrevenant_principal
    ON contrevenant_principal.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEcivilite as contrevenant_principal_civilite
    ON
        contrevenant_principal.particulier_civilite = contrevenant_principal_civilite.civilite OR contrevenant_principal.personne_morale_civilite = contrevenant_principal_civilite.civilite
LEFT JOIN (
        SELECT *
        FROM &DB_PREFIXElien_dossier_demandeur
        INNER JOIN &DB_PREFIXEdemandeur
            ON demandeur.demandeur = lien_dossier_demandeur.demandeur
        WHERE lien_dossier_demandeur.petitionnaire_principal IS TRUE
        AND demandeur.type_demandeur = ''requerant''
    ) as requerant_principal
    ON requerant_principal.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEcivilite as requerant_principal_civilite
    ON
        requerant_principal.particulier_civilite = requerant_principal_civilite.civilite OR requerant_principal.personne_morale_civilite = requerant_principal_civilite.civilite
LEFT JOIN (
        SELECT *
        FROM &DB_PREFIXElien_dossier_demandeur
        INNER JOIN &DB_PREFIXEdemandeur
            ON demandeur.demandeur = lien_dossier_demandeur.demandeur
        WHERE lien_dossier_demandeur.petitionnaire_principal IS TRUE
        AND demandeur.type_demandeur = ''avocat''
    ) as avocat_principal
    ON avocat_principal.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEcivilite as avocat_principal_civilite
    ON
        avocat_principal.particulier_civilite = avocat_principal_civilite.civilite OR avocat_principal.personne_morale_civilite = avocat_principal_civilite.civilite
LEFT JOIN (
        SELECT *
        FROM &DB_PREFIXElien_dossier_demandeur
        INNER JOIN &DB_PREFIXEdemandeur
            ON demandeur.demandeur = lien_dossier_demandeur.demandeur
        WHERE lien_dossier_demandeur.petitionnaire_principal IS TRUE
        AND demandeur.type_demandeur = ''plaignant''
    ) as plaignant_principal
    ON plaignant_principal.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEcivilite as plaignant_principal_civilite
    ON
        plaignant_principal.particulier_civilite = plaignant_principal_civilite.civilite OR plaignant_principal.personne_morale_civilite = plaignant_principal_civilite.civilite
LEFT JOIN
    (
    &DB_PREFIXElien_dossier_demandeur AS lien_dossier_delegataire
        JOIN &DB_PREFIXEdemandeur as delegataire
        ON
            lien_dossier_delegataire.demandeur = delegataire.demandeur AND delegataire.type_demandeur = ''delegataire''
    )
    ON
        dossier.dossier = lien_dossier_delegataire.dossier AND lien_dossier_delegataire.petitionnaire_principal IS FALSE
LEFT JOIN
    &DB_PREFIXEcivilite as delegataire_civilite
    ON
        delegataire.particulier_civilite = delegataire_civilite.civilite OR delegataire.personne_morale_civilite = delegataire_civilite.civilite
LEFT JOIN (
        SELECT *
        FROM &DB_PREFIXElien_dossier_demandeur
        INNER JOIN &DB_PREFIXEdemandeur
            ON demandeur.demandeur = lien_dossier_demandeur.demandeur
        WHERE lien_dossier_demandeur.petitionnaire_principal IS TRUE
        AND demandeur.type_demandeur = ''bailleur''
    ) as bailleur_principal
    ON bailleur_principal.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEcivilite as bailleur_principal_civilite
    ON
        bailleur_principal.particulier_civilite = bailleur_principal_civilite.civilite OR bailleur_principal.personne_morale_civilite = bailleur_principal_civilite.civilite
LEFT JOIN (
    SELECT lien_dossier_demandeur.dossier, array_agg(lien_dossier_demandeur.demandeur ORDER BY lien_dossier_demandeur.demandeur) AS petitionnaire_autre
    FROM &DB_PREFIXElien_dossier_demandeur
    LEFT JOIN &DB_PREFIXEdossier
        ON lien_dossier_demandeur.dossier=dossier.dossier
        AND lien_dossier_demandeur.petitionnaire_principal IS FALSE
    RIGHT JOIN &DB_PREFIXEdemandeur
        ON lien_dossier_demandeur.demandeur=demandeur.demandeur
        AND demandeur.type_demandeur = ''petitionnaire''
    WHERE dossier.dossier = ''&idx''
    GROUP BY lien_dossier_demandeur.dossier
) as sub_petitionnaire_autre
ON dossier.dossier = sub_petitionnaire_autre.dossier
LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_1
    ON
        petitionnaire_1.demandeur = petitionnaire_autre[1] AND petitionnaire_1.type_demandeur = ''petitionnaire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_1_civilite
    ON
        petitionnaire_1.particulier_civilite = petitionnaire_1_civilite.civilite OR petitionnaire_1.personne_morale_civilite = petitionnaire_1_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_2
    ON
        petitionnaire_2.demandeur = petitionnaire_autre[2] AND petitionnaire_2.type_demandeur = ''petitionnaire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_2_civilite
    ON
        petitionnaire_2.particulier_civilite = petitionnaire_2_civilite.civilite OR petitionnaire_2.personne_morale_civilite = petitionnaire_2_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_3
    ON
        petitionnaire_3.demandeur = petitionnaire_autre[3] AND petitionnaire_3.type_demandeur = ''petitionnaire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_3_civilite
    ON
        petitionnaire_3.particulier_civilite = petitionnaire_3_civilite.civilite OR petitionnaire_3.personne_morale_civilite = petitionnaire_3_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_4
    ON
        petitionnaire_4.demandeur = petitionnaire_autre[4] AND petitionnaire_4.type_demandeur = ''petitionnaire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_4_civilite
    ON
        petitionnaire_4.particulier_civilite = petitionnaire_4_civilite.civilite OR petitionnaire_4.personne_morale_civilite = petitionnaire_4_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_5
    ON
        petitionnaire_5.demandeur = petitionnaire_autre[5] AND petitionnaire_5.type_demandeur = ''petitionnaire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_5_civilite
    ON
        petitionnaire_5.particulier_civilite = petitionnaire_5_civilite.civilite OR petitionnaire_5.personne_morale_civilite = petitionnaire_5_civilite.civilite
LEFT JOIN (
    SELECT lien_dossier_demandeur.dossier, array_agg(lien_dossier_demandeur.demandeur ORDER BY lien_dossier_demandeur.demandeur) AS contrevenant_autre
    FROM &DB_PREFIXElien_dossier_demandeur
    LEFT JOIN &DB_PREFIXEdossier
        ON lien_dossier_demandeur.dossier=dossier.dossier
        AND lien_dossier_demandeur.petitionnaire_principal IS FALSE
    RIGHT JOIN &DB_PREFIXEdemandeur
        ON lien_dossier_demandeur.demandeur=demandeur.demandeur
        AND demandeur.type_demandeur = ''contrevenant''
    WHERE dossier.dossier = ''&idx''
    GROUP BY lien_dossier_demandeur.dossier
) as sub_contrevenant_autre
ON dossier.dossier = sub_contrevenant_autre.dossier
LEFT JOIN
        &DB_PREFIXEdemandeur as contrevenant_1
    ON
        contrevenant_1.demandeur = contrevenant_autre[1] AND contrevenant_1.type_demandeur = ''contrevenant''
    LEFT JOIN
        &DB_PREFIXEcivilite as contrevenant_1_civilite
    ON
        contrevenant_1.particulier_civilite = contrevenant_1_civilite.civilite OR contrevenant_1.personne_morale_civilite = contrevenant_1_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as contrevenant_2
    ON
        contrevenant_2.demandeur = contrevenant_autre[2] AND contrevenant_2.type_demandeur = ''contrevenant''
    LEFT JOIN
        &DB_PREFIXEcivilite as contrevenant_2_civilite
    ON
        contrevenant_2.particulier_civilite = contrevenant_2_civilite.civilite OR contrevenant_2.personne_morale_civilite = contrevenant_2_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as contrevenant_3
    ON
        contrevenant_3.demandeur = contrevenant_autre[3] AND contrevenant_3.type_demandeur = ''contrevenant''
    LEFT JOIN
        &DB_PREFIXEcivilite as contrevenant_3_civilite
    ON
        contrevenant_3.particulier_civilite = contrevenant_3_civilite.civilite OR contrevenant_3.personne_morale_civilite = contrevenant_3_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as contrevenant_4
    ON
        contrevenant_4.demandeur = contrevenant_autre[4] AND contrevenant_4.type_demandeur = ''contrevenant''
    LEFT JOIN
        &DB_PREFIXEcivilite as contrevenant_4_civilite
    ON
        contrevenant_4.particulier_civilite = contrevenant_4_civilite.civilite OR contrevenant_4.personne_morale_civilite = contrevenant_4_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as contrevenant_5
    ON
        contrevenant_5.demandeur = contrevenant_autre[5] AND contrevenant_5.type_demandeur = ''contrevenant''
    LEFT JOIN
        &DB_PREFIXEcivilite as contrevenant_5_civilite
    ON
        contrevenant_5.particulier_civilite = contrevenant_5_civilite.civilite OR contrevenant_5.personne_morale_civilite = contrevenant_5_civilite.civilite
LEFT JOIN (
    SELECT lien_dossier_demandeur.dossier, array_agg(lien_dossier_demandeur.demandeur ORDER BY lien_dossier_demandeur.demandeur) AS requerant_autre
    FROM &DB_PREFIXElien_dossier_demandeur
    LEFT JOIN &DB_PREFIXEdossier
        ON lien_dossier_demandeur.dossier=dossier.dossier
        AND lien_dossier_demandeur.petitionnaire_principal IS FALSE
    RIGHT JOIN &DB_PREFIXEdemandeur
        ON lien_dossier_demandeur.demandeur=demandeur.demandeur
        AND demandeur.type_demandeur = ''requerant''
    WHERE dossier.dossier = ''&idx''
    GROUP BY lien_dossier_demandeur.dossier
) as sub_requerant_autre
ON dossier.dossier = sub_requerant_autre.dossier
LEFT JOIN
        &DB_PREFIXEdemandeur as requerant_1
    ON
        requerant_1.demandeur = requerant_autre[1] AND requerant_1.type_demandeur = ''requerant''
    LEFT JOIN
        &DB_PREFIXEcivilite as requerant_1_civilite
    ON
        requerant_1.particulier_civilite = requerant_1_civilite.civilite OR requerant_1.personne_morale_civilite = requerant_1_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as requerant_2
    ON
        requerant_2.demandeur = requerant_autre[2] AND requerant_2.type_demandeur = ''requerant''
    LEFT JOIN
        &DB_PREFIXEcivilite as requerant_2_civilite
    ON
        requerant_2.particulier_civilite = requerant_2_civilite.civilite OR requerant_2.personne_morale_civilite = requerant_2_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as requerant_3
    ON
        requerant_3.demandeur = requerant_autre[3] AND requerant_3.type_demandeur = ''requerant''
    LEFT JOIN
        &DB_PREFIXEcivilite as requerant_3_civilite
    ON
        requerant_3.particulier_civilite = requerant_3_civilite.civilite OR requerant_3.personne_morale_civilite = requerant_3_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as requerant_4
    ON
        requerant_4.demandeur = requerant_autre[4] AND requerant_4.type_demandeur = ''requerant''
    LEFT JOIN
        &DB_PREFIXEcivilite as requerant_4_civilite
    ON
        requerant_4.particulier_civilite = requerant_4_civilite.civilite OR requerant_4.personne_morale_civilite = requerant_4_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as requerant_5
    ON
        requerant_5.demandeur = requerant_autre[5] AND requerant_5.type_demandeur = ''requerant''
    LEFT JOIN
        &DB_PREFIXEcivilite as requerant_5_civilite
    ON
        requerant_5.particulier_civilite = requerant_5_civilite.civilite OR requerant_5.personne_morale_civilite = requerant_5_civilite.civilite
LEFT JOIN (
    SELECT lien_dossier_demandeur.dossier, array_agg(lien_dossier_demandeur.demandeur ORDER BY lien_dossier_demandeur.demandeur) AS avocat_autre
    FROM &DB_PREFIXElien_dossier_demandeur
    LEFT JOIN &DB_PREFIXEdossier
        ON lien_dossier_demandeur.dossier=dossier.dossier
        AND lien_dossier_demandeur.petitionnaire_principal IS FALSE
    RIGHT JOIN &DB_PREFIXEdemandeur
        ON lien_dossier_demandeur.demandeur=demandeur.demandeur
        AND demandeur.type_demandeur = ''avocat''
    WHERE dossier.dossier = ''&idx''
    GROUP BY lien_dossier_demandeur.dossier
) as sub_avocat_autre
ON dossier.dossier = sub_avocat_autre.dossier
LEFT JOIN
        &DB_PREFIXEdemandeur as avocat_1
    ON
        avocat_1.demandeur = avocat_autre[1] AND avocat_1.type_demandeur = ''avocat''
    LEFT JOIN
        &DB_PREFIXEcivilite as avocat_1_civilite
    ON
        avocat_1.particulier_civilite = avocat_1_civilite.civilite OR avocat_1.personne_morale_civilite = avocat_1_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as avocat_2
    ON
        avocat_2.demandeur = avocat_autre[2] AND avocat_2.type_demandeur = ''avocat''
    LEFT JOIN
        &DB_PREFIXEcivilite as avocat_2_civilite
    ON
        avocat_2.particulier_civilite = avocat_2_civilite.civilite OR avocat_2.personne_morale_civilite = avocat_2_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as avocat_3
    ON
        avocat_3.demandeur = avocat_autre[3] AND avocat_3.type_demandeur = ''avocat''
    LEFT JOIN
        &DB_PREFIXEcivilite as avocat_3_civilite
    ON
        avocat_3.particulier_civilite = avocat_3_civilite.civilite OR avocat_3.personne_morale_civilite = avocat_3_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as avocat_4
    ON
        avocat_4.demandeur = avocat_autre[4] AND avocat_4.type_demandeur = ''avocat''
    LEFT JOIN
        &DB_PREFIXEcivilite as avocat_4_civilite
    ON
        avocat_4.particulier_civilite = avocat_4_civilite.civilite OR avocat_4.personne_morale_civilite = avocat_4_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as avocat_5
    ON
        avocat_5.demandeur = avocat_autre[5] AND avocat_5.type_demandeur = ''avocat''
    LEFT JOIN
        &DB_PREFIXEcivilite as avocat_5_civilite
    ON
        avocat_5.particulier_civilite = avocat_5_civilite.civilite OR avocat_5.personne_morale_civilite = avocat_5_civilite.civilite
LEFT JOIN (
    SELECT lien_dossier_demandeur.dossier, array_agg(lien_dossier_demandeur.demandeur ORDER BY lien_dossier_demandeur.demandeur) AS plaignant_autre
    FROM &DB_PREFIXElien_dossier_demandeur
    LEFT JOIN &DB_PREFIXEdossier
        ON lien_dossier_demandeur.dossier=dossier.dossier
        AND lien_dossier_demandeur.petitionnaire_principal IS FALSE
    RIGHT JOIN &DB_PREFIXEdemandeur
        ON lien_dossier_demandeur.demandeur=demandeur.demandeur
        AND demandeur.type_demandeur = ''plaignant''
    WHERE dossier.dossier = ''&idx''
    GROUP BY lien_dossier_demandeur.dossier
) as sub_plaignant_autre
ON dossier.dossier = sub_plaignant_autre.dossier
LEFT JOIN
        &DB_PREFIXEdemandeur as plaignant_1
    ON
        plaignant_1.demandeur = plaignant_autre[1] AND plaignant_1.type_demandeur = ''plaignant''
    LEFT JOIN
        &DB_PREFIXEcivilite as plaignant_1_civilite
    ON
        plaignant_1.particulier_civilite = plaignant_1_civilite.civilite OR plaignant_1.personne_morale_civilite = plaignant_1_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as plaignant_2
    ON
        plaignant_2.demandeur = plaignant_autre[2] AND plaignant_2.type_demandeur = ''plaignant''
    LEFT JOIN
        &DB_PREFIXEcivilite as plaignant_2_civilite
    ON
        plaignant_2.particulier_civilite = plaignant_2_civilite.civilite OR plaignant_2.personne_morale_civilite = plaignant_2_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as plaignant_3
    ON
        plaignant_3.demandeur = plaignant_autre[3] AND plaignant_3.type_demandeur = ''plaignant''
    LEFT JOIN
        &DB_PREFIXEcivilite as plaignant_3_civilite
    ON
        plaignant_3.particulier_civilite = plaignant_3_civilite.civilite OR plaignant_3.personne_morale_civilite = plaignant_3_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as plaignant_4
    ON
        plaignant_4.demandeur = plaignant_autre[4] AND plaignant_4.type_demandeur = ''plaignant''
    LEFT JOIN
        &DB_PREFIXEcivilite as plaignant_4_civilite
    ON
        plaignant_4.particulier_civilite = plaignant_4_civilite.civilite OR plaignant_4.personne_morale_civilite = plaignant_4_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as plaignant_5
    ON
        plaignant_5.demandeur = plaignant_autre[5] AND plaignant_5.type_demandeur = ''plaignant''
    LEFT JOIN
        &DB_PREFIXEcivilite as plaignant_5_civilite
    ON
        plaignant_5.particulier_civilite = plaignant_5_civilite.civilite OR plaignant_5.personne_morale_civilite = plaignant_5_civilite.civilite
LEFT JOIN (
    SELECT lien_dossier_demandeur.dossier, array_agg(lien_dossier_demandeur.demandeur ORDER BY lien_dossier_demandeur.demandeur) AS bailleur_autre
    FROM &DB_PREFIXElien_dossier_demandeur
    LEFT JOIN &DB_PREFIXEdossier
        ON lien_dossier_demandeur.dossier=dossier.dossier
        AND lien_dossier_demandeur.petitionnaire_principal IS FALSE
    RIGHT JOIN &DB_PREFIXEdemandeur
        ON lien_dossier_demandeur.demandeur=demandeur.demandeur
        AND demandeur.type_demandeur = ''bailleur''
    WHERE dossier.dossier = ''&idx''
    GROUP BY lien_dossier_demandeur.dossier
) as sub_bailleur_autre
ON dossier.dossier = sub_bailleur_autre.dossier
LEFT JOIN
        &DB_PREFIXEdemandeur as bailleur_1
    ON
        bailleur_1.demandeur = bailleur_autre[1] AND bailleur_1.type_demandeur = ''bailleur''
    LEFT JOIN
        &DB_PREFIXEcivilite as bailleur_1_civilite
    ON
        bailleur_1.particulier_civilite = bailleur_1_civilite.civilite OR bailleur_1.personne_morale_civilite = bailleur_1_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as bailleur_2
    ON
        bailleur_2.demandeur = bailleur_autre[2] AND bailleur_2.type_demandeur = ''bailleur''
    LEFT JOIN
        &DB_PREFIXEcivilite as bailleur_2_civilite
    ON
        bailleur_2.particulier_civilite = bailleur_2_civilite.civilite OR bailleur_2.personne_morale_civilite = bailleur_2_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as bailleur_3
    ON
        bailleur_3.demandeur = bailleur_autre[3] AND bailleur_3.type_demandeur = ''bailleur''
    LEFT JOIN
        &DB_PREFIXEcivilite as bailleur_3_civilite
    ON
        bailleur_3.particulier_civilite = bailleur_3_civilite.civilite OR bailleur_3.personne_morale_civilite = bailleur_3_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as bailleur_4
    ON
        bailleur_4.demandeur = bailleur_autre[4] AND bailleur_4.type_demandeur = ''bailleur''
    LEFT JOIN
        &DB_PREFIXEcivilite as bailleur_4_civilite
    ON
        bailleur_4.particulier_civilite = bailleur_4_civilite.civilite OR bailleur_4.personne_morale_civilite = bailleur_4_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as bailleur_5
    ON
        bailleur_5.demandeur = bailleur_autre[5] AND bailleur_5.type_demandeur = ''bailleur''
    LEFT JOIN
        &DB_PREFIXEcivilite as bailleur_5_civilite
    ON
        bailleur_5.particulier_civilite = bailleur_5_civilite.civilite OR bailleur_5.personne_morale_civilite = bailleur_5_civilite.civilite
LEFT JOIN
    &DB_PREFIXEdossier_instruction_type
    ON
        dossier.dossier_instruction_type = dossier_instruction_type.dossier_instruction_type
LEFT JOIN
    &DB_PREFIXEdossier_autorisation
    ON
        dossier.dossier_autorisation = dossier_autorisation.dossier_autorisation
LEFT JOIN
    &DB_PREFIXEdossier_autorisation_type_detaille
    ON
        dossier_autorisation.dossier_autorisation_type_detaille = dossier_autorisation_type_detaille.dossier_autorisation_type_detaille
LEFT JOIN
    &DB_PREFIXEdossier_autorisation_type
    ON
        dossier_autorisation_type_detaille.dossier_autorisation_type = dossier_autorisation_type.dossier_autorisation_type
LEFT JOIN
    &DB_PREFIXEinstructeur
    ON
        dossier.instructeur = instructeur.instructeur
LEFT JOIN
    &DB_PREFIXEinstructeur as instructeur_2
    ON
        dossier.instructeur_2 = instructeur_2.instructeur
LEFT JOIN
    &DB_PREFIXEom_utilisateur
    ON
        om_utilisateur.om_utilisateur = instructeur.om_utilisateur
LEFT JOIN
    &DB_PREFIXEom_utilisateur as om_utilisateur_2
    ON
        om_utilisateur_2.om_utilisateur = instructeur_2.om_utilisateur
LEFT JOIN
    &DB_PREFIXEdivision
    ON
        instructeur.division = division.division
LEFT JOIN
    &DB_PREFIXEdivision as division_2
    ON
        instructeur_2.division = division_2.division
LEFT JOIN
    &DB_PREFIXEdirection
    ON
        division.direction = direction.direction
LEFT JOIN
    &DB_PREFIXEarrondissement
    ON
        dossier.terrain_adresse_code_postal = arrondissement.code_postal
LEFT JOIN
    &DB_PREFIXEavis_decision
    ON
        dossier.avis_decision = avis_decision.avis_decision
LEFT JOIN
    &DB_PREFIXEetat
    ON
        dossier.etat = etat.etat
LEFT JOIN
    &DB_PREFIXEdonnees_techniques
    ON
    dossier.dossier = donnees_techniques.dossier_instruction
LEFT JOIN
    &DB_PREFIXEarchitecte
    ON
    donnees_techniques.architecte = architecte.architecte
LEFT JOIN
    &DB_PREFIXEtaxe_amenagement
    ON
        dossier.om_collectivite = taxe_amenagement.om_collectivite
LEFT JOIN
    &DB_PREFIXEerp_categorie
    ON
        donnees_techniques.erp_class_cat = erp_categorie.erp_categorie
LEFT JOIN
    &DB_PREFIXEerp_type
    ON
        donnees_techniques.erp_class_type = erp_type.erp_type
LEFT JOIN
    &DB_PREFIXEobjet_recours
    ON
        donnees_techniques.ctx_objet_recours = objet_recours.objet_recours
WHERE dossier.dossier = ''&idx''
', '-- Données générales du dossier d''instruction
[libelle_dossier]    [code_barres_dossier]
[etat_dossier]    [libelle_da]
[code_datd]    [libelle_datd]
[code_dat]    [libelle_dat]
[code_dit]    [libelle_dit]
[delai_dossier]
[terrain_references_cadastrales_dossier]
[libelle_avis_decision]

-- Données contentieux du dossier d''instruction
[autorisation_contestee]
[date_cloture_instruction_dossier]
[date_premiere_visite_dossier]
[date_derniere_visite_dossier]
[date_contradictoire_dossier]
[date_retour_contradictoire_dossier]
[date_ait_dossier]
[date_transmission_parquet_dossier]

-- Coordonnées de l''instructeur
[nom_instructeur]
[telephone_instructeur]
[division_instructeur]
[email_instructeur]

-- Coordonnées de l''instructeur 2
[nom_instructeur_2]
[telephone_instructeur_2]
[division_instructeur_2]
[email_instructeur_2]

-- Noms des signataires
[division_chef]
[direction_chef]
[libelle_direction]
[description_direction]

-- Adresse du terrain du dossier d''instruction
[terrain_adresse_voie_numero_dossier][adresse_terrain_sdl][adresse_terrain]    [terrain_adresse_voie_dossier]
[terrain_adresse_lieu_dit_dossier]    [terrain_adresse_bp_dossier]
[terrain_adresse_code_postal_dossier]    [terrain_adresse_localite_dossier]    [terrain_adresse_cedex_dossier]
[libelle_arrondissement]

-- Nom et prénom de l''architecte
[architecte]

--Taxe d''aménagement du dossier d''instruction
[tax_taux_secteur](à utiliser si l''option de simulation des taxes est activée et que le taxe du secteur est définit sur le dossier)
[tax_taux_secteur_1](jusqu''à 20)  [tax_numero_secteur]    [tax_montant_part_communale]    [tax_montant_part_departementale]
[tax_montant_part_regionale]    [tax_montant_total] [tax_secteur]   [tax_en_ile_de_france]
[tax_val_forf_surf_cstr]    [tax_val_forf_empl_tente_carav_rml] [tax_val_forf_empl_hll] [tax_val_forf_surf_piscine]
[tax_val_forf_nb_eolienne]  [tax_val_forf_surf_pann_photo]  [tax_val_forf_nb_parking_ext]   [tax_tx_depart] [tax_tx_reg]
[tax_tx_exo_facul_1_reg] [tax_tx_exo_facul_2_reg]   [tax_tx_exo_facul_3_reg]    [tax_tx_exo_facul_4_reg]    [tax_tx_exo_facul_5_reg]
[tax_tx_exo_facul_6_reg] [tax_tx_exo_facul_7_reg] [tax_tx_exo_facul_8_reg] [tax_tx_exo_facul_9_reg] [tax_tx_exo_facul_1_depart]
[tax_tx_exo_facul_2_depart] [tax_tx_exo_facul_3_depart] [tax_tx_exo_facul_4_depart] [tax_tx_exo_facul_5_depart]
[tax_tx_exo_facul_6_depart] [tax_tx_exo_facul_7_depart] [tax_tx_exo_facul_8_depart] [tax_tx_exo_facul_9_depart]
[tax_tx_exo_facul_1_comm]   [tax_tx_exo_facul_2_comm]   [tax_tx_exo_facul_3_comm] [tax_tx_exo_facul_4_comm]
[tax_tx_exo_facul_5_comm] [tax_tx_exo_facul_6_comm] [tax_tx_exo_facul_7_comm] [tax_tx_exo_facul_8_comm] [tax_tx_exo_facul_9_comm]
[tax_tx_rap]

--Coordonnées du pétitionnaire principal
[nom_qualite_part_petitionnaire_principal] [prenom_qualite_part_petitionnaire_principal]
[civilite_qualite_part_petitionnaire_principal] [nom_complet_qualite_part_petitionnaire_principal]
[nom_qualite_pm_petitionnaire_principal] [prenom_qualite_pm_petitionnaire_principal]
[civilite_qualite_pm_petitionnaire_principal] [nom_complet_qualite_pm_petitionnaire_principal]
[nom_qualite_part_ou_pm_petitionnaire_principal] [prenom_qualite_part_ou_pm_petitionnaire_principal]
[civilite_qualite_part_ou_pm_petitionnaire_principal] [nom_complet_qualite_part_ou_pm_petitionnaire_principal]
[nom_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[civilite_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[nom_particulier_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[prenom_particulier_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[raison_sociale_petitionnaire_principal]
[denomination_petitionnaire_principal]
[siret_petitionnaire_principal]
[categorie_juridique_petitionnaire_principal]
[numero_petitionnaire_principal][adresse_petitionnaire_principal_sdl][adresse_petitionnaire_principal]    [voie_petitionnaire_principal]    [complement_petitionnaire_principal]
[lieu_dit_petitionnaire_principal]    [bp_petitionnaire_principal]
[code_postal_petitionnaire_principal]    [localite_petitionnaire_principal]    [cedex_petitionnaire_principal]
[pays_petitionnaire_principal] [division_territoriale_petitionnaire_principal]

--Coordonnées des autres pétitionnaires
[nom_qualite_part_petitionnaire_1](jusqu''à 5)    [prenom_qualite_part_petitionnaire_1](jusqu''à 5)
[civilite_qualite_part_petitionnaire_1](jusqu''à 5)    [nom_complet_qualite_part_petitionnaire_1](jusqu''à 5)
[nom_qualite_pm_petitionnaire_1](jusqu''à 5)    [prenom_qualite_pm_petitionnaire_1](jusqu''à 5)
[civilite_qualite_pm_petitionnaire_1](jusqu''à 5)    [nom_complet_qualite_pm_petitionnaire_1](jusqu''à 5)
[nom_qualite_part_ou_pm_petitionnaire_1](jusqu''à 5)    [prenom_qualite_part_ou_pm_petitionnaire_1](jusqu''à 5)
[civilite_qualite_part_ou_pm_petitionnaire_1](jusqu''à 5)    [nom_complet_qualite_part_ou_pm_petitionnaire_1](jusqu''à 5)
[nom_petitionnaire_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[civilite_petitionnaire_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[nom_particulier_petitionnaire_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[prenom_particulier_petitionnaire_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[raison_sociale_petitionnaire_1](jusqu''à 5)
[denomination_petitionnaire_1](jusqu''à 5)
[siret_petitionnaire_1](jusqu''à 5)
[categorie_juridique_petitionnaire_1](jusqu''à 5)
[numero_petitionnaire_1](jusqu''à 5)[adresse_petitionnaire_1_sdl](jusqu''à 5)[adresse_petitionnaire_1](jusqu''à 5)    [voie_petitionnaire_1](jusqu''à 5)
[complement_petitionnaire_1](jusqu''à 5)
[lieu_dit_petitionnaire_1](jusqu''à 5)    [bp_petitionnaire_1](jusqu''à 5)
[code_postal_petitionnaire_1](jusqu''à 5)    [localite_petitionnaire_1](jusqu''à 5)
[cedex_petitionnaire_1](jusqu''à 5)
[pays_petitionnaire_1](jusqu''à 5) [division_territoriale_petitionnaire_1](jusqu''à 5)

--Coordonnées du contrevenant principal
[nom_qualite_part_contrevenant_principal] [prenom_qualite_part_contrevenant_principal]
[civilite_qualite_part_contrevenant_principal] [nom_complet_qualite_part_contrevenant_principal]
[nom_qualite_pm_contrevenant_principal] [prenom_qualite_pm_contrevenant_principal]
[civilite_qualite_pm_contrevenant_principal] [nom_complet_qualite_pm_contrevenant_principal]
[nom_qualite_part_ou_pm_contrevenant_principal] [prenom_qualite_part_ou_pm_contrevenant_principal]
[civilite_qualite_part_ou_pm_contrevenant_principal] [nom_complet_qualite_part_ou_pm_contrevenant_principal]
[nom_contrevenant_principal] (Déprécié, à ne plus utiliser)
[civilite_contrevenant_principal] (Déprécié, à ne plus utiliser)
[nom_particulier_contrevenant_principal] (Déprécié, à ne plus utiliser)
[prenom_particulier_contrevenant_principal] (Déprécié, à ne plus utiliser)
[raison_sociale_contrevenant_principal]
[denomination_contrevenant_principal]
[siret_contrevenant_principal]
[categorie_juridique_contrevenant_principal]
[numero_contrevenant_principal][adresse_contrevenant_principal_sdl][adresse_contrevenant_principal]    [voie_contrevenant_principal]    [complement_contrevenant_principal]
[lieu_dit_contrevenant_principal]    [bp_contrevenant_principal]
[code_postal_contrevenant_principal]    [localite_contrevenant_principal]    [cedex_contrevenant_principal]
[pays_contrevenant_principal] [division_territoriale_contrevenant_principal]

--Coordonnées des autres contrevenants
[nom_qualite_part_contrevenant_1](jusqu''à 5) [prenom_qualite_part_contrevenant_1](jusqu''à 5)
[civilite_qualite_part_contrevenant_1](jusqu''à 5) [nom_complet_qualite_part_contrevenant_1](jusqu''à 5)
[nom_qualite_pm_contrevenant_1](jusqu''à 5) [prenom_qualite_pm_contrevenant_1](jusqu''à 5)
[civilite_qualite_pm_contrevenant_1](jusqu''à 5) [nom_complet_qualite_pm_contrevenant_1](jusqu''à 5)
[nom_qualite_part_ou_pm_contrevenant_1](jusqu''à 5) [prenom_qualite_part_ou_pm_contrevenant_1](jusqu''à 5)
[civilite_qualite_part_ou_pm_contrevenant_1](jusqu''à 5) [nom_complet_qualite_part_ou_pm_contrevenant_1](jusqu''à 5)
[nom_contrevenant_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[civilite_contrevenant_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[nom_particulier_contrevenant_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[prenom_particulier_contrevenant_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[raison_sociale_contrevenant_1](jusqu''à 5)
[denomination_contrevenant_1](jusqu''à 5)
[siret_contrevenant_1](jusqu''à 5)
[categorie_juridique_contrevenant_1](jusqu''à 5)
[numero_contrevenant_1](jusqu''à 5)[adresse_contrevenant_1_sdl](jusqu''à 5)[adresse_contrevenant_1](jusqu''à 5)    [voie_contrevenant_1](jusqu''à 5)
[complement_contrevenant_1](jusqu''à 5)
[lieu_dit_contrevenant_1](jusqu''à 5)    [bp_contrevenant_1](jusqu''à 5)
[code_postal_contrevenant_1](jusqu''à 5)    [localite_contrevenant_1](jusqu''à 5)
[cedex_contrevenant_1](jusqu''à 5)
[pays_contrevenant_1](jusqu''à 5) [division_territoriale_contrevenant_1](jusqu''à 5)

--Coordonnées du requérant principal
[nom_qualite_part_requerant_principal] [prenom_qualite_part_requerant_principal]
[civilite_qualite_part_requerant_principal] [nom_complet_qualite_part_requerant_principal]
[nom_qualite_pm_requerant_principal] [prenom_qualite_pm_requerant_principal]
[civilite_qualite_pm_requerant_principal] [nom_complet_qualite_pm_requerant_principal]
[nom_qualite_part_ou_pm_requerant_principal] [prenom_qualite_part_ou_pm_requerant_principal]
[civilite_qualite_part_ou_pm_requerant_principal] [nom_complet_qualite_part_ou_pm_requerant_principal]
[nom_requerant_principal] (Déprécié, à ne plus utiliser)
[civilite_requerant_principal] (Déprécié, à ne plus utiliser)
[nom_particulier_requerant_principal] (Déprécié, à ne plus utiliser)
[prenom_particulier_requerant_principal] (Déprécié, à ne plus utiliser)
[raison_sociale_requerant_principal]
[denomination_requerant_principal]
[siret_requerant_principal]
[categorie_juridique_requerant_principal]
[numero_requerant_principal][adresse_requerant_principal_sdl][adresse_requerant_principal]    [voie_requerant_principal]    [complement_requerant_principal]
[lieu_dit_requerant_principal]    [bp_requerant_principal]
[code_postal_requerant_principal]    [localite_requerant_principal]    [cedex_requerant_principal]
[pays_requerant_principal] [division_territoriale_requerant_principal]

--Coordonnées des autres requérants
[nom_qualite_part_requerant_1](jusqu''à 5) [prenom_qualite_part_requerant_1](jusqu''à 5)
[civilite_qualite_part_requerant_1](jusqu''à 5) [nom_complet_qualite_part_requerant_1](jusqu''à 5)
[nom_qualite_pm_requerant_1](jusqu''à 5) [prenom_qualite_pm_requerant_1](jusqu''à 5)
[civilite_qualite_pm_requerant_1](jusqu''à 5) [nom_complet_qualite_pm_requerant_1](jusqu''à 5)
[nom_qualite_part_ou_pm_requerant_1](jusqu''à 5) [prenom_qualite_part_ou_pm_requerant_1](jusqu''à 5)
[civilite_qualite_part_ou_pm_requerant_1](jusqu''à 5) [nom_complet_qualite_part_ou_pm_requerant_1](jusqu''à 5)
[nom_requerant_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[civilite_requerant_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[nom_particulier_requerant_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[prenom_particulier_requerant_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[raison_sociale_requerant_1](jusqu''à 5)
[denomination_requerant_1](jusqu''à 5)
[siret_requerant_1](jusqu''à 5)
[categorie_juridique_requerant_1](jusqu''à 5)
[numero_requerant_1](jusqu''à 5)[adresse_requerant_1_sdl](jusqu''à 5)[adresse_requerant_1](jusqu''à 5)    [voie_requerant_1](jusqu''à 5)
[complement_requerant_1](jusqu''à 5)
[lieu_dit_requerant_1](jusqu''à 5)    [bp_requerant_1](jusqu''à 5)
[code_postal_requerant_1](jusqu''à 5)    [localite_requerant_1](jusqu''à 5)
[cedex_requerant_1](jusqu''à 5)
[pays_requerant_1](jusqu''à 5) [division_territoriale_requerant_1](jusqu''à 5)

--Coordonnées de l''avocat principal
[nom_qualite_part_avocat_principal] [prenom_qualite_part_avocat_principal]
[civilite_qualite_part_avocat_principal] [nom_complet_qualite_part_avocat_principal]
[nom_qualite_pm_avocat_principal] [prenom_qualite_pm_avocat_principal]
[civilite_qualite_pm_avocat_principal] [nom_complet_qualite_pm_avocat_principal]
[nom_qualite_part_ou_pm_avocat_principal] [prenom_qualite_part_ou_pm_avocat_principal]
[civilite_qualite_part_ou_pm_avocat_principal] [nom_complet_qualite_part_ou_pm_avocat_principal]
[nom_avocat_principal] (Déprécié, à ne plus utiliser)
[civilite_avocat_principal] (Déprécié, à ne plus utiliser)
[nom_particulier_avocat_principal] (Déprécié, à ne plus utiliser)
[prenom_particulier_avocat_principal] (Déprécié, à ne plus utiliser)
[raison_sociale_avocat_principal]
[denomination_avocat_principal]
[siret_avocat_principal]
[categorie_juridique_avocat_principal]
[numero_avocat_principal][adresse_avocat_principal_sdl][adresse_avocat_principal]    [voie_avocat_principal]    [complement_avocat_principal]
[lieu_dit_avocat_principal]    [bp_avocat_principal]
[code_postal_avocat_principal]    [localite_avocat_principal]    [cedex_avocat_principal]
[pays_avocat_principal] [division_territoriale_avocat_principal]

--Coordonnées des autres avocats
[nom_qualite_part_avocat_1](jusqu''à 5) [prenom_qualite_part_avocat_1](jusqu''à 5)
[civilite_qualite_part_avocat_1](jusqu''à 5) [nom_complet_qualite_part_avocat_1](jusqu''à 5)
[nom_qualite_pm_avocat_1](jusqu''à 5) [prenom_qualite_pm_avocat_1](jusqu''à 5)
[civilite_qualite_pm_avocat_1](jusqu''à 5) [nom_complet_qualite_pm_avocat_1](jusqu''à 5)
[nom_qualite_part_ou_pm_avocat_1](jusqu''à 5) [prenom_qualite_part_ou_pm_avocat_1](jusqu''à 5)
[civilite_qualite_part_ou_pm_avocat_1](jusqu''à 5) [nom_complet_qualite_part_ou_pm_avocat_1](jusqu''à 5)
[nom_avocat_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[civilite_avocat_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[nom_particulier_avocat_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[prenom_particulier_avocat_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[raison_sociale_avocat_1](jusqu''à 5)
[denomination_avocat_1](jusqu''à 5)
[siret_avocat_1](jusqu''à 5)
[categorie_juridique_avocat_1](jusqu''à 5)
[numero_avocat_1](jusqu''à 5)[adresse_avocat_1_sdl](jusqu''à 5)[adresse_avocat_1](jusqu''à 5)    [voie_avocat_1](jusqu''à 5)
[complement_avocat_1](jusqu''à 5)
[lieu_dit_avocat_1](jusqu''à 5)    [bp_avocat_1](jusqu''à 5)
[code_postal_avocat_1](jusqu''à 5)    [localite_avocat_1](jusqu''à 5)
[cedex_avocat_1](jusqu''à 5)
[pays_avocat_1](jusqu''à 5) [division_territoriale_avocat_1](jusqu''à 5)

--Coordonnées du plaignant principal
[nom_qualite_part_plaignant_principal] [prenom_qualite_part_plaignant_principal]
[civilite_qualite_part_plaignant_principal] [nom_complet_qualite_part_plaignant_principal]
[nom_qualite_pm_plaignant_principal] [prenom_qualite_pm_plaignant_principal]
[civilite_qualite_pm_plaignant_principal] [nom_complet_qualite_pm_plaignant_principal]
[nom_qualite_part_ou_pm_plaignant_principal] [prenom_qualite_part_ou_pm_plaignant_principal]
[civilite_qualite_part_ou_pm_plaignant_principal] [nom_complet_qualite_part_ou_pm_plaignant_principal]
[nom_plaignant_principal] (Déprécié, à ne plus utiliser)
[civilite_plaignant_principal] (Déprécié, à ne plus utiliser)
[nom_particulier_plaignant_principal] (Déprécié, à ne plus utiliser)
[prenom_particulier_plaignant_principal] (Déprécié, à ne plus utiliser)
[raison_sociale_plaignant_principal]
[denomination_plaignant_principal]
[siret_plaignant_principal]
[categorie_juridique_plaignant_principal]
[numero_plaignant_principal][adresse_plaignant_principal_sdl][adresse_plaignant_principal]    [voie_plaignant_principal]    [complement_plaignant_principal]
[lieu_dit_plaignant_principal]    [bp_plaignant_principal]
[code_postal_plaignant_principal]    [localite_plaignant_principal]    [cedex_plaignant_principal]
[pays_plaignant_principal] [division_territoriale_plaignant_principal]

--Coordonnées des autres plaignants
[nom_qualite_part_plaignant_1](jusqu''à 5) [prenom_qualite_part_plaignant_1](jusqu''à 5)
[civilite_qualite_part_plaignant_1](jusqu''à 5) [nom_complet_qualite_part_plaignant_1](jusqu''à 5)
[nom_qualite_pm_plaignant_1](jusqu''à 5) [prenom_qualite_pm_plaignant_1](jusqu''à 5)
[civilite_qualite_pm_plaignant_1](jusqu''à 5) [nom_complet_qualite_pm_plaignant_1](jusqu''à 5)
[nom_qualite_part_ou_pm_plaignant_1](jusqu''à 5) [prenom_qualite_part_ou_pm_plaignant_1](jusqu''à 5)
[civilite_qualite_part_ou_pm_plaignant_1](jusqu''à 5) [nom_complet_qualite_part_ou_pm_plaignant_1](jusqu''à 5)
[nom_plaignant_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[civilite_plaignant_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[nom_particulier_plaignant_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[prenom_particulier_plaignant_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[raison_sociale_plaignant_1](jusqu''à 5)
[denomination_plaignant_1](jusqu''à 5)
[siret_plaignant_1](jusqu''à 5)
[categorie_juridique_plaignant_1](jusqu''à 5)
[numero_plaignant_1](jusqu''à 5)[adresse_plaignant_1_sdl](jusqu''à 5)[adresse_plaignant_1](jusqu''à 5)    [voie_plaignant_1](jusqu''à 5)
[complement_plaignant_1](jusqu''à 5)
[lieu_dit_plaignant_1](jusqu''à 5)    [bp_plaignant_1](jusqu''à 5)
[code_postal_plaignant_1](jusqu''à 5)    [localite_plaignant_1](jusqu''à 5)
[cedex_plaignant_1](jusqu''à 5)
[pays_plaignant_1](jusqu''à 5) [division_territoriale_plaignant_1](jusqu''à 5)

-- Coordonnées du délégataire
[nom_qualite_part_delegataire] [prenom_qualite_part_delegataire]
[civilite_qualite_part_delegataire] [nom_complet_qualite_part_delegataire]
[nom_qualite_pm_delegataire] [prenom_qualite_pm_delegataire]
[civilite_qualite_pm_delegataire] [nom_complet_qualite_pm_delegataire]
[nom_qualite_part_ou_pm_delegataire] [prenom_qualite_part_ou_pm_delegataire]
[civilite_qualite_part_ou_pm_delegataire] [nom_complet_qualite_part_ou_pm_delegataire]
[nom_delegataire] (Déprécié, à ne plus utiliser)
[civilite_delegataire] (Déprécié, à ne plus utiliser)
[nom_particulier_delegataire] (Déprécié, à ne plus utiliser)
[prenom_particulier_delegataire] (Déprécié, à ne plus utiliser)
[raison_sociale_delegataire]
[denomination_delegataire]
[numero_delegataire][adresse_delegataire_sdl][adresse_delegataire]    [voie_delegataire]    [complement_delegataire]
[lieu_dit_delegataire]    [bp_delegataire]
[code_postal_delegataire]    [ville_delegataire]    [cedex_delegataire]
[pays_delegataire]

--Coordonnées du bailleur principal
[nom_qualite_part_bailleur_principal] [prenom_qualite_part_bailleur_principal]
[civilite_qualite_part_bailleur_principal] [nom_complet_qualite_part_bailleur_principal]
[nom_qualite_pm_bailleur_principal] [prenom_qualite_pm_bailleur_principal]
[civilite_qualite_pm_bailleur_principal] [nom_complet_qualite_pm_bailleur_principal]
[nom_qualite_part_ou_pm_bailleur_principal] [prenom_qualite_part_ou_pm_bailleur_principal]
[civilite_qualite_part_ou_pm_bailleur_principal] [nom_complet_qualite_part_ou_pm_bailleur_principal]
[raison_sociale_bailleur_principal]
[denomination_bailleur_principal]
[siret_bailleur_principal]
[categorie_juridique_bailleur_principal]
[numero_bailleur_principal][adresse_bailleur_principal_sdl][adresse_bailleur_principal]    [voie_bailleur_principal]    [complement_bailleur_principal]
[lieu_dit_bailleur_principal]    [bp_bailleur_principal]
[code_postal_bailleur_principal]    [localite_bailleur_principal]    [cedex_bailleur_principal]
[pays_bailleur_principal] [division_territoriale_bailleur_principal]

--Coordonnées des autres bailleurs
[nom_qualite_part_bailleur_1](jusqu''à 5) [prenom_qualite_part_bailleur_1](jusqu''à 5)
[civilite_qualite_part_bailleur_1](jusqu''à 5) [nom_complet_qualite_part_bailleur_1](jusqu''à 5)
[nom_qualite_pm_bailleur_1](jusqu''à 5) [prenom_qualite_pm_bailleur_1](jusqu''à 5)
[civilite_qualite_pm_bailleur_1](jusqu''à 5) [nom_complet_qualite_pm_bailleur_1](jusqu''à 5)
[nom_qualite_part_ou_pm_bailleur_1](jusqu''à 5) [prenom_qualite_part_ou_pm_bailleur_1](jusqu''à 5)
[civilite_qualite_part_ou_pm_bailleur_1](jusqu''à 5) [nom_complet_qualite_part_ou_pm_bailleur_1](jusqu''à 5)
[raison_sociale_bailleur_1](jusqu''à 5)
[denomination_bailleur_1](jusqu''à 5)
[siret_bailleur_1](jusqu''à 5)
[categorie_juridique_bailleur_1](jusqu''à 5)
[numero_bailleur_1](jusqu''à 5)[adresse_bailleur_1_sdl](jusqu''à 5)[adresse_bailleur_1](jusqu''à 5)    [voie_bailleur_1](jusqu''à 5)
[complement_bailleur_1](jusqu''à 5)
[lieu_dit_bailleur_1](jusqu''à 5)    [bp_bailleur_1](jusqu''à 5)
[code_postal_bailleur_1](jusqu''à 5)    [localite_bailleur_1](jusqu''à 5)
[cedex_bailleur_1](jusqu''à 5)
[pays_bailleur_1](jusqu''à 5) [division_territoriale_bailleur_1](jusqu''à 5)

-- CORRESPONDANT : destinataire du courrier. Il est le délégataire ou le pétitionnaire principal
[nom_qualite_part_correspondant] [prenom_qualite_part_correspondant]
[civilite_qualite_part_correspondant] [nom_complet_qualite_part_correspondant]
[nom_qualite_pm_correspondant] [prenom_qualite_pm_correspondant]
[civilite_qualite_pm_correspondant] [nom_complet_qualite_pm_correspondant]
[nom_qualite_part_ou_pm_correspondant] [prenom_qualite_part_ou_pm_correspondant]
[civilite_qualite_part_ou_pm_correspondant] [nom_complet_qualite_part_ou_pm_correspondant]
[nom_correspondant] (Déprécié, à ne plus utiliser)
[civilite_correspondant] (Déprécié, à ne plus utiliser)
[nom_particulier_correspondant] (Déprécié, à ne plus utiliser)
[prenom_particulier_correspondant] (Déprécié, à ne plus utiliser)
[raison_sociale_correspondant]
[denomination_correspondant]
[numero_correspondant][adresse_correspondant_sdl][adresse_correspondant]    [voie_correspondant]    [complement_correspondant]
[lieu_dit_correspondant]    [bp_correspondant]
[code_postal_correspondant]    [ville_correspondant]    [cedex_correspondant]
[pays_correspondant]

-- Dates importantes du dossier d''instruction[date_depot_mairie]
[date_affichage]
[date_depot_dossier]
[date_completude]
[date_dernier_depot]
[date_decision_dossier]
[date_limite_dossier]
[date_achevement_dossier]
[date_conformite_dossier]

-- Données générales des données techniques
[co_projet_desc_donnees_techniques]    [am_projet_desc_donnees_techniques]
[dm_projet_desc_donnees_techniques]    [ope_proj_desc_donnees_techniques]
[projet_desc_donnees_techniques]
[co_tot_log_nb_donnees_techniques]    [co_statio_place_nb_donnees_techniques]
[am_lot_max_nb_donnees_techniques]    [am_lot_max_shon_donnees_techniques]
-- Les données techniques suivantes concernent le tableau des surfaces
-- Elles récupèrent les valeurs du tableau composé des sous-destinations si au
-- moins une valeur de celui-ci est saisie
[su_cstr_shon_tot_donnees_techniques]    [su_demo_shon_tot_donnees_techniques]
[tab_surface_donnees_techniques]
[su_tot_shon_tot_donnees_techniques]

--Données techniques des AT
[at_type_travaux]
[at_effectif_public_total]
[at_categorie_etablissement]
[at_type_etablissement]

--Données techniques du contentieux
[ctx_objet_recours_libelle]
[ctx_reference_sagace]
[ctx_nature_travaux_infra_om_html]
[ctx_synthese_nti]
[ctx_article_non_resp_om_html]
[ctx_synthese_anr]
[ctx_reference_parquet]
[ctx_element_taxation]
[ctx_infraction]
[ctx_regularisable]
[ctx_reference_courrier]
[date_audience_ctx]
[date_ajournement_ctx]

-- Données techniques pour les DPC
[dpc_type]
[dpc_moda_cess_prix]
', 'sql', NULL, NULL);
INSERT INTO om_requete (om_requete, code, libelle, description, requete, merge_fields, type, classe, methode) VALUES (30, 'accuse_reception_consultation', 'Récapitulatif du dossier d''instruction / dossier / consultation', NULL, '
SELECT

    -- Données générales du dossier d''instruction
    dossier.dossier_libelle as libelle_dossier,
    dossier.dossier as code_barres_dossier,
    etat.libelle as etat_dossier,
    dossier_autorisation.dossier_autorisation_libelle as libelle_da,

    dossier_autorisation_type_detaille.code as code_datd,
    dossier_autorisation_type_detaille.libelle as libelle_datd,
    dossier_autorisation_type.code as code_dat,
    dossier_autorisation_type.libelle as libelle_dat,
    dossier_instruction_type.code as code_dit,
    dossier_instruction_type.libelle as libelle_dit,
    dossier.delai as delai_dossier,
    replace(dossier.terrain_references_cadastrales, '';'', '' '') as terrain_references_cadastrales_dossier,

    avis_decision.libelle as libelle_avis_decision,

    -- Coordonnées de l''instructeur
    instructeur.nom as nom_instructeur,
    instructeur.telephone as telephone_instructeur,
    division.code as division_instructeur,
    om_utilisateur.email as email_instructeur,

    -- Noms des signataires
    division.chef as division_chef,
    direction.chef as direction_chef,
    direction.libelle as libelle_direction,
    direction.description as description_direction,

    -- Adresse du terrain du dossier d''instruction
    dossier.terrain_adresse_voie_numero as terrain_adresse_voie_numero_dossier,&DB_PREFIXEadresse(dossier.terrain_adresse_voie_numero::text, dossier.terrain_adresse_voie::text, ''''::text, dossier.terrain_adresse_lieu_dit::text, dossier.terrain_adresse_bp::text, dossier.terrain_adresse_code_postal::text, dossier.terrain_adresse_localite::text, dossier.terrain_adresse_cedex::text) as adresse_terrain_sdl,&DB_PREFIXEadresse(dossier.terrain_adresse_voie_numero::text, dossier.terrain_adresse_voie::text, ''''::text, dossier.terrain_adresse_lieu_dit::text, dossier.terrain_adresse_bp::text, dossier.terrain_adresse_code_postal::text, dossier.terrain_adresse_localite::text, dossier.terrain_adresse_cedex::text, ''''::text, '' ''::text) as adresse_terrain,
    dossier.terrain_adresse_voie as terrain_adresse_voie_dossier,
    dossier.terrain_adresse_lieu_dit as terrain_adresse_lieu_dit_dossier,
    CASE 
        WHEN dossier.terrain_adresse_bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', dossier.terrain_adresse_bp)
    END as terrain_adresse_bp_dossier,
    dossier.terrain_adresse_code_postal as terrain_adresse_code_postal_dossier,
    dossier.terrain_adresse_localite as terrain_adresse_localite_dossier,
    CASE 
        WHEN dossier.terrain_adresse_cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', dossier.terrain_adresse_cedex)
    END as terrain_adresse_cedex_dossier,
    arrondissement.libelle as libelle_arrondissement,

    -- Nom et prénom de l''architecte
    CONCAT(architecte.prenom||'' '', architecte.nom) as architecte,

    --Taxe d''aménagement du dossier d''instruction
    CASE
        WHEN tax_secteur = 1 THEN taxe_amenagement.tx_comm_secteur_1
        WHEN tax_secteur = 2 THEN taxe_amenagement.tx_comm_secteur_2
        WHEN tax_secteur = 3 THEN taxe_amenagement.tx_comm_secteur_3
        WHEN tax_secteur = 4 THEN taxe_amenagement.tx_comm_secteur_4
        WHEN tax_secteur = 5 THEN taxe_amenagement.tx_comm_secteur_5
        WHEN tax_secteur = 6 THEN taxe_amenagement.tx_comm_secteur_6
        WHEN tax_secteur = 7 THEN taxe_amenagement.tx_comm_secteur_7
        WHEN tax_secteur = 8 THEN taxe_amenagement.tx_comm_secteur_8
        WHEN tax_secteur = 9 THEN taxe_amenagement.tx_comm_secteur_9
        WHEN tax_secteur = 10 THEN taxe_amenagement.tx_comm_secteur_10
        WHEN tax_secteur = 11 THEN taxe_amenagement.tx_comm_secteur_11
        WHEN tax_secteur = 12 THEN taxe_amenagement.tx_comm_secteur_12
        WHEN tax_secteur = 13 THEN taxe_amenagement.tx_comm_secteur_13
        WHEN tax_secteur = 14 THEN taxe_amenagement.tx_comm_secteur_14
        WHEN tax_secteur = 15 THEN taxe_amenagement.tx_comm_secteur_15
        WHEN tax_secteur = 16 THEN taxe_amenagement.tx_comm_secteur_16
        WHEN tax_secteur = 17 THEN taxe_amenagement.tx_comm_secteur_17
        WHEN tax_secteur = 18 THEN taxe_amenagement.tx_comm_secteur_18
        WHEN tax_secteur = 19 THEN taxe_amenagement.tx_comm_secteur_19
        WHEN tax_secteur = 20 THEN taxe_amenagement.tx_comm_secteur_20
    END as tax_taux_secteur,

    taxe_amenagement.tx_comm_secteur_1 as tax_taux_secteur_1,
    taxe_amenagement.tx_comm_secteur_2 as tax_taux_secteur_2,
    taxe_amenagement.tx_comm_secteur_3 as tax_taux_secteur_3,
    taxe_amenagement.tx_comm_secteur_4 as tax_taux_secteur_4,
    taxe_amenagement.tx_comm_secteur_5 as tax_taux_secteur_5,
    taxe_amenagement.tx_comm_secteur_6 as tax_taux_secteur_6,
    taxe_amenagement.tx_comm_secteur_7 as tax_taux_secteur_7,
    taxe_amenagement.tx_comm_secteur_8 as tax_taux_secteur_8,
    taxe_amenagement.tx_comm_secteur_9 as tax_taux_secteur_9,
    taxe_amenagement.tx_comm_secteur_10 as tax_taux_secteur_10,
    taxe_amenagement.tx_comm_secteur_11 as tax_taux_secteur_11,
    taxe_amenagement.tx_comm_secteur_12 as tax_taux_secteur_12,
    taxe_amenagement.tx_comm_secteur_13 as tax_taux_secteur_13,
    taxe_amenagement.tx_comm_secteur_14 as tax_taux_secteur_14,
    taxe_amenagement.tx_comm_secteur_15 as tax_taux_secteur_15,
    taxe_amenagement.tx_comm_secteur_16 as tax_taux_secteur_16,
    taxe_amenagement.tx_comm_secteur_17 as tax_taux_secteur_17,
    taxe_amenagement.tx_comm_secteur_18 as tax_taux_secteur_18,
    taxe_amenagement.tx_comm_secteur_19 as tax_taux_secteur_19,
    taxe_amenagement.tx_comm_secteur_20 as tax_taux_secteur_20,

    dossier.tax_secteur as tax_numero_secteur,
    dossier.tax_mtn_part_commu as tax_montant_part_communale,
    dossier.tax_mtn_part_depart as tax_montant_part_departementale,
    dossier.tax_mtn_part_reg as tax_montant_part_regionale,
    dossier.tax_mtn_total as tax_montant_total,

    -- Coordonnées du pétitionnaire principal
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier'' OR petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_nom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
        THEN petitionnaire_principal.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '',petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
            END
    END as nom_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier'' OR petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_nom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_principal.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_principal.personne_morale_denomination
    END as denomination_petitionnaire_principal,
    petitionnaire_principal.numero as numero_petitionnaire_principal,&DB_PREFIXEadresse(petitionnaire_principal.numero::text, petitionnaire_principal.voie::text, petitionnaire_principal.complement::text, petitionnaire_principal.lieu_dit::text, petitionnaire_principal.bp::text, petitionnaire_principal.code_postal::text, petitionnaire_principal.localite::text, petitionnaire_principal.cedex::text, petitionnaire_principal.pays::text) as adresse_petitionnaire_principal_sdl,&DB_PREFIXEadresse(petitionnaire_principal.numero::text, petitionnaire_principal.voie::text, petitionnaire_principal.complement::text, petitionnaire_principal.lieu_dit::text, petitionnaire_principal.bp::text, petitionnaire_principal.code_postal::text, petitionnaire_principal.localite::text, petitionnaire_principal.cedex::text, petitionnaire_principal.pays::text, '' ''::text) as adresse_petitionnaire_principal,
    petitionnaire_principal.voie as voie_petitionnaire_principal,
    petitionnaire_principal.complement as complement_petitionnaire_principal,
    petitionnaire_principal.lieu_dit as lieu_dit_petitionnaire_principal,
    CASE 
        WHEN petitionnaire_principal.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_principal.bp)
    END as bp_petitionnaire_principal,
    petitionnaire_principal.code_postal as code_postal_petitionnaire_principal,
    petitionnaire_principal.localite as localite_petitionnaire_principal,
    CASE 
        WHEN petitionnaire_principal.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_principal.cedex)
    END as cedex_petitionnaire_principal,
    petitionnaire_principal.pays as pays_petitionnaire_principal,

    --Coordonnées du pétitionnaire 1
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_1_civilite.libelle, petitionnaire_1.particulier_nom, petitionnaire_1.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_1.personne_morale_raison_sociale, petitionnaire_1.personne_morale_denomination, ''représenté(e) par'', petitionnaire_1_civilite.libelle, petitionnaire_1.personne_morale_nom, petitionnaire_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_1.personne_morale_raison_sociale, '' '', petitionnaire_1.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier'' OR petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_nom
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL
                THEN petitionnaire_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_1_civilite.libelle, petitionnaire_1.particulier_nom, petitionnaire_1.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_1,
    CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_1.personne_morale_raison_sociale, petitionnaire_1.personne_morale_denomination, ''représenté(e) par'', petitionnaire_1_civilite.libelle, petitionnaire_1.personne_morale_nom, petitionnaire_1.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_1.personne_morale_raison_sociale, '' '', petitionnaire_1.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL
        THEN petitionnaire_1.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_1.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_1_civilite.libelle, petitionnaire_1.particulier_nom, petitionnaire_1.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_1.personne_morale_raison_sociale, petitionnaire_1.personne_morale_denomination, ''représenté(e) par'', petitionnaire_1_civilite.libelle, petitionnaire_1.personne_morale_nom, petitionnaire_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_1.personne_morale_raison_sociale, '' '', petitionnaire_1.personne_morale_denomination))
            END
    END as nom_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier'' OR petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_1_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_nom
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL
                THEN petitionnaire_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_1.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_1.personne_morale_denomination
    END as denomination_petitionnaire_1,
    petitionnaire_1.numero as numero_petitionnaire_1,&DB_PREFIXEadresse(petitionnaire_1.numero::text, petitionnaire_1.voie::text, petitionnaire_1.complement::text, petitionnaire_1.lieu_dit::text, petitionnaire_1.bp::text, petitionnaire_1.code_postal::text, petitionnaire_1.localite::text, petitionnaire_1.cedex::text, petitionnaire_1.pays::text) as adresse_petitionnaire_1_sdl,&DB_PREFIXEadresse(petitionnaire_1.numero::text, petitionnaire_1.voie::text, petitionnaire_1.complement::text, petitionnaire_1.lieu_dit::text, petitionnaire_1.bp::text, petitionnaire_1.code_postal::text, petitionnaire_1.localite::text, petitionnaire_1.cedex::text, petitionnaire_1.pays::text, '' ''::text) as adresse_petitionnaire_1,
    petitionnaire_1.voie as voie_petitionnaire_1,
    petitionnaire_1.complement as complement_petitionnaire_1,
    petitionnaire_1.lieu_dit as lieu_dit_petitionnaire_1,
    CASE 
        WHEN petitionnaire_1.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_1.bp)
    END as bp_petitionnaire_1,
    petitionnaire_1.code_postal as code_postal_petitionnaire_1,
    petitionnaire_1.localite as localite_petitionnaire_1,
    CASE 
        WHEN petitionnaire_1.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_1.cedex)
    END as cedex_petitionnaire_1,
    petitionnaire_1.pays as pays_petitionnaire_1,

    --Coordonnées du pétitionnaire 2
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_2_civilite.libelle, petitionnaire_2.particulier_nom, petitionnaire_2.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_2.personne_morale_raison_sociale, petitionnaire_2.personne_morale_denomination, ''représenté(e) par'', petitionnaire_2_civilite.libelle, petitionnaire_2.personne_morale_nom, petitionnaire_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_2.personne_morale_raison_sociale, '' '', petitionnaire_2.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier'' OR petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_nom
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL
                THEN petitionnaire_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_2_civilite.libelle, petitionnaire_2.particulier_nom, petitionnaire_2.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_2,
    CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_2.personne_morale_raison_sociale, petitionnaire_2.personne_morale_denomination, ''représenté(e) par'', petitionnaire_2_civilite.libelle, petitionnaire_2.personne_morale_nom, petitionnaire_2.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_2.personne_morale_raison_sociale, '' '', petitionnaire_2.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL
        THEN petitionnaire_2.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_2.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_2_civilite.libelle, petitionnaire_2.particulier_nom, petitionnaire_2.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_2.personne_morale_raison_sociale, petitionnaire_2.personne_morale_denomination, ''représenté(e) par'', petitionnaire_2_civilite.libelle, petitionnaire_2.personne_morale_nom, petitionnaire_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_2.personne_morale_raison_sociale, '' '', petitionnaire_2.personne_morale_denomination))
            END
    END as nom_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier'' OR petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_2_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_nom
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL
                THEN petitionnaire_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_2.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_2.personne_morale_denomination
    END as denomination_petitionnaire_2,
    petitionnaire_2.numero as numero_petitionnaire_2,&DB_PREFIXEadresse(petitionnaire_2.numero::text, petitionnaire_2.voie::text, petitionnaire_2.complement::text, petitionnaire_2.lieu_dit::text, petitionnaire_2.bp::text, petitionnaire_2.code_postal::text, petitionnaire_2.localite::text, petitionnaire_2.cedex::text, petitionnaire_2.pays::text) as adresse_petitionnaire_2_sdl,&DB_PREFIXEadresse(petitionnaire_2.numero::text, petitionnaire_2.voie::text, petitionnaire_2.complement::text, petitionnaire_2.lieu_dit::text, petitionnaire_2.bp::text, petitionnaire_2.code_postal::text, petitionnaire_2.localite::text, petitionnaire_2.cedex::text, petitionnaire_2.pays::text, '' ''::text) as adresse_petitionnaire_2,
    petitionnaire_2.voie as voie_petitionnaire_2,
    petitionnaire_2.complement as complement_petitionnaire_2,
    petitionnaire_2.lieu_dit as lieu_dit_petitionnaire_2,
    CASE 
        WHEN petitionnaire_2.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_2.bp)
    END as bp_petitionnaire_2,
    petitionnaire_2.code_postal as code_postal_petitionnaire_2,
    petitionnaire_2.localite as localite_petitionnaire_2,
    CASE 
        WHEN petitionnaire_2.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_2.cedex)
    END as cedex_petitionnaire_2,
    petitionnaire_2.pays as pays_petitionnaire_2,

    --Coordonnées du pétitionnaire 3
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_3_civilite.libelle, petitionnaire_3.particulier_nom, petitionnaire_3.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_3.personne_morale_raison_sociale, petitionnaire_3.personne_morale_denomination, ''représenté(e) par'', petitionnaire_3_civilite.libelle, petitionnaire_3.personne_morale_nom, petitionnaire_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_3.personne_morale_raison_sociale, '' '', petitionnaire_3.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier'' OR petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_nom
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL
                THEN petitionnaire_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_3_civilite.libelle, petitionnaire_3.particulier_nom, petitionnaire_3.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_3,
    CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_3.personne_morale_raison_sociale, petitionnaire_3.personne_morale_denomination, ''représenté(e) par'', petitionnaire_3_civilite.libelle, petitionnaire_3.personne_morale_nom, petitionnaire_3.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_3.personne_morale_raison_sociale, '' '', petitionnaire_3.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL
        THEN petitionnaire_3.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_3.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_3_civilite.libelle, petitionnaire_3.particulier_nom, petitionnaire_3.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_3.personne_morale_raison_sociale, petitionnaire_3.personne_morale_denomination, ''représenté(e) par'', petitionnaire_3_civilite.libelle, petitionnaire_3.personne_morale_nom, petitionnaire_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_3.personne_morale_raison_sociale, '' '', petitionnaire_3.personne_morale_denomination))
            END
    END as nom_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier'' OR petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_3_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_nom
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL
                THEN petitionnaire_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_3.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_3.personne_morale_denomination
    END as denomination_petitionnaire_3,
    petitionnaire_3.numero as numero_petitionnaire_3,&DB_PREFIXEadresse(petitionnaire_3.numero::text, petitionnaire_3.voie::text, petitionnaire_3.complement::text, petitionnaire_3.lieu_dit::text, petitionnaire_3.bp::text, petitionnaire_3.code_postal::text, petitionnaire_3.localite::text, petitionnaire_3.cedex::text, petitionnaire_3.pays::text) as adresse_petitionnaire_3_sdl,&DB_PREFIXEadresse(petitionnaire_3.numero::text, petitionnaire_3.voie::text, petitionnaire_3.complement::text, petitionnaire_3.lieu_dit::text, petitionnaire_3.bp::text, petitionnaire_3.code_postal::text, petitionnaire_3.localite::text, petitionnaire_3.cedex::text, petitionnaire_3.pays::text, '' ''::text) as adresse_petitionnaire_3,
    petitionnaire_3.voie as voie_petitionnaire_3,
    petitionnaire_3.complement as complement_petitionnaire_3,
    petitionnaire_3.lieu_dit as lieu_dit_petitionnaire_3,
    CASE 
        WHEN petitionnaire_3.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_3.bp)
    END as bp_petitionnaire_3,
    petitionnaire_3.code_postal as code_postal_petitionnaire_3,
    petitionnaire_3.localite as localite_petitionnaire_3,
    CASE 
        WHEN petitionnaire_3.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_3.cedex)
    END as cedex_petitionnaire_3,
    petitionnaire_3.pays as pays_petitionnaire_3,

    --Coordonnées du pétitionnaire 4
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_4_civilite.libelle, petitionnaire_4.particulier_nom, petitionnaire_4.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_4.personne_morale_raison_sociale, petitionnaire_4.personne_morale_denomination, ''représenté(e) par'', petitionnaire_4_civilite.libelle, petitionnaire_4.personne_morale_nom, petitionnaire_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_4.personne_morale_raison_sociale, '' '', petitionnaire_4.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier'' OR petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_nom
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL
                THEN petitionnaire_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_4_civilite.libelle, petitionnaire_4.particulier_nom, petitionnaire_4.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_4,
    CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_4.personne_morale_raison_sociale, petitionnaire_4.personne_morale_denomination, ''représenté(e) par'', petitionnaire_4_civilite.libelle, petitionnaire_4.personne_morale_nom, petitionnaire_4.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_4.personne_morale_raison_sociale, '' '', petitionnaire_4.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL
        THEN petitionnaire_4.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_4.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_4_civilite.libelle, petitionnaire_4.particulier_nom, petitionnaire_4.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_4.personne_morale_raison_sociale, petitionnaire_4.personne_morale_denomination, ''représenté(e) par'', petitionnaire_4_civilite.libelle, petitionnaire_4.personne_morale_nom, petitionnaire_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_4.personne_morale_raison_sociale, '' '', petitionnaire_4.personne_morale_denomination))
            END
    END as nom_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier'' OR petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_4_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_4_civilite.libelle, petitionnaire_4.particulier_nom, petitionnaire_4.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_4.personne_morale_raison_sociale, petitionnaire_4.personne_morale_denomination, ''représenté(e) par'', petitionnaire_4_civilite.libelle, petitionnaire_4.personne_morale_nom, petitionnaire_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_4.personne_morale_raison_sociale, '' '', petitionnaire_4.personne_morale_denomination))
            END
    END as nom_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier'' OR petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_4_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_nom
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL
                THEN petitionnaire_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_4.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_4.personne_morale_denomination
    END as denomination_petitionnaire_4,
    petitionnaire_4.numero as numero_petitionnaire_4,&DB_PREFIXEadresse(petitionnaire_4.numero::text, petitionnaire_4.voie::text, petitionnaire_4.complement::text, petitionnaire_4.lieu_dit::text, petitionnaire_4.bp::text, petitionnaire_4.code_postal::text, petitionnaire_4.localite::text, petitionnaire_4.cedex::text, petitionnaire_4.pays::text) as adresse_petitionnaire_4_sdl,&DB_PREFIXEadresse(petitionnaire_4.numero::text, petitionnaire_4.voie::text, petitionnaire_4.complement::text, petitionnaire_4.lieu_dit::text, petitionnaire_4.bp::text, petitionnaire_4.code_postal::text, petitionnaire_4.localite::text, petitionnaire_4.cedex::text, petitionnaire_4.pays::text, '' ''::text) as adresse_petitionnaire_4,
    petitionnaire_4.voie as voie_petitionnaire_4,
    petitionnaire_4.complement as complement_petitionnaire_4,
    petitionnaire_4.lieu_dit as lieu_dit_petitionnaire_4,
    CASE 
        WHEN petitionnaire_4.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_4.bp)
    END as bp_petitionnaire_4,
    petitionnaire_4.code_postal as code_postal_petitionnaire_4,
    petitionnaire_4.localite as localite_petitionnaire_4,
    CASE 
        WHEN petitionnaire_4.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_4.cedex)
    END as cedex_petitionnaire_4,
    petitionnaire_4.pays as pays_petitionnaire_4,

    --Coordonnées du pétitionnaire 5
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_5_civilite.libelle, petitionnaire_5.particulier_nom, petitionnaire_5.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_5.personne_morale_raison_sociale, petitionnaire_5.personne_morale_denomination, ''représenté(e) par'', petitionnaire_5_civilite.libelle, petitionnaire_5.personne_morale_nom, petitionnaire_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_5.personne_morale_raison_sociale, '' '', petitionnaire_5.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier'' OR petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_nom
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL
                THEN petitionnaire_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_5_civilite.libelle, petitionnaire_5.particulier_nom, petitionnaire_5.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_5,
    CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_5.personne_morale_raison_sociale, petitionnaire_5.personne_morale_denomination, ''représenté(e) par'', petitionnaire_5_civilite.libelle, petitionnaire_5.personne_morale_nom, petitionnaire_5.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_5.personne_morale_raison_sociale, '' '', petitionnaire_5.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL
        THEN petitionnaire_5.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_5.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_5_civilite.libelle, petitionnaire_5.particulier_nom, petitionnaire_5.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_5.personne_morale_raison_sociale, petitionnaire_5.personne_morale_denomination, ''représenté(e) par'', petitionnaire_5_civilite.libelle, petitionnaire_5.personne_morale_nom, petitionnaire_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_5.personne_morale_raison_sociale, '' '', petitionnaire_5.personne_morale_denomination))
            END
    END as nom_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier'' OR petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_5_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_nom
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL
                THEN petitionnaire_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_5.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_5.personne_morale_denomination
    END as denomination_petitionnaire_5,
    petitionnaire_5.numero as numero_petitionnaire_5,&DB_PREFIXEadresse(petitionnaire_5.numero::text, petitionnaire_5.voie::text, petitionnaire_5.complement::text, petitionnaire_5.lieu_dit::text, petitionnaire_5.bp::text, petitionnaire_5.code_postal::text, petitionnaire_5.localite::text, petitionnaire_5.cedex::text, petitionnaire_5.pays::text) as adresse_petitionnaire_5_sdl,&DB_PREFIXEadresse(petitionnaire_5.numero::text, petitionnaire_5.voie::text, petitionnaire_5.complement::text, petitionnaire_5.lieu_dit::text, petitionnaire_5.bp::text, petitionnaire_5.code_postal::text, petitionnaire_5.localite::text, petitionnaire_5.cedex::text, petitionnaire_5.pays::text, '' ''::text) as adresse_petitionnaire_5,
    petitionnaire_5.voie as voie_petitionnaire_5,
    petitionnaire_5.complement as complement_petitionnaire_5,
    petitionnaire_5.lieu_dit as lieu_dit_petitionnaire_5,
    CASE 
        WHEN petitionnaire_5.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_5.bp)
    END as bp_petitionnaire_5,
    petitionnaire_5.code_postal as code_postal_petitionnaire_5,
    petitionnaire_5.localite as localite_petitionnaire_5,
    CASE 
        WHEN petitionnaire_5.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_5.cedex)
    END as cedex_petitionnaire_5,
    petitionnaire_5.pays as pays_petitionnaire_5,

    -- Coordonnées du délégataire
    CASE WHEN delegataire.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
        ELSE
            CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', delegataire.personne_morale_raison_sociale, delegataire.personne_morale_denomination, ''représenté(e) par'', delegataire_civilite.libelle, delegataire.personne_morale_nom, delegataire.personne_morale_prenom))
                ELSE TRIM(CONCAT(delegataire.personne_morale_raison_sociale, '' '', delegataire.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_delegataire,
    CASE WHEN delegataire.qualite=''particulier'' OR delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
        THEN delegataire_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire.particulier_nom
        ELSE
            CASE WHEN delegataire.personne_morale_nom IS NOT NULL
                THEN delegataire.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire.particulier_prenom
        ELSE
            CASE WHEN delegataire.personne_morale_prenom IS NOT NULL
                THEN delegataire.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire.particulier_nom
        ELSE ''''
    END as nom_qualite_part_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_delegataire,
    CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', delegataire.personne_morale_raison_sociale, delegataire.personne_morale_denomination, ''représenté(e) par'', delegataire_civilite.libelle, delegataire.personne_morale_nom, delegataire.personne_morale_prenom))
        ELSE TRIM(CONCAT(delegataire.personne_morale_raison_sociale, '' '', delegataire.personne_morale_denomination))
    END as nom_complet_qualite_pm_delegataire,
    CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
        THEN delegataire_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_delegataire,
    CASE WHEN delegataire.personne_morale_nom IS NOT NULL
        THEN delegataire.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_delegataire,
    CASE WHEN delegataire.personne_morale_prenom IS NOT NULL
        THEN delegataire.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_delegataire,
    CASE
        WHEN delegataire.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '',delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
        ELSE
            CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', delegataire.personne_morale_raison_sociale, delegataire.personne_morale_denomination, ''représenté(e) par'', delegataire_civilite.libelle, delegataire.personne_morale_nom, delegataire.personne_morale_prenom))
                ELSE TRIM(CONCAT(delegataire.personne_morale_raison_sociale, '' '', delegataire.personne_morale_denomination))
            END
    END as nom_delegataire,
    CASE WHEN delegataire.qualite=''particulier'' OR delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
        THEN delegataire_civilite.libelle
        ELSE ''''
    END as civilite_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire.particulier_nom
        ELSE
            CASE WHEN delegataire.personne_morale_nom IS NOT NULL
                THEN delegataire.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire.particulier_prenom
        ELSE
            CASE WHEN delegataire.personne_morale_prenom IS NOT NULL
                THEN delegataire.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN ''''
        ELSE delegataire.personne_morale_raison_sociale
    END as raison_sociale_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN ''''
        ELSE delegataire.personne_morale_denomination
    END as denomination_delegataire,
    delegataire.numero as numero_delegataire,&DB_PREFIXEadresse(delegataire.numero::text, delegataire.voie::text, delegataire.complement::text, delegataire.lieu_dit::text, delegataire.bp::text, delegataire.code_postal::text, delegataire.localite::text, delegataire.cedex::text, delegataire.pays::text) as adresse_delegataire_sdl,&DB_PREFIXEadresse(delegataire.numero::text, delegataire.voie::text, delegataire.complement::text, delegataire.lieu_dit::text, delegataire.bp::text, delegataire.code_postal::text, delegataire.localite::text, delegataire.cedex::text, delegataire.pays::text, '' ''::text) as adresse_delegataire,
    delegataire.voie as voie_delegataire,
    delegataire.complement as complement_delegataire,
    delegataire.lieu_dit as lieu_dit_delegataire,
    CASE 
        WHEN delegataire.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', delegataire.bp)
    END as bp_delegataire,
    delegataire.code_postal as code_postal_delegataire,
    delegataire.localite as ville_delegataire,
    CASE 
        WHEN delegataire.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', delegataire.cedex)
    END as cedex_delegataire,
    delegataire.pays as pays_delegataire,

    -- CORRESPONDANT : destinataire du courrier. Il est le délégataire ou le pétitionnaire principal
    CASE
        WHEN delegataire.qualite IS NULL
        THEN
                CASE WHEN petitionnaire_principal.qualite=''particulier''
                    THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
                    ELSE
                        CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                            THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                            ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
                        END
                END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
                ELSE
                    CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                        THEN TRIM(CONCAT_WS('' '', delegataire.personne_morale_raison_sociale, delegataire.personne_morale_denomination, ''représenté(e) par'', delegataire_civilite.libelle, delegataire.personne_morale_nom, delegataire.personne_morale_prenom))
                        ELSE TRIM(CONCAT(delegataire.personne_morale_raison_sociale, '' '', delegataire.personne_morale_denomination))
                    END
            END
    END as nom_complet_qualite_part_ou_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier'' OR petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal_civilite.libelle
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier'' OR delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                THEN delegataire_civilite.libelle
                ELSE ''''
            END
    END as civilite_qualite_part_ou_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN petitionnaire_principal.particulier_nom
                ELSE
                    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                        THEN petitionnaire_principal.personne_morale_nom
                        ELSE ''''
                    END
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN delegataire.particulier_nom
                ELSE
                    CASE WHEN delegataire.personne_morale_nom IS NOT NULL
                        THEN delegataire.personne_morale_nom
                        ELSE ''''
                    END
            END
    END as nom_qualite_part_ou_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN petitionnaire_principal.particulier_prenom
                ELSE
                    CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                        THEN petitionnaire_principal.personne_morale_prenom
                        ELSE ''''
                    END
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN delegataire.particulier_prenom
                ELSE
                    CASE WHEN delegataire.personne_morale_prenom IS NOT NULL
                        THEN delegataire.personne_morale_prenom
                        ELSE ''''
                    END
            END
    END as prenom_qualite_part_ou_pm_correspondant,
    CASE
        WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
                ELSE ''''
            END
    END as nom_complet_qualite_part_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN petitionnaire_principal_civilite.libelle
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN delegataire_civilite.libelle
                ELSE ''''
            END
    END as civilite_qualite_part_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            petitionnaire_principal.particulier_nom
        ELSE
            delegataire.particulier_nom
    END as nom_qualite_part_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            petitionnaire_principal.particulier_prenom
        ELSE
            delegataire.particulier_prenom
    END as prenom_qualite_part_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal_civilite.libelle
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                THEN delegataire_civilite.libelle
                ELSE ''''
            END
    END as civilite_qualite_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_nom
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.personne_morale_nom IS NOT NULL
                THEN delegataire.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_prenom
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.personne_morale_prenom IS NOT NULL
                THEN delegataire.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_pm_correspondant,

    
    CASE
        WHEN delegataire.qualite IS NULL
        THEN
                CASE WHEN petitionnaire_principal.qualite=''particulier''
                    THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
                    ELSE
                        CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                            THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                            ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
                        END
                END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
                ELSE
                    CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                        THEN TRIM(CONCAT_WS('' '', delegataire.personne_morale_raison_sociale, delegataire.personne_morale_denomination, ''représenté(e) par'', delegataire_civilite.libelle, delegataire.personne_morale_nom, delegataire.personne_morale_prenom))
                        ELSE TRIM(CONCAT(delegataire.personne_morale_raison_sociale, '' '', delegataire.personne_morale_denomination))
                    END
            END
    END as nom_complet_qualite_pm_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN
                CASE WHEN petitionnaire_principal.qualite=''particulier''
                    THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
                    ELSE
                        CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                            THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                            ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
                        END
                END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
                ELSE
                    CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                        THEN TRIM(CONCAT_WS('' '', delegataire.personne_morale_raison_sociale, delegataire.personne_morale_denomination, ''représenté(e) par'', delegataire_civilite.libelle, delegataire.personne_morale_nom, delegataire.personne_morale_prenom))
                        ELSE TRIM(CONCAT(delegataire.personne_morale_raison_sociale, '' '', delegataire.personne_morale_denomination))
                    END
            END
    END as nom_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier'' OR petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal_civilite.libelle
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier'' OR delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                THEN delegataire_civilite.libelle
                ELSE ''''
            END
    END as civilite_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN petitionnaire_principal.particulier_nom
                ELSE
                    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                        THEN petitionnaire_principal.personne_morale_nom
                        ELSE ''''
                    END
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN delegataire.particulier_nom
                ELSE
                    CASE WHEN delegataire.personne_morale_nom IS NOT NULL
                        THEN delegataire.personne_morale_nom
                        ELSE ''''
                    END
            END
    END as nom_particulier_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN petitionnaire_principal.particulier_prenom
                ELSE
                    CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                        THEN petitionnaire_principal.personne_morale_prenom
                        ELSE ''''
                    END
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN delegataire.particulier_prenom
                ELSE
                    CASE WHEN delegataire.personne_morale_prenom IS NOT NULL
                        THEN delegataire.personne_morale_prenom
                        ELSE ''''
                    END
            END
    END as prenom_particulier_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN ''''
                ELSE petitionnaire_principal.personne_morale_raison_sociale
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN ''''
                ELSE delegataire.personne_morale_raison_sociale
            END
    END as raison_sociale_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN ''''
                ELSE petitionnaire_principal.personne_morale_denomination
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN ''''
                ELSE delegataire.personne_morale_denomination
            END
    END as denomination_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.numero
        ELSE delegataire.numero
    END as numero_correspondant,&DB_PREFIXEadresse(CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.numero ELSE delegataire.numero END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.voie ELSE delegataire.voie END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.complement ELSE delegataire.complement END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.lieu_dit ELSE delegataire.lieu_dit END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.bp ELSE delegataire.bp END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.code_postal ELSE delegataire.code_postal END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.localite ELSE delegataire.localite END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.cedex ELSE delegataire.cedex END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.pays ELSE delegataire.pays END::text) as adresse_correspondant_sdl,&DB_PREFIXEadresse(CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.numero ELSE delegataire.numero END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.voie ELSE delegataire.voie END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.complement ELSE delegataire.complement END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.lieu_dit ELSE delegataire.lieu_dit END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.bp ELSE delegataire.bp END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.code_postal ELSE delegataire.code_postal END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.localite ELSE delegataire.localite END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.cedex ELSE delegataire.cedex END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.pays ELSE delegataire.pays END::text, '' ''::text) as adresse_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.voie
        ELSE delegataire.voie
    END as voie_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.complement
        ELSE delegataire.complement
    END as complement_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.lieu_dit
        ELSE delegataire.lieu_dit
    END as lieu_dit_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN 
            CASE 
                WHEN petitionnaire_principal.bp IS NULL
                THEN ''''
                ELSE CONCAT(''BP '', petitionnaire_principal.bp)
            END
        ELSE 
            CASE 
                WHEN delegataire.bp IS NULL
                THEN ''''
                ELSE CONCAT(''BP '', delegataire.bp)
            END
    END as bp_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.code_postal
        ELSE delegataire.code_postal
    END as code_postal_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.localite
        ELSE delegataire.localite
    END as ville_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN 
            CASE 
                WHEN petitionnaire_principal.cedex IS NULL
                THEN ''''
                ELSE CONCAT(''CEDEX '', petitionnaire_principal.cedex)
            END
        ELSE 
            CASE 
                WHEN delegataire.cedex IS NULL
                THEN ''''
                ELSE CONCAT(''CEDEX '', delegataire.cedex)
            END
    END as cedex_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.pays
        ELSE delegataire.pays
    END as pays_correspondant,

    -- Dates importantes du dossier d''instructionto_char(dossier.date_depot_mairie, ''DD/MM/YYYY'') as date_depot_mairie,
to_char(dossier.date_affichage, ''DD/MM/YYYY'') as date_affichage,
    to_char(dossier.date_depot, ''DD/MM/YYYY'') as date_depot_dossier,
    to_char(dossier.date_complet, ''DD/MM/YYYY'') as date_completude,
    to_char(dossier.date_dernier_depot, ''DD/MM/YYYY'') as date_dernier_depot,
    to_char(dossier.date_decision, ''DD/MM/YYYY'') as date_decision_dossier,
    CASE WHEN dossier.incomplet_notifie IS TRUE AND dossier.incompletude IS TRUE 
        THEN to_char(dossier.date_limite_incompletude ,''DD/MM/YYYY'') 
        ELSE to_char(dossier.date_limite ,''DD/MM/YYYY'')
    END as date_limite_dossier,
    to_char(dossier.date_achevement,''DD/MM/YYYY'') as date_achevement_dossier,
    to_char(dossier.date_conformite,''DD/MM/YYYY'') as date_conformite_dossier,
    
    -- Données générales des données techniques
    donnees_techniques.co_projet_desc as co_projet_desc_donnees_techniques,
    donnees_techniques.am_projet_desc as am_projet_desc_donnees_techniques,
    donnees_techniques.dm_projet_desc as dm_projet_desc_donnees_techniques,
    donnees_techniques.ope_proj_desc as ope_proj_desc_donnees_techniques,
    TRIM(CONCAT(
        donnees_techniques.co_projet_desc, '' '',
        donnees_techniques.am_projet_desc, '' '',
        donnees_techniques.dm_projet_desc, '' '',
        donnees_techniques.ope_proj_desc
        )) as projet_desc_donnees_techniques,
    donnees_techniques.am_lot_max_nb as am_lot_max_nb_donnees_techniques,
    donnees_techniques.am_lot_max_shon as am_lot_max_shon_donnees_techniques,
        -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        THEN donnees_techniques.su2_cstr_shon_tot
        ELSE donnees_techniques.su_cstr_shon_tot
    END as su_cstr_shon_tot_donnees_techniques,
    -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        THEN donnees_techniques.su2_demo_shon_tot
        ELSE donnees_techniques.su_demo_shon_tot
    END as su_demo_shon_tot_donnees_techniques,
    -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        THEN
            REGEXP_REPLACE(CONCAT(
                CASE WHEN donnees_techniques.su2_cstr_shon1 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Exploitation agricole - '', donnees_techniques.su2_cstr_shon1, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon2 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Exploitation forestière - '', donnees_techniques.su2_cstr_shon2, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon3 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Logement - '', donnees_techniques.su2_cstr_shon3, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon4 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Hébergement - '', donnees_techniques.su2_cstr_shon4, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon5 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Artisanat et commerce de détail - '', donnees_techniques.su2_cstr_shon5, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon6 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Restauration - '', donnees_techniques.su2_cstr_shon6, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon7 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Commerce de gros - '', donnees_techniques.su2_cstr_shon7, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon8 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Activités de services où s''''effectue l''''accueil d''''une clientèle - '', donnees_techniques.su2_cstr_shon8, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon9 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Hébergement hôtelier et touristique - '', donnees_techniques.su2_cstr_shon9, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon10 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Cinéma - '', donnees_techniques.su2_cstr_shon10, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon11 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Locaux et bureaux accueillant du public des administrations publiques et assimilés - '', donnees_techniques.su2_cstr_shon11, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon12 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Locaux techniques et industriels des administrations publiques et assimilés - '', donnees_techniques.su2_cstr_shon12, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon13 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Établissements d''''enseignement, de santé et d''''action sociale - '', donnees_techniques.su2_cstr_shon13, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon14 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Salles d''''art et de spectacles - '', donnees_techniques.su2_cstr_shon14, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon15 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Équipements sportifs - '', donnees_techniques.su2_cstr_shon15, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon16 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Autres équipements recevant du public - '', donnees_techniques.su2_cstr_shon16, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon17 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Industrie - '', donnees_techniques.su2_cstr_shon17, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon18 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Entrepôt - '', donnees_techniques.su2_cstr_shon18, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon19 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Bureau - '', donnees_techniques.su2_cstr_shon19, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon20 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Centre de congrès et d''''exposition - '', donnees_techniques.su2_cstr_shon20, '' m²'')
                END
            ), '' / $'', '''')
        ELSE
            REGEXP_REPLACE(CONCAT(
                CASE
                    WHEN donnees_techniques.su_cstr_shon1 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Habitation - '', donnees_techniques.su_cstr_shon1, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon2 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Hébergement hôtelier - '', donnees_techniques.su_cstr_shon2, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon3 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Bureaux - '', donnees_techniques.su_cstr_shon3, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon4 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Commerce - '', donnees_techniques.su_cstr_shon4, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon5 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Artisanat - '', donnees_techniques.su_cstr_shon5, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon6 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Industrie - '', donnees_techniques.su_cstr_shon6, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon7 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Exploitation agricole ou forestière - '', donnees_techniques.su_cstr_shon7, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon8 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Entrepôt - '', donnees_techniques.su_cstr_shon8, '' m² / '')
                END, 
                CASE
                    WHEN donnees_techniques.su_cstr_shon9 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Service public ou d''''intérêt collectif - '', donnees_techniques.su_cstr_shon9, '' m²'')
                END
            ), '' / $'', '''')
    END as tab_surface_donnees_techniques,
    donnees_techniques.co_tot_log_nb as co_tot_log_nb_donnees_techniques,
    donnees_techniques.co_statio_place_nb as co_statio_place_nb_donnees_techniques,
    -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        THEN donnees_techniques.su2_tot_shon_tot
        ELSE donnees_techniques.su_tot_shon_tot
    END as su_tot_shon_tot_donnees_techniques,

    -- Données techniques pour les AT
    CONCAT_WS('', '',
        CASE WHEN donnees_techniques.erp_cstr_neuve IS TRUE THEN ''construction neuve'' END,
        CASE WHEN donnees_techniques.erp_trvx_acc IS TRUE THEN ''travaux de mise en conformité totale aux règles d’accessibilité'' END,
        CASE WHEN donnees_techniques.erp_extension IS TRUE THEN ''extension'' END,
        CASE WHEN donnees_techniques.erp_rehab IS TRUE THEN ''réhabilitation'' END,
        CASE WHEN donnees_techniques.erp_trvx_am IS TRUE THEN ''travaux d’aménagement (remplacement de revêtements, rénovation électrique, création d’une rampe, par exemple)'' END,
        CASE WHEN donnees_techniques.erp_vol_nouv_exist IS TRUE THEN ''création de volumes nouveaux dans des volumes existants (modification du cloisonnement, par exemple)'' END
    ) as at_type_travaux,
    donnees_techniques.erp_public_eff_tot as at_effectif_public_total,
    CONCAT_WS('' - '', erp_categorie.libelle, erp_categorie.description) as at_categorie_etablissement,
    CONCAT_WS('' - '', erp_type.libelle, erp_type.description) as at_type_etablissement,

    -- Consultation
    to_char(consultation.date_envoi, ''HH24:MI DD/MM/YYYY'') as consultation_date_envoi,
    to_char(consultation.date_retour, ''HH24:MI DD/MM/YYYY'') as consultation_date_retour,
    to_char(consultation.date_limite, ''HH24:MI DD/MM/YYYY'') as consultation_date_limite,
    to_char(consultation.date_reception, ''HH24:MI DD/MM/YYYY'') as consultation_date_reception,
    consultation.motivation as consultation_motivation,

    -- Service
    service.abrege as service_abrege,
    service.libelle as service_libelle,
    service.adresse as service_adresse,
    service.adresse2 as service_adresse2,
    service.cp as service_code_postal,
    service.ville as service_ville,
    service.email as service_email,

    -- Message consultation officielle
    dossier_message.type as dossier_message_type,
    dossier_message.emetteur as dossier_message_emetteur,
    to_char(dossier_message.date_emission, ''HH24:MI DD/MM/YYYY'') as dossier_message_date_emission,
    dossier_message.contenu as dossier_message_contenu,
    CASE WHEN dossier_message.lu IS NULL
        OR dossier_message.lu IS FALSE
        THEN ''non''
        ELSE ''oui''
    END as dossier_message_lu,
    dossier_message.categorie as dossier_message_categorie,

    -- Message consultation originel
    dossier_message_originel.type as dossier_message_originel_type,
    dossier_message_originel.emetteur as dossier_message_originel_emetteur,
    to_char(dossier_message_originel.date_emission, ''HH24:MI DD/MM/YYYY'') as dossier_message_originel_date_emission,
    dossier_message_originel.contenu as dossier_message_originel_contenu,
    CASE WHEN dossier_message_originel.lu IS NULL
        OR dossier_message_originel.lu IS FALSE
        THEN ''non''
        ELSE ''oui''
    END as dossier_message_originel_lu,
    dossier_message_originel.categorie as dossier_message_originel_categorie,
    CASE WHEN dossier_message_originel.type LIKE ''ADS_ERP__PC__CONSULTATION_OFFICIELLE_POUR_CONFORMITE''
        THEN ''pour conformite''
        ELSE ''pour avis''
    END as dossier_message_originel_consultation

FROM
    &DB_PREFIXEconsultation
LEFT JOIN
    &DB_PREFIXEdossier
    ON
        consultation.dossier = dossier.dossier
    AND
        consultation.consultation = ''&idx''
LEFT JOIN
    &DB_PREFIXEservice
    ON
        consultation.service = service.service
LEFT JOIN
    &DB_PREFIXEdossier_message
    ON
        dossier_message.dossier = dossier.dossier
        AND dossier_message.type =''ERP_ADS__PC__AR_CONSULTATION_OFFICIELLE''
LEFT JOIN
    &DB_PREFIXEdossier_message as dossier_message_originel
    ON
        dossier_message_originel.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXElien_dossier_demandeur
    ON
        dossier.dossier = lien_dossier_demandeur.dossier AND lien_dossier_demandeur.petitionnaire_principal IS TRUE
LEFT JOIN
    &DB_PREFIXEdemandeur as petitionnaire_principal
    ON
        lien_dossier_demandeur.demandeur = petitionnaire_principal.demandeur
LEFT JOIN
    &DB_PREFIXEcivilite as petitionnaire_principal_civilite
    ON
        petitionnaire_principal.particulier_civilite = petitionnaire_principal_civilite.civilite OR petitionnaire_principal.personne_morale_civilite = petitionnaire_principal_civilite.civilite
LEFT JOIN
    (
    &DB_PREFIXElien_dossier_demandeur AS lien_dossier_delegataire
        JOIN &DB_PREFIXEdemandeur as delegataire
        ON
            lien_dossier_delegataire.demandeur = delegataire.demandeur AND delegataire.type_demandeur = ''delegataire''
    )
    ON
        dossier.dossier = lien_dossier_delegataire.dossier AND lien_dossier_delegataire.petitionnaire_principal IS FALSE
LEFT JOIN
    &DB_PREFIXEcivilite as delegataire_civilite
    ON
        delegataire.particulier_civilite = delegataire_civilite.civilite OR delegataire.personne_morale_civilite = delegataire_civilite.civilite
LEFT JOIN (
    SELECT lien_dossier_demandeur.dossier, array_agg(lien_dossier_demandeur.demandeur ORDER BY lien_dossier_demandeur.demandeur) AS petitionnaire_autre
    FROM &DB_PREFIXElien_dossier_demandeur
    LEFT JOIN &DB_PREFIXEdossier
        ON lien_dossier_demandeur.dossier=dossier.dossier 
        AND lien_dossier_demandeur.petitionnaire_principal IS FALSE
    GROUP BY lien_dossier_demandeur.dossier
) as sub_petitionnaire_autre
ON dossier.dossier = sub_petitionnaire_autre.dossier
LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_1
    ON
        petitionnaire_1.demandeur = petitionnaire_autre[1] AND petitionnaire_1.type_demandeur != ''delegataire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_1_civilite
    ON
        petitionnaire_1.particulier_civilite = petitionnaire_1_civilite.civilite OR petitionnaire_1.personne_morale_civilite = petitionnaire_1_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_2
    ON
        petitionnaire_2.demandeur = petitionnaire_autre[2] AND petitionnaire_2.type_demandeur != ''delegataire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_2_civilite
    ON
        petitionnaire_2.particulier_civilite = petitionnaire_2_civilite.civilite OR petitionnaire_2.personne_morale_civilite = petitionnaire_2_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_3
    ON
        petitionnaire_3.demandeur = petitionnaire_autre[3] AND petitionnaire_3.type_demandeur != ''delegataire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_3_civilite
    ON
        petitionnaire_3.particulier_civilite = petitionnaire_3_civilite.civilite OR petitionnaire_3.personne_morale_civilite = petitionnaire_3_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_4
    ON
        petitionnaire_4.demandeur = petitionnaire_autre[4] AND petitionnaire_4.type_demandeur != ''delegataire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_4_civilite
    ON
        petitionnaire_4.particulier_civilite = petitionnaire_4_civilite.civilite OR petitionnaire_4.personne_morale_civilite = petitionnaire_4_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_5
    ON
        petitionnaire_5.demandeur = petitionnaire_autre[5] AND petitionnaire_5.type_demandeur != ''delegataire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_5_civilite
    ON
        petitionnaire_5.particulier_civilite = petitionnaire_5_civilite.civilite OR petitionnaire_5.personne_morale_civilite = petitionnaire_5_civilite.civilite
LEFT JOIN
    &DB_PREFIXEdossier_instruction_type
    ON
        dossier.dossier_instruction_type = dossier_instruction_type.dossier_instruction_type
LEFT JOIN
    &DB_PREFIXEdossier_autorisation
    ON
        dossier.dossier_autorisation = dossier_autorisation.dossier_autorisation
LEFT JOIN
    &DB_PREFIXEdossier_autorisation_type_detaille
    ON
        dossier_autorisation.dossier_autorisation_type_detaille = dossier_autorisation_type_detaille.dossier_autorisation_type_detaille
LEFT JOIN
    &DB_PREFIXEdossier_autorisation_type
    ON
        dossier_autorisation_type_detaille.dossier_autorisation_type = dossier_autorisation_type.dossier_autorisation_type
LEFT JOIN
    &DB_PREFIXEinstructeur
    ON
        dossier.instructeur = instructeur.instructeur
LEFT JOIN
    &DB_PREFIXEom_utilisateur
    ON
        om_utilisateur.om_utilisateur = instructeur.om_utilisateur
LEFT JOIN
    &DB_PREFIXEdivision
    ON
        instructeur.division = division.division
LEFT JOIN
    &DB_PREFIXEdirection
    ON
        division.direction = direction.direction
LEFT JOIN
    &DB_PREFIXEarrondissement
    ON
        dossier.terrain_adresse_code_postal = arrondissement.code_postal
LEFT JOIN
    &DB_PREFIXEavis_decision
    ON
        dossier.avis_decision = avis_decision.avis_decision
LEFT JOIN
    &DB_PREFIXEetat
    ON
        dossier.etat = etat.etat
LEFT JOIN
    &DB_PREFIXEdonnees_techniques
    ON
    dossier.dossier = donnees_techniques.dossier_instruction
LEFT JOIN
    &DB_PREFIXEarchitecte
    ON
    donnees_techniques.architecte = architecte.architecte
LEFT JOIN
    &DB_PREFIXEtaxe_amenagement
    ON
        dossier.om_collectivite = taxe_amenagement.om_collectivite
LEFT JOIN
    &DB_PREFIXEerp_categorie
    ON
        donnees_techniques.erp_class_cat = erp_categorie.erp_categorie
LEFT JOIN
    &DB_PREFIXEerp_type
    ON
        donnees_techniques.erp_class_type = erp_type.erp_type
WHERE dossier_message.contenu LIKE ''%consultation : &idx%''
AND dossier_message_originel.contenu LIKE ''%"consultation":"&idx"%''
', '-- Données générales du dossier d''instruction
[libelle_dossier]    [code_barres_dossier]
[etat_dossier]    [libelle_da]
[code_datd]    [libelle_datd]
[code_dat]    [libelle_dat]
[code_dit]    [libelle_dit]
[delai_dossier]
[terrain_references_cadastrales_dossier]
[libelle_avis_decision]

-- Dates de la consultation
[consultation_date_envoi]
[consultation_date_retour]
[consultation_date_limite]
[consultation_date_reception]
[consultation_motivation]

-- Service rattaché à la consultation
[service_abrege]
[service_libelle]
[service_adresse]
[service_adresse2]
[service_code_postal]
[service_ville]
[service_email]

-- Message consultation officielle
[dossier_message_type]
[dossier_message_emetteur]
[dossier_message_date_emission]
[dossier_message_contenu]
[dossier_message_lu]
[dossier_message_categorie]

-- Message consultation originel
[dossier_message_originel_type]
[dossier_message_originel_emetteur]
[dossier_message_originel_date_emission]
[dossier_message_originel_contenu]
[dossier_message_originel_lu]
[dossier_message_originel_categorie]
[dossier_message_originel_consultation]


-- Coordonnées de l''instructeur
[nom_instructeur]
[telephone_instructeur]
[division_instructeur]
[email_instructeur]

-- Noms des signataires
[division_chef]
[direction_chef]
[libelle_direction]
[description_direction]

-- Adresse du terrain du dossier d''instruction
[terrain_adresse_voie_numero_dossier][adresse_terrain_sdl][adresse_terrain]    [terrain_adresse_voie_dossier]
[terrain_adresse_lieu_dit_dossier]    [terrain_adresse_bp_dossier]
[terrain_adresse_code_postal_dossier]    [terrain_adresse_localite_dossier]    [terrain_adresse_cedex_dossier]
[libelle_arrondissement]

-- Nom et prénom de l''architecte
[architecte]

--Taxe d''aménagement du dossier d''instruction
[tax_taux_secteur](à utiliser si l''option de simulation des taxes est activée et que le taxe du secteur est définit sur le dossier)
[tax_taux_secteur_1](jusqu''à 20)
[tax_numero_secteur]
[tax_montant_part_communale]
[tax_montant_part_departementale]
[tax_montant_part_regionale]
[tax_montant_total]

-- Coordonnées du pétitionnaire principal
[nom_qualite_part_petitionnaire_principal] [prenom_qualite_part_petitionnaire_principal]
[civilite_qualite_part_petitionnaire_principal] [nom_complet_qualite_part_petitionnaire_principal]
[nom_qualite_pm_petitionnaire_principal] [prenom_qualite_pm_petitionnaire_principal]
[civilite_qualite_pm_petitionnaire_principal] [nom_complet_qualite_pm_petitionnaire_principal]
[nom_qualite_part_ou_pm_petitionnaire_principal] [prenom_qualite_part_ou_pm_petitionnaire_principal]
[civilite_qualite_part_ou_pm_petitionnaire_principal] [nom_complet_qualite_part_ou_pm_petitionnaire_principal]
[nom_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[civilite_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[nom_particulier_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[prenom_particulier_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[raison_sociale_petitionnaire_principal]
[denomination_petitionnaire_principal]
[numero_petitionnaire_principal][adresse_petitionnaire_principal_sdl][adresse_petitionnaire_principal]    [voie_petitionnaire_principal]    [complement_petitionnaire_principal]
[lieu_dit_petitionnaire_principal]    [bp_petitionnaire_principal]
[code_postal_petitionnaire_principal]    [localite_petitionnaire_principal]    [cedex_petitionnaire_principal]
[pays_petitionnaire_principal]

--Coordonnées des autres pétitionnaires
[nom_qualite_part_petitionnaire_1](jusqu''à 5)    [prenom_qualite_part_petitionnaire_1](jusqu''à 5)
[civilite_qualite_part_petitionnaire_1](jusqu''à 5)    [nom_complet_qualite_part_petitionnaire_1](jusqu''à 5)
[nom_qualite_pm_petitionnaire_1](jusqu''à 5)    [prenom_qualite_pm_petitionnaire_1](jusqu''à 5)
[civilite_qualite_pm_petitionnaire_1](jusqu''à 5)    [nom_complet_qualite_pm_petitionnaire_1](jusqu''à 5)
[nom_qualite_part_ou_pm_petitionnaire_1](jusqu''à 5)    [prenom_qualite_part_ou_pm_petitionnaire_1](jusqu''à 5)
[civilite_qualite_part_ou_pm_petitionnaire_1](jusqu''à 5)    [nom_complet_qualite_part_ou_pm_petitionnaire_1](jusqu''à 5)
[nom_petitionnaire_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[civilite_petitionnaire_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[nom_particulier_petitionnaire_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[prenom_particulier_petitionnaire_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[raison_sociale_petitionnaire_1](jusqu''à 5)
[denomination_petitionnaire_1](jusqu''à 5)
[numero_petitionnaire_1](jusqu''à 5)[adresse_petitionnaire_1_sdl](jusqu''à 5)[adresse_petitionnaire_1](jusqu''à 5)    [voie_petitionnaire_1](jusqu''à 5)    
[complement_petitionnaire_1](jusqu''à 5)
[lieu_dit_petitionnaire_1](jusqu''à 5)    [bp_petitionnaire_1](jusqu''à 5)
[code_postal_petitionnaire_1](jusqu''à 5)    [localite_petitionnaire_1](jusqu''à 5)    
[cedex_petitionnaire_1](jusqu''à 5)
[pays_petitionnaire_1](jusqu''à 5)

-- Coordonnées du délégataire
[nom_qualite_part_delegataire] [prenom_qualite_part_delegataire]
[civilite_qualite_part_delegataire] [nom_complet_qualite_part_delegataire]
[nom_qualite_pm_delegataire] [prenom_qualite_pm_delegataire]
[civilite_qualite_pm_delegataire] [nom_complet_qualite_pm_delegataire]
[nom_qualite_part_ou_pm_delegataire] [prenom_qualite_part_ou_pm_delegataire]
[civilite_qualite_part_ou_pm_delegataire] [nom_complet_qualite_part_ou_pm_delegataire]
[nom_delegataire] (Déprécié, à ne plus utiliser)
[civilite_delegataire] (Déprécié, à ne plus utiliser)
[nom_particulier_delegataire] (Déprécié, à ne plus utiliser)
[prenom_particulier_delegataire] (Déprécié, à ne plus utiliser)
[raison_sociale_delegataire]
[denomination_delegataire]
[numero_delegataire][adresse_delegataire_sdl][adresse_delegataire]    [voie_delegataire]    [complement_delegataire]
[lieu_dit_delegataire]    [bp_delegataire]
[code_postal_delegataire]    [ville_delegataire]    [cedex_delegataire]
[pays_delegataire]

-- CORRESPONDANT : destinataire du courrier. Il est le délégataire ou le pétitionnaire principal
[nom_qualite_part_correspondant] [prenom_qualite_part_correspondant]
[civilite_qualite_part_correspondant] [nom_complet_qualite_part_correspondant]
[nom_qualite_pm_correspondant] [prenom_qualite_pm_correspondant]
[civilite_qualite_pm_correspondant] [nom_complet_qualite_pm_correspondant]
[nom_qualite_part_ou_pm_correspondant] [prenom_qualite_part_ou_pm_correspondant]
[civilite_qualite_part_ou_pm_correspondant] [nom_complet_qualite_part_ou_pm_correspondant]
[nom_correspondant] (Déprécié, à ne plus utiliser)
[civilite_correspondant] (Déprécié, à ne plus utiliser)
[nom_particulier_correspondant] (Déprécié, à ne plus utiliser)
[prenom_particulier_correspondant] (Déprécié, à ne plus utiliser)
[raison_sociale_correspondant]
[denomination_correspondant]
[numero_correspondant][adresse_correspondant_sdl][adresse_correspondant]    [voie_correspondant]    [complement_correspondant]
[lieu_dit_correspondant]    [bp_correspondant]
[code_postal_correspondant]    [ville_correspondant]    [cedex_correspondant]
[pays_correspondant]

-- Dates importantes du dossier d''instruction[date_depot_mairie]
[date_affichage]
[date_depot_dossier]
[date_completude]
[date_dernier_depot]
[date_decision_dossier]
[date_limite_dossier]
[date_achevement_dossier]
[date_conformite_dossier]

-- Données générales des données techniques
[co_projet_desc_donnees_techniques]    [am_projet_desc_donnees_techniques]
[dm_projet_desc_donnees_techniques]    [ope_proj_desc_donnees_techniques]
[projet_desc_donnees_techniques]
[co_tot_log_nb_donnees_techniques]    [co_statio_place_nb_donnees_techniques]
[am_lot_max_nb_donnees_techniques]    [am_lot_max_shon_donnees_techniques]
-- Les données techniques suivantes concernent le tableau des surfaces
-- Elles récupèrent les valeurs du tableau composé des sous-destinations si au
-- moins une valeur de celui-ci est saisie
[su_cstr_shon_tot_donnees_techniques]    [su_demo_shon_tot_donnees_techniques]
[tab_surface_donnees_techniques]
[su_tot_shon_tot_donnees_techniques]

--Données techniques des AT
[at_type_travaux]
[at_effectif_public_total]
[at_categorie_etablissement]
[at_type_etablissement]
', 'sql', NULL, NULL);
INSERT INTO om_requete (om_requete, code, libelle, description, requete, merge_fields, type, classe, methode) VALUES (17, 'rapport_instruction', 'Récapitulatif du dossier d''instruction / rapport d''instruction', NULL, '
SELECT

    --Données générales du rapport d''instruction
    rapport_instruction.dossier_instruction as dossier_instruction_rapport_instruction, 
    analyse_reglementaire_om_html as analyse_reglementaire_rapport_instruction,
    description_projet_om_html as description_projet_rapport_instruction,
    proposition_decision as proposition_decision_rapport_instruction, 
    complement_om_html as complement_rapport_instruction,

    --Données générales du dossier d''instruction
    dossier.dossier_libelle as libelle_dossier, 
    dossier.dossier as code_barres_dossier,
    etat.libelle as etat_dossier,
    dossier.delai as delai_dossier,
    dossier_autorisation_type_detaille.libelle as libelle_datd, 
    avis_decision.libelle as libelle_avis_decision,

    --Adresse du terrain dossier d''instruction
    terrain_adresse_voie_numero as terrain_adresse_voie_numero_dossier,&DB_PREFIXEadresse(dossier.terrain_adresse_voie_numero::text, dossier.terrain_adresse_voie::text, ''''::text, dossier.terrain_adresse_lieu_dit::text, dossier.terrain_adresse_bp::text, dossier.terrain_adresse_code_postal::text, dossier.terrain_adresse_localite::text, dossier.terrain_adresse_cedex::text) as adresse_terrain_sdl,&DB_PREFIXEadresse(dossier.terrain_adresse_voie_numero::text, dossier.terrain_adresse_voie::text, ''''::text, dossier.terrain_adresse_lieu_dit::text, dossier.terrain_adresse_bp::text, dossier.terrain_adresse_code_postal::text, dossier.terrain_adresse_localite::text, dossier.terrain_adresse_cedex::text, ''''::text, '' ''::text) as adresse_terrain,
    dossier.terrain_adresse_voie as terrain_adresse_voie_dossier,
    terrain_adresse_lieu_dit as terrain_adresse_lieu_dit_dossier,
    terrain_adresse_localite as terrain_adresse_localite_dossier,
    terrain_adresse_code_postal as terrain_adresse_code_postal_dossier,
    terrain_adresse_bp as terrain_adresse_bp_dossier,
    terrain_adresse_cedex as terrain_adresse_cedex_dossier,
    terrain_superficie as terrain_superficie_dossier,
    replace(dossier.terrain_references_cadastrales, '';'', '' '') as terrain_references_cadastrales_dossier,

    --Taxe d''aménagement du dossier d''instruction
    CASE
        WHEN tax_secteur = 1 THEN taxe_amenagement.tx_comm_secteur_1
        WHEN tax_secteur = 2 THEN taxe_amenagement.tx_comm_secteur_2
        WHEN tax_secteur = 3 THEN taxe_amenagement.tx_comm_secteur_3
        WHEN tax_secteur = 4 THEN taxe_amenagement.tx_comm_secteur_4
        WHEN tax_secteur = 5 THEN taxe_amenagement.tx_comm_secteur_5
        WHEN tax_secteur = 6 THEN taxe_amenagement.tx_comm_secteur_6
        WHEN tax_secteur = 7 THEN taxe_amenagement.tx_comm_secteur_7
        WHEN tax_secteur = 8 THEN taxe_amenagement.tx_comm_secteur_8
        WHEN tax_secteur = 9 THEN taxe_amenagement.tx_comm_secteur_9
        WHEN tax_secteur = 10 THEN taxe_amenagement.tx_comm_secteur_10
        WHEN tax_secteur = 11 THEN taxe_amenagement.tx_comm_secteur_11
        WHEN tax_secteur = 12 THEN taxe_amenagement.tx_comm_secteur_12
        WHEN tax_secteur = 13 THEN taxe_amenagement.tx_comm_secteur_13
        WHEN tax_secteur = 14 THEN taxe_amenagement.tx_comm_secteur_14
        WHEN tax_secteur = 15 THEN taxe_amenagement.tx_comm_secteur_15
        WHEN tax_secteur = 16 THEN taxe_amenagement.tx_comm_secteur_16
        WHEN tax_secteur = 17 THEN taxe_amenagement.tx_comm_secteur_17
        WHEN tax_secteur = 18 THEN taxe_amenagement.tx_comm_secteur_18
        WHEN tax_secteur = 19 THEN taxe_amenagement.tx_comm_secteur_19
        WHEN tax_secteur = 20 THEN taxe_amenagement.tx_comm_secteur_20
    END as tax_taux_secteur,

    taxe_amenagement.tx_comm_secteur_1 as tax_taux_secteur_1,
    taxe_amenagement.tx_comm_secteur_2 as tax_taux_secteur_2,
    taxe_amenagement.tx_comm_secteur_3 as tax_taux_secteur_3,
    taxe_amenagement.tx_comm_secteur_4 as tax_taux_secteur_4,
    taxe_amenagement.tx_comm_secteur_5 as tax_taux_secteur_5,
    taxe_amenagement.tx_comm_secteur_6 as tax_taux_secteur_6,
    taxe_amenagement.tx_comm_secteur_7 as tax_taux_secteur_7,
    taxe_amenagement.tx_comm_secteur_8 as tax_taux_secteur_8,
    taxe_amenagement.tx_comm_secteur_9 as tax_taux_secteur_9,
    taxe_amenagement.tx_comm_secteur_10 as tax_taux_secteur_10,
    taxe_amenagement.tx_comm_secteur_11 as tax_taux_secteur_11,
    taxe_amenagement.tx_comm_secteur_12 as tax_taux_secteur_12,
    taxe_amenagement.tx_comm_secteur_13 as tax_taux_secteur_13,
    taxe_amenagement.tx_comm_secteur_14 as tax_taux_secteur_14,
    taxe_amenagement.tx_comm_secteur_15 as tax_taux_secteur_15,
    taxe_amenagement.tx_comm_secteur_16 as tax_taux_secteur_16,
    taxe_amenagement.tx_comm_secteur_17 as tax_taux_secteur_17,
    taxe_amenagement.tx_comm_secteur_18 as tax_taux_secteur_18,
    taxe_amenagement.tx_comm_secteur_19 as tax_taux_secteur_19,
    taxe_amenagement.tx_comm_secteur_20 as tax_taux_secteur_20,
    
    CASE WHEN taxe_amenagement.en_ile_de_france IS NULL
        OR taxe_amenagement.en_ile_de_france IS FALSE
        THEN ''Non''
        ELSE ''Oui''
    END as tax_en_ile_de_france,
    taxe_amenagement.val_forf_surf_cstr as tax_val_forf_surf_cstr,
    taxe_amenagement.val_forf_empl_tente_carav_rml as tax_val_forf_empl_tente_carav_rml,
    taxe_amenagement.val_forf_empl_hll as tax_val_forf_empl_hll,
    taxe_amenagement.val_forf_surf_piscine as tax_val_forf_surf_piscine,
    taxe_amenagement.val_forf_nb_eolienne as tax_val_forf_nb_eolienne,
    taxe_amenagement.val_forf_surf_pann_photo as tax_val_forf_surf_pann_photo,
    taxe_amenagement.val_forf_nb_parking_ext as tax_val_forf_nb_parking_ext,
    taxe_amenagement.tx_depart  as tax_tx_depart,
    taxe_amenagement.tx_reg as tax_tx_reg,
    taxe_amenagement.tx_exo_facul_1_reg as tax_tx_exo_facul_1_reg,
    taxe_amenagement.tx_exo_facul_2_reg as tax_tx_exo_facul_2_reg,
    taxe_amenagement.tx_exo_facul_3_reg as tax_tx_exo_facul_3_reg,
    taxe_amenagement.tx_exo_facul_4_reg as tax_tx_exo_facul_4_reg,
    taxe_amenagement.tx_exo_facul_5_reg as tax_tx_exo_facul_5_reg,
    taxe_amenagement.tx_exo_facul_6_reg as tax_tx_exo_facul_6_reg,
    taxe_amenagement.tx_exo_facul_7_reg as tax_tx_exo_facul_7_reg,
    taxe_amenagement.tx_exo_facul_8_reg as tax_tx_exo_facul_8_reg,
    taxe_amenagement.tx_exo_facul_9_reg as tax_tx_exo_facul_9_reg,
    taxe_amenagement.tx_exo_facul_1_depart  as tax_tx_exo_facul_1_depart,
    taxe_amenagement.tx_exo_facul_2_depart  as tax_tx_exo_facul_2_depart,
    taxe_amenagement.tx_exo_facul_3_depart  as tax_tx_exo_facul_3_depart,
    taxe_amenagement.tx_exo_facul_4_depart  as tax_tx_exo_facul_4_depart,
    taxe_amenagement.tx_exo_facul_5_depart  as tax_tx_exo_facul_5_depart,
    taxe_amenagement.tx_exo_facul_6_depart  as tax_tx_exo_facul_6_depart,
    taxe_amenagement.tx_exo_facul_7_depart  as tax_tx_exo_facul_7_depart,
    taxe_amenagement.tx_exo_facul_8_depart  as tax_tx_exo_facul_8_depart,
    taxe_amenagement.tx_exo_facul_9_depart  as tax_tx_exo_facul_9_depart,
    taxe_amenagement.tx_exo_facul_1_comm as tax_tx_exo_facul_1_comm,
    taxe_amenagement.tx_exo_facul_2_comm as tax_tx_exo_facul_2_comm,
    taxe_amenagement.tx_exo_facul_3_comm as tax_tx_exo_facul_3_comm,
    taxe_amenagement.tx_exo_facul_4_comm as tax_tx_exo_facul_4_comm,
    taxe_amenagement.tx_exo_facul_5_comm as tax_tx_exo_facul_5_comm,
    taxe_amenagement.tx_exo_facul_6_comm as tax_tx_exo_facul_6_comm,
    taxe_amenagement.tx_exo_facul_7_comm as tax_tx_exo_facul_7_comm,
    taxe_amenagement.tx_exo_facul_8_comm as tax_tx_exo_facul_8_comm,
    taxe_amenagement.tx_exo_facul_9_comm as tax_tx_exo_facul_9_comm,
    taxe_amenagement.tx_rap as tax_tx_rap,

    dossier.tax_mtn_rap as tax_montant_rap,
    CONCAT_WS('' '', ''Secteur'', dossier.tax_secteur) as tax_secteur,
    dossier.tax_secteur as tax_numero_secteur,
    dossier.tax_mtn_part_commu as tax_montant_part_communale,
    dossier.tax_mtn_part_depart as tax_montant_part_departementale,
    dossier.tax_mtn_part_reg as tax_montant_part_regionale,
    dossier.tax_mtn_total as tax_montant_total,
    
    --Coordonnées du demandeur
    civilite.code as code_civilite,
    demandeur.particulier_nom as particulier_nom_demandeur,
    demandeur.particulier_prenom as particulier_prenom_demandeur,
    demandeur.personne_morale_denomination as personne_morale_denomination_demandeur,
    demandeur.personne_morale_raison_sociale as personne_morale_raison_sociale_demandeur,
    demandeur.personne_morale_siret as personne_morale_siret_demandeur,
    demandeur.personne_morale_nom as personne_morale_nom_demandeur,
    demandeur.personne_morale_prenom as personne_morale_prenom_demandeur,
    demandeur.numero as numero_demandeur,
    demandeur.voie as voie_demandeur,
    demandeur.complement as complement_demandeur,
    demandeur.lieu_dit as lieu_dit_demandeur,
    demandeur.localite as localite_demandeur,
    demandeur.code_postal as code_postal_demandeur,
    demandeur.bp as bp_demandeur,
    demandeur.cedex as cedex_demandeur,

    -- Coordonnées du pétitionnaire principal
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier'' OR petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_nom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
        THEN petitionnaire_principal.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
            END
    END as nom_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier'' OR petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_nom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_principal.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_principal.personne_morale_denomination
    END as denomination_petitionnaire_principal,
    petitionnaire_principal.numero as numero_petitionnaire_principal,&DB_PREFIXEadresse(petitionnaire_principal.numero::text, petitionnaire_principal.voie::text, petitionnaire_principal.complement::text, petitionnaire_principal.lieu_dit::text, petitionnaire_principal.bp::text, petitionnaire_principal.code_postal::text, petitionnaire_principal.localite::text, petitionnaire_principal.cedex::text, petitionnaire_principal.pays::text) as adresse_petitionnaire_principal_sdl,&DB_PREFIXEadresse(petitionnaire_principal.numero::text, petitionnaire_principal.voie::text, petitionnaire_principal.complement::text, petitionnaire_principal.lieu_dit::text, petitionnaire_principal.bp::text, petitionnaire_principal.code_postal::text, petitionnaire_principal.localite::text, petitionnaire_principal.cedex::text, petitionnaire_principal.pays::text, '' ''::text) as adresse_petitionnaire_principal,
    petitionnaire_principal.voie as voie_petitionnaire_principal,
    petitionnaire_principal.complement as complement_petitionnaire_principal,
    petitionnaire_principal.lieu_dit as lieu_dit_petitionnaire_principal,
    CASE 
        WHEN petitionnaire_principal.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_principal.bp)
    END as bp_petitionnaire_principal,
    petitionnaire_principal.code_postal as code_postal_petitionnaire_principal,
    petitionnaire_principal.localite as localite_petitionnaire_principal,
    CASE 
        WHEN petitionnaire_principal.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_principal.cedex)
    END as cedex_petitionnaire_principal,
    petitionnaire_principal.pays as pays_petitionnaire_principal,

    --Coordonnées du pétitionnaire 1
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_1_civilite.libelle, petitionnaire_1.particulier_nom, petitionnaire_1.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_1.personne_morale_raison_sociale, petitionnaire_1.personne_morale_denomination, ''représenté(e) par'', petitionnaire_1_civilite.libelle, petitionnaire_1.personne_morale_nom, petitionnaire_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_1.personne_morale_raison_sociale, '' '', petitionnaire_1.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier'' OR petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_nom
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL
                THEN petitionnaire_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_1_civilite.libelle, petitionnaire_1.particulier_nom, petitionnaire_1.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_1,
    CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_1.personne_morale_raison_sociale, petitionnaire_1.personne_morale_denomination, ''représenté(e) par'', petitionnaire_1_civilite.libelle, petitionnaire_1.personne_morale_nom, petitionnaire_1.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_1.personne_morale_raison_sociale, '' '', petitionnaire_1.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL
        THEN petitionnaire_1.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_1.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_1_civilite.libelle, petitionnaire_1.particulier_nom, petitionnaire_1.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_1.personne_morale_raison_sociale, petitionnaire_1.personne_morale_denomination, ''représenté(e) par'', petitionnaire_1_civilite.libelle, petitionnaire_1.personne_morale_nom, petitionnaire_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_1.personne_morale_raison_sociale, '' '', petitionnaire_1.personne_morale_denomination))
            END
    END as nom_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier'' OR petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_1_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_nom
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL
                THEN petitionnaire_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_1.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_1.personne_morale_denomination
    END as denomination_petitionnaire_1,
    petitionnaire_1.numero as numero_petitionnaire_1,&DB_PREFIXEadresse(petitionnaire_1.numero::text, petitionnaire_1.voie::text, petitionnaire_1.complement::text, petitionnaire_1.lieu_dit::text, petitionnaire_1.bp::text, petitionnaire_1.code_postal::text, petitionnaire_1.localite::text, petitionnaire_1.cedex::text, petitionnaire_1.pays::text) as adresse_petitionnaire_1_sdl,&DB_PREFIXEadresse(petitionnaire_1.numero::text, petitionnaire_1.voie::text, petitionnaire_1.complement::text, petitionnaire_1.lieu_dit::text, petitionnaire_1.bp::text, petitionnaire_1.code_postal::text, petitionnaire_1.localite::text, petitionnaire_1.cedex::text, petitionnaire_1.pays::text, '' ''::text) as adresse_petitionnaire_1,
    petitionnaire_1.voie as voie_petitionnaire_1,
    petitionnaire_1.complement as complement_petitionnaire_1,
    petitionnaire_1.lieu_dit as lieu_dit_petitionnaire_1,
    CASE 
        WHEN petitionnaire_1.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_1.bp)
    END as bp_petitionnaire_1,
    petitionnaire_1.code_postal as code_postal_petitionnaire_1,
    petitionnaire_1.localite as localite_petitionnaire_1,
    CASE 
        WHEN petitionnaire_1.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_1.cedex)
    END as cedex_petitionnaire_1,
    petitionnaire_1.pays as pays_petitionnaire_1,

    --Coordonnées du pétitionnaire 2
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_2_civilite.libelle, petitionnaire_2.particulier_nom, petitionnaire_2.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_2.personne_morale_raison_sociale, petitionnaire_2.personne_morale_denomination, ''représenté(e) par'', petitionnaire_2_civilite.libelle, petitionnaire_2.personne_morale_nom, petitionnaire_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_2.personne_morale_raison_sociale, '' '', petitionnaire_2.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier'' OR petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_nom
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL
                THEN petitionnaire_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_2_civilite.libelle, petitionnaire_2.particulier_nom, petitionnaire_2.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_2,
    CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_2.personne_morale_raison_sociale, petitionnaire_2.personne_morale_denomination, ''représenté(e) par'', petitionnaire_2_civilite.libelle, petitionnaire_2.personne_morale_nom, petitionnaire_2.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_2.personne_morale_raison_sociale, '' '', petitionnaire_2.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL
        THEN petitionnaire_2.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_2.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_2_civilite.libelle, petitionnaire_2.particulier_nom, petitionnaire_2.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_2.personne_morale_raison_sociale, petitionnaire_2.personne_morale_denomination, ''représenté(e) par'', petitionnaire_2_civilite.libelle, petitionnaire_2.personne_morale_nom, petitionnaire_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_2.personne_morale_raison_sociale, '' '', petitionnaire_2.personne_morale_denomination))
            END
    END as nom_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier'' OR petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_2_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_nom
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL
                THEN petitionnaire_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_2.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_2.personne_morale_denomination
    END as denomination_petitionnaire_2,
    petitionnaire_2.numero as numero_petitionnaire_2,&DB_PREFIXEadresse(petitionnaire_2.numero::text, petitionnaire_2.voie::text, petitionnaire_2.complement::text, petitionnaire_2.lieu_dit::text, petitionnaire_2.bp::text, petitionnaire_2.code_postal::text, petitionnaire_2.localite::text, petitionnaire_2.cedex::text, petitionnaire_2.pays::text) as adresse_petitionnaire_2_sdl,&DB_PREFIXEadresse(petitionnaire_2.numero::text, petitionnaire_2.voie::text, petitionnaire_2.complement::text, petitionnaire_2.lieu_dit::text, petitionnaire_2.bp::text, petitionnaire_2.code_postal::text, petitionnaire_2.localite::text, petitionnaire_2.cedex::text, petitionnaire_2.pays::text, '' ''::text) as adresse_petitionnaire_2,
    petitionnaire_2.voie as voie_petitionnaire_2,
    petitionnaire_2.complement as complement_petitionnaire_2,
    petitionnaire_2.lieu_dit as lieu_dit_petitionnaire_2,
    CASE 
        WHEN petitionnaire_2.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_2.bp)
    END as bp_petitionnaire_2,
    petitionnaire_2.code_postal as code_postal_petitionnaire_2,
    petitionnaire_2.localite as localite_petitionnaire_2,
    CASE 
        WHEN petitionnaire_2.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_2.cedex)
    END as cedex_petitionnaire_2,
    petitionnaire_2.pays as pays_petitionnaire_2,

    --Coordonnées du pétitionnaire 3
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_3_civilite.libelle, petitionnaire_3.particulier_nom, petitionnaire_3.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_3.personne_morale_raison_sociale, petitionnaire_3.personne_morale_denomination, ''représenté(e) par'', petitionnaire_3_civilite.libelle, petitionnaire_3.personne_morale_nom, petitionnaire_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_3.personne_morale_raison_sociale, '' '', petitionnaire_3.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier'' OR petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_nom
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL
                THEN petitionnaire_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_3_civilite.libelle, petitionnaire_3.particulier_nom, petitionnaire_3.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_3,
    CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_3.personne_morale_raison_sociale, petitionnaire_3.personne_morale_denomination, ''représenté(e) par'', petitionnaire_3_civilite.libelle, petitionnaire_3.personne_morale_nom, petitionnaire_3.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_3.personne_morale_raison_sociale, '' '', petitionnaire_3.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL
        THEN petitionnaire_3.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_3.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_3_civilite.libelle, petitionnaire_3.particulier_nom, petitionnaire_3.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_3.personne_morale_raison_sociale, petitionnaire_3.personne_morale_denomination, ''représenté(e) par'', petitionnaire_3_civilite.libelle, petitionnaire_3.personne_morale_nom, petitionnaire_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_3.personne_morale_raison_sociale, '' '', petitionnaire_3.personne_morale_denomination))
            END
    END as nom_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier'' OR petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_3_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_nom
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL
                THEN petitionnaire_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_3.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_3.personne_morale_denomination
    END as denomination_petitionnaire_3,
    petitionnaire_3.numero as numero_petitionnaire_3,&DB_PREFIXEadresse(petitionnaire_3.numero::text, petitionnaire_3.voie::text, petitionnaire_3.complement::text, petitionnaire_3.lieu_dit::text, petitionnaire_3.bp::text, petitionnaire_3.code_postal::text, petitionnaire_3.localite::text, petitionnaire_3.cedex::text, petitionnaire_3.pays::text) as adresse_petitionnaire_3_sdl,&DB_PREFIXEadresse(petitionnaire_3.numero::text, petitionnaire_3.voie::text, petitionnaire_3.complement::text, petitionnaire_3.lieu_dit::text, petitionnaire_3.bp::text, petitionnaire_3.code_postal::text, petitionnaire_3.localite::text, petitionnaire_3.cedex::text, petitionnaire_3.pays::text, '' ''::text) as adresse_petitionnaire_3,
    petitionnaire_3.voie as voie_petitionnaire_3,
    petitionnaire_3.complement as complement_petitionnaire_3,
    petitionnaire_3.lieu_dit as lieu_dit_petitionnaire_3,
    CASE 
        WHEN petitionnaire_3.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_3.bp)
    END as bp_petitionnaire_3,
    petitionnaire_3.code_postal as code_postal_petitionnaire_3,
    petitionnaire_3.localite as localite_petitionnaire_3,
    CASE 
        WHEN petitionnaire_3.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_3.cedex)
    END as cedex_petitionnaire_3,
    petitionnaire_3.pays as pays_petitionnaire_3,

    --Coordonnées du pétitionnaire 4
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_4_civilite.libelle, petitionnaire_4.particulier_nom, petitionnaire_4.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_4.personne_morale_raison_sociale, petitionnaire_4.personne_morale_denomination, ''représenté(e) par'', petitionnaire_4_civilite.libelle, petitionnaire_4.personne_morale_nom, petitionnaire_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_4.personne_morale_raison_sociale, '' '', petitionnaire_4.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier'' OR petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_nom
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL
                THEN petitionnaire_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_4_civilite.libelle, petitionnaire_4.particulier_nom, petitionnaire_4.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_4,
    CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_4.personne_morale_raison_sociale, petitionnaire_4.personne_morale_denomination, ''représenté(e) par'', petitionnaire_4_civilite.libelle, petitionnaire_4.personne_morale_nom, petitionnaire_4.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_4.personne_morale_raison_sociale, '' '', petitionnaire_4.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL
        THEN petitionnaire_4.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_4.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_4_civilite.libelle, petitionnaire_4.particulier_nom, petitionnaire_4.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_4.personne_morale_raison_sociale, petitionnaire_4.personne_morale_denomination, ''représenté(e) par'', petitionnaire_4_civilite.libelle, petitionnaire_4.personne_morale_nom, petitionnaire_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_4.personne_morale_raison_sociale, '' '', petitionnaire_4.personne_morale_denomination))
            END
    END as nom_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier'' OR petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_4_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_nom
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL
                THEN petitionnaire_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_4.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_4.personne_morale_denomination
    END as denomination_petitionnaire_4,
    petitionnaire_4.numero as numero_petitionnaire_4,&DB_PREFIXEadresse(petitionnaire_4.numero::text, petitionnaire_4.voie::text, petitionnaire_4.complement::text, petitionnaire_4.lieu_dit::text, petitionnaire_4.bp::text, petitionnaire_4.code_postal::text, petitionnaire_4.localite::text, petitionnaire_4.cedex::text, petitionnaire_4.pays::text) as adresse_petitionnaire_4_sdl,&DB_PREFIXEadresse(petitionnaire_4.numero::text, petitionnaire_4.voie::text, petitionnaire_4.complement::text, petitionnaire_4.lieu_dit::text, petitionnaire_4.bp::text, petitionnaire_4.code_postal::text, petitionnaire_4.localite::text, petitionnaire_4.cedex::text, petitionnaire_4.pays::text, '' ''::text) as adresse_petitionnaire_4,
    petitionnaire_4.voie as voie_petitionnaire_4,
    petitionnaire_4.complement as complement_petitionnaire_4,
    petitionnaire_4.lieu_dit as lieu_dit_petitionnaire_4,
    CASE 
        WHEN petitionnaire_4.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_4.bp)
    END as bp_petitionnaire_4,
    petitionnaire_4.code_postal as code_postal_petitionnaire_4,
    petitionnaire_4.localite as localite_petitionnaire_4,
    CASE 
        WHEN petitionnaire_4.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_4.cedex)
    END as cedex_petitionnaire_4,
    petitionnaire_4.pays as pays_petitionnaire_4,

    --Coordonnées du pétitionnaire 5
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_5_civilite.libelle, petitionnaire_5.particulier_nom, petitionnaire_5.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_5.personne_morale_raison_sociale, petitionnaire_5.personne_morale_denomination, ''représenté(e) par'', petitionnaire_5_civilite.libelle, petitionnaire_5.personne_morale_nom, petitionnaire_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_5.personne_morale_raison_sociale, '' '', petitionnaire_5.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier'' OR petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_nom
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL
                THEN petitionnaire_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_5_civilite.libelle, petitionnaire_5.particulier_nom, petitionnaire_5.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_5,
    CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_5.personne_morale_raison_sociale, petitionnaire_5.personne_morale_denomination, ''représenté(e) par'', petitionnaire_5_civilite.libelle, petitionnaire_5.personne_morale_nom, petitionnaire_5.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_5.personne_morale_raison_sociale, '' '', petitionnaire_5.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL
        THEN petitionnaire_5.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_5.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_5_civilite.libelle, petitionnaire_5.particulier_nom, petitionnaire_5.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_5.personne_morale_raison_sociale, petitionnaire_5.personne_morale_denomination, ''représenté(e) par'', petitionnaire_5_civilite.libelle, petitionnaire_5.personne_morale_nom, petitionnaire_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_5.personne_morale_raison_sociale, '' '', petitionnaire_5.personne_morale_denomination))
            END
    END as nom_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier'' OR petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_5_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_nom
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL
                THEN petitionnaire_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_5.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_5.personne_morale_denomination
    END as denomination_petitionnaire_5,
    petitionnaire_5.numero as numero_petitionnaire_5,&DB_PREFIXEadresse(petitionnaire_5.numero::text, petitionnaire_5.voie::text, petitionnaire_5.complement::text, petitionnaire_5.lieu_dit::text, petitionnaire_5.bp::text, petitionnaire_5.code_postal::text, petitionnaire_5.localite::text, petitionnaire_5.cedex::text, petitionnaire_5.pays::text) as adresse_petitionnaire_5_sdl,&DB_PREFIXEadresse(petitionnaire_5.numero::text, petitionnaire_5.voie::text, petitionnaire_5.complement::text, petitionnaire_5.lieu_dit::text, petitionnaire_5.bp::text, petitionnaire_5.code_postal::text, petitionnaire_5.localite::text, petitionnaire_5.cedex::text, petitionnaire_5.pays::text, '' ''::text) as adresse_petitionnaire_5,
    petitionnaire_5.voie as voie_petitionnaire_5,
    petitionnaire_5.complement as complement_petitionnaire_5,
    petitionnaire_5.lieu_dit as lieu_dit_petitionnaire_5,
    CASE 
        WHEN petitionnaire_5.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_5.bp)
    END as bp_petitionnaire_5,
    petitionnaire_5.code_postal as code_postal_petitionnaire_5,
    petitionnaire_5.localite as localite_petitionnaire_5,
    CASE 
        WHEN petitionnaire_5.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_5.cedex)
    END as cedex_petitionnaire_5,
    petitionnaire_5.pays as pays_petitionnaire_5,
    
    --Nom de l''instructeur
    instructeur.nom as nom_instructeur, 

    --Noms des signataires
    division.chef as chef_division,
    direction.chef as chef_direction,
    direction.libelle as libelle_direction,
    direction.description as description_direction,

    --Données techniques
    donnees_techniques.co_projet_desc as co_projet_desc_donnees_techniques,
    donnees_techniques.am_projet_desc as am_projet_desc_donnees_techniques,
    donnees_techniques.dm_projet_desc as dm_projet_desc_donnees_techniques,
    donnees_techniques.ope_proj_desc as ope_proj_desc_donnees_techniques,
    TRIM(CONCAT(
        donnees_techniques.co_projet_desc, '' '',
        donnees_techniques.am_projet_desc, '' '',
        donnees_techniques.dm_projet_desc, '' '',
        donnees_techniques.ope_proj_desc
        )) as projet_desc_donnees_techniques,
    donnees_techniques.am_lot_max_nb as am_lot_max_nb_donnees_techniques,
    donnees_techniques.am_lot_max_shon as am_lot_max_shon_donnees_techniques,
    -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        THEN donnees_techniques.su2_cstr_shon_tot
        ELSE donnees_techniques.su_cstr_shon_tot
    END as su_cstr_shon_tot_donnees_techniques,
    -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        THEN donnees_techniques.su2_demo_shon_tot
        ELSE donnees_techniques.su_demo_shon_tot
    END as su_demo_shon_tot_donnees_techniques,
    -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        THEN
            REGEXP_REPLACE(CONCAT(
                CASE WHEN donnees_techniques.su2_cstr_shon1 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Exploitation agricole - '', donnees_techniques.su2_cstr_shon1, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon2 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Exploitation forestière - '', donnees_techniques.su2_cstr_shon2, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon3 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Logement - '', donnees_techniques.su2_cstr_shon3, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon4 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Hébergement - '', donnees_techniques.su2_cstr_shon4, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon5 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Artisanat et commerce de détail - '', donnees_techniques.su2_cstr_shon5, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon6 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Restauration - '', donnees_techniques.su2_cstr_shon6, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon7 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Commerce de gros - '', donnees_techniques.su2_cstr_shon7, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon8 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Activités de services où s''''effectue l''''accueil d''''une clientèle - '', donnees_techniques.su2_cstr_shon8, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon9 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Hébergement hôtelier et touristique - '', donnees_techniques.su2_cstr_shon9, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon10 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Cinéma - '', donnees_techniques.su2_cstr_shon10, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon11 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Locaux et bureaux accueillant du public des administrations publiques et assimilés - '', donnees_techniques.su2_cstr_shon11, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon12 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Locaux techniques et industriels des administrations publiques et assimilés - '', donnees_techniques.su2_cstr_shon12, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon13 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Établissements d''''enseignement, de santé et d''''action sociale - '', donnees_techniques.su2_cstr_shon13, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon14 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Salles d''''art et de spectacles - '', donnees_techniques.su2_cstr_shon14, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon15 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Équipements sportifs - '', donnees_techniques.su2_cstr_shon15, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon16 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Autres équipements recevant du public - '', donnees_techniques.su2_cstr_shon16, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon17 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Industrie - '', donnees_techniques.su2_cstr_shon17, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon18 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Entrepôt - '', donnees_techniques.su2_cstr_shon18, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon19 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Bureau - '', donnees_techniques.su2_cstr_shon19, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon20 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Centre de congrès et d''''exposition - '', donnees_techniques.su2_cstr_shon20, '' m²'')
                END
            ), '' / $'', '''')
        ELSE
            REGEXP_REPLACE(CONCAT(
                CASE
                    WHEN donnees_techniques.su_cstr_shon1 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Habitation - '', donnees_techniques.su_cstr_shon1, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon2 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Hébergement hôtelier - '', donnees_techniques.su_cstr_shon2, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon3 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Bureaux - '', donnees_techniques.su_cstr_shon3, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon4 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Commerce - '', donnees_techniques.su_cstr_shon4, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon5 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Artisanat - '', donnees_techniques.su_cstr_shon5, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon6 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Industrie - '', donnees_techniques.su_cstr_shon6, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon7 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Exploitation agricole ou forestière - '', donnees_techniques.su_cstr_shon7, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon8 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Entrepôt - '', donnees_techniques.su_cstr_shon8, '' m² / '')
                END, 
                CASE
                    WHEN donnees_techniques.su_cstr_shon9 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Service public ou d''''intérêt collectif - '', donnees_techniques.su_cstr_shon9, '' m²'')
                END
            ), '' / $'', '''')
    END as tab_surface_donnees_techniques,
    donnees_techniques.co_tot_log_nb as co_tot_log_nb_donnees_techniques,
    donnees_techniques.co_statio_place_nb as co_statio_place_nb_donnees_techniques,
    -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        THEN donnees_techniques.su2_tot_shon_tot
        ELSE donnees_techniques.su_tot_shon_tot
    END as su_tot_shon_tot_donnees_techniques

FROM

    &DB_PREFIXErapport_instruction 
    LEFT JOIN &DB_PREFIXEdossier 
        ON dossier.dossier=rapport_instruction.dossier_instruction 
    LEFT JOIN &DB_PREFIXEavis_decision 
        ON dossier.avis_decision = avis_decision.avis_decision
    LEFT JOIN &DB_PREFIXEetat
        ON dossier.etat = etat.etat
    LEFT JOIN &DB_PREFIXEdonnees_techniques
        ON dossier.dossier = donnees_techniques.dossier_instruction
    LEFT JOIN &DB_PREFIXEdivision
        ON dossier.division = division.division
    LEFT JOIN &DB_PREFIXEdirection
        ON division.direction = direction.direction
    LEFT JOIN &DB_PREFIXEinstructeur 
        ON instructeur.instructeur=dossier.instructeur 
    LEFT JOIN &DB_PREFIXElien_dossier_demandeur 
        ON lien_dossier_demandeur.dossier=dossier.dossier 
    LEFT JOIN &DB_PREFIXEdemandeur 
        ON demandeur.demandeur=lien_dossier_demandeur.demandeur
    LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_principal
        ON lien_dossier_demandeur.demandeur = petitionnaire_principal.demandeur AND lien_dossier_demandeur.petitionnaire_principal IS TRUE
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_principal_civilite
        ON petitionnaire_principal.personne_morale_civilite=petitionnaire_principal_civilite.civilite OR petitionnaire_principal.particulier_civilite=petitionnaire_principal_civilite.civilite
    LEFT JOIN (
        SELECT lien_dossier_demandeur.dossier, array_agg(lien_dossier_demandeur.demandeur ORDER BY lien_dossier_demandeur.demandeur) AS petitionnaire_autre
        FROM &DB_PREFIXElien_dossier_demandeur
        LEFT JOIN &DB_PREFIXEdossier
            ON lien_dossier_demandeur.dossier=dossier.dossier 
            AND lien_dossier_demandeur.petitionnaire_principal IS FALSE
        LEFT JOIN &DB_PREFIXErapport_instruction
            ON rapport_instruction.dossier_instruction = dossier.dossier
        WHERE rapport_instruction.rapport_instruction = &idx
        GROUP BY lien_dossier_demandeur.dossier
    ) as sub_petitionnaire_autre
    ON rapport_instruction.dossier_instruction = sub_petitionnaire_autre.dossier
    LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_1
    ON
        petitionnaire_1.demandeur = petitionnaire_autre[1] AND petitionnaire_1.type_demandeur != ''delegataire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_1_civilite
    ON
        petitionnaire_1.particulier_civilite = petitionnaire_1_civilite.civilite OR petitionnaire_1.personne_morale_civilite = petitionnaire_1_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_2
    ON
        petitionnaire_2.demandeur = petitionnaire_autre[2] AND petitionnaire_2.type_demandeur != ''delegataire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_2_civilite
    ON
        petitionnaire_2.particulier_civilite = petitionnaire_2_civilite.civilite OR petitionnaire_2.personne_morale_civilite = petitionnaire_2_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_3
    ON
        petitionnaire_3.demandeur = petitionnaire_autre[3] AND petitionnaire_3.type_demandeur != ''delegataire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_3_civilite
    ON
        petitionnaire_3.particulier_civilite = petitionnaire_3_civilite.civilite OR petitionnaire_3.personne_morale_civilite = petitionnaire_3_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_4
    ON
        petitionnaire_4.demandeur = petitionnaire_autre[4] AND petitionnaire_4.type_demandeur != ''delegataire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_4_civilite
    ON
        petitionnaire_4.particulier_civilite = petitionnaire_4_civilite.civilite OR petitionnaire_4.personne_morale_civilite = petitionnaire_4_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_5
    ON
        petitionnaire_5.demandeur = petitionnaire_autre[5] AND petitionnaire_5.type_demandeur != ''delegataire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_5_civilite
    ON
        petitionnaire_5.particulier_civilite = petitionnaire_5_civilite.civilite OR petitionnaire_5.personne_morale_civilite = petitionnaire_5_civilite.civilite
    LEFT JOIN &DB_PREFIXEcivilite 
        ON demandeur.personne_morale_civilite=civilite.civilite OR demandeur.particulier_civilite=civilite.civilite 
    LEFT JOIN &DB_PREFIXEdossier_instruction_type 
        ON dossier.dossier_instruction_type=dossier_instruction_type.dossier_instruction_type 
    LEFT JOIN &DB_PREFIXEdossier_autorisation_type_detaille 
        ON dossier_instruction_type.dossier_autorisation_type_detaille=dossier_autorisation_type_detaille.dossier_autorisation_type_detaille 
    LEFT JOIN
        &DB_PREFIXEtaxe_amenagement
        ON
            dossier.om_collectivite = taxe_amenagement.om_collectivite
WHERE rapport_instruction = &idx AND lien_dossier_demandeur.petitionnaire_principal IS TRUE
', '--Données générales du rapport d''instruction
[dossier_instruction_rapport_instruction]    [analyse_reglementaire_rapport_instruction]
[description_projet_rapport_instruction]    [proposition_decision_rapport_instruction]
[complement_rapport_instruction]

--Données générales du dossier d''instruction
[libelle_dossier]    [code_barres_dossier]    [etat_dossier]
[delai_dossier]    [libelle_datd]
[libelle_avis_decision]

--Adresse du terrain dossier d''instruction
[terrain_adresse_voie_numero_dossier][adresse_terrain_sdl][adresse_terrain]     [terrain_adresse_voie_dossier]
[terrain_adresse_lieu_dit_dossier]
[terrain_adresse_code_postal_dossier]    [terrain_adresse_localite_dossier]    [terrain_adresse_bp_dossier]
[terrain_adresse_cedex_dossier]    [terrain_superficie_dossier]
[terrain_references_cadastrales_dossier]

--Taxe d''aménagement du dossier d''instruction
[tax_taux_secteur](à utiliser si l''option de simulation des taxes est activée et que le taxe du secteur est définit sur le dossier)
[tax_taux_secteur_1](jusqu''à 20)  [tax_numero_secteur]    [tax_montant_part_communale]    [tax_montant_part_departementale]
[tax_montant_part_regionale]    [tax_montant_total] [tax_secteur]   [tax_en_ile_de_france]
[tax_val_forf_surf_cstr]    [tax_val_forf_empl_tente_carav_rml] [tax_val_forf_empl_hll] [tax_val_forf_surf_piscine]
[tax_val_forf_nb_eolienne]  [tax_val_forf_surf_pann_photo]  [tax_val_forf_nb_parking_ext]   [tax_tx_depart] [tax_tx_reg]
[tax_tx_exo_facul_1_reg] [tax_tx_exo_facul_2_reg]   [tax_tx_exo_facul_3_reg]    [tax_tx_exo_facul_4_reg]    [tax_tx_exo_facul_5_reg]
[tax_tx_exo_facul_6_reg] [tax_tx_exo_facul_7_reg] [tax_tx_exo_facul_8_reg] [tax_tx_exo_facul_9_reg] [tax_tx_exo_facul_1_depart]
[tax_tx_exo_facul_2_depart] [tax_tx_exo_facul_3_depart] [tax_tx_exo_facul_4_depart] [tax_tx_exo_facul_5_depart]
[tax_tx_exo_facul_6_depart] [tax_tx_exo_facul_7_depart] [tax_tx_exo_facul_8_depart] [tax_tx_exo_facul_9_depart]
[tax_tx_exo_facul_1_comm]   [tax_tx_exo_facul_2_comm]   [tax_tx_exo_facul_3_comm] [tax_tx_exo_facul_4_comm]
[tax_tx_exo_facul_5_comm] [tax_tx_exo_facul_6_comm] [tax_tx_exo_facul_7_comm] [tax_tx_exo_facul_8_comm] [tax_tx_exo_facul_9_comm]
[tax_tx_rap]

--Coordonnées du demandeur (déprécié, à ne plus utiliser)
[code_civilite]
[particulier_nom_demandeur]    [particulier_prenom_demandeur]    
[personne_morale_denomination_demandeur]    [personne_morale_raison_sociale_demandeur]    [personne_morale_siret_demandeur]
[personne_morale_nom_demandeur]    [personne_morale_prenom_demandeur]
[numero_demandeur]    [voie_demandeur]
[complement_demandeur]    [lieu_dit_demandeur]
[code_postal_demandeur]    [localite_demandeur]   [bp_demandeur]    [cedex_demandeur]

--Coordonnées du pétitionnaire principal
[nom_qualite_part_petitionnaire_principal] [prenom_qualite_part_petitionnaire_principal]
[civilite_qualite_part_petitionnaire_principal] [nom_complet_qualite_part_petitionnaire_principal]
[nom_qualite_pm_petitionnaire_principal] [prenom_qualite_pm_petitionnaire_principal]
[civilite_qualite_pm_petitionnaire_principal] [nom_complet_qualite_pm_petitionnaire_principal]
[nom_qualite_part_ou_pm_petitionnaire_principal] [prenom_qualite_part_ou_pm_petitionnaire_principal]
[civilite_qualite_part_ou_pm_petitionnaire_principal] [nom_complet_qualite_part_ou_pm_petitionnaire_principal]
[nom_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[civilite_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[nom_particulier_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[prenom_particulier_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[raison_sociale_petitionnaire_principal]
[denomination_petitionnaire_principal]
[numero_petitionnaire_principal][adresse_petitionnaire_principal_sdl][adresse_petitionnaire_principal]    [voie_petitionnaire_principal]    [complement_petitionnaire_principal]
[lieu_dit_petitionnaire_principal]    [bp_petitionnaire_principal]
[code_postal_petitionnaire_principal]    [localite_petitionnaire_principal]    [cedex_petitionnaire_principal]
[pays_petitionnaire_principal]

--Coordonnées des autres pétitionnaires
[nom_qualite_part_petitionnaire_1](jusqu''à 5)    [prenom_qualite_part_petitionnaire_1](jusqu''à 5)
[civilite_qualite_part_petitionnaire_1](jusqu''à 5)    [nom_complet_qualite_part_petitionnaire_1](jusqu''à 5)
[nom_qualite_pm_petitionnaire_1](jusqu''à 5)    [prenom_qualite_pm_petitionnaire_1](jusqu''à 5)
[civilite_qualite_pm_petitionnaire_1](jusqu''à 5)    [nom_complet_qualite_pm_petitionnaire_1](jusqu''à 5)
[nom_qualite_part_ou_pm_petitionnaire_1](jusqu''à 5)    [prenom_qualite_part_ou_pm_petitionnaire_1](jusqu''à 5)
[civilite_qualite_part_ou_pm_petitionnaire_1](jusqu''à 5)    [nom_complet_qualite_part_ou_pm_petitionnaire_1](jusqu''à 5)
[nom_petitionnaire_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[civilite_petitionnaire_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[nom_particulier_petitionnaire_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[prenom_particulier_petitionnaire_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[raison_sociale_petitionnaire_1](jusqu''à 5)
[denomination_petitionnaire_1](jusqu''à 5)
[numero_petitionnaire_1](jusqu''à 5)[adresse_petitionnaire_1_sdl](jusqu''à 5)[adresse_petitionnaire_1](jusqu''à 5)    [voie_petitionnaire_1](jusqu''à 5)    
[complement_petitionnaire_1](jusqu''à 5)
[lieu_dit_petitionnaire_1](jusqu''à 5)    [bp_petitionnaire_1](jusqu''à 5)
[code_postal_petitionnaire_1](jusqu''à 5)    [localite_petitionnaire_1](jusqu''à 5)    
[cedex_petitionnaire_1](jusqu''à 5)
[pays_petitionnaire_1](jusqu''à 5)

--Nom de l''instructeur
[nom_instructeur]

--Noms des signataires
[chef_division]
[chef_direction]
[libelle_direction]
[description_direction]

--Données techniques
[co_projet_desc_donnees_techniques]    [am_projet_desc_donnees_techniques]
[dm_projet_desc_donnees_techniques]    [ope_proj_desc_donnees_techniques]
[projet_desc_donnees_techniques]
[am_lot_max_nb_donnees_techniques]    [am_lot_max_shon_donnees_techniques]    
[co_tot_log_nb_donnees_techniques]     [co_statio_place_nb_donnees_techniques]
-- Les données techniques suivantes concernent le tableau des surfaces
-- Elles récupèrent les valeurs du tableau composé des sous-destinations si au
-- moins une valeur de celui-ci est saisie
[su_cstr_shon_tot_donnees_techniques]    [su_demo_shon_tot_donnees_techniques]    
[tab_surface_donnees_techniques]
[su_tot_shon_tot_donnees_techniques]
', 'sql', NULL, NULL);
INSERT INTO om_requete (om_requete, code, libelle, description, requete, merge_fields, type, classe, methode) VALUES (27, 'commission', 'Récapitulatif commission', '', 'SELECT
    --Données générales de la commission
    libelle as libelle_commission, 
    to_char(date_commission,''DD/MM/YYYY'') as date_commission, 
    lieu_salle as lieu_salle_commission,
    heure_commission as heure_commission, 
    lieu_adresse_ligne1 as lieu_adresse_ligne1_commission, 
    lieu_adresse_ligne2 as lieu_adresse_ligne2_commission
FROM
    &DB_PREFIXEcommission
WHERE
    commission = &idx', '--Données générales de la commission
[libelle_commission]
[date_commission]
[lieu_salle_commission]
[heure_commission]
[lieu_adresse_ligne1_commission]
[lieu_adresse_ligne2_commission]', 'sql', NULL, NULL);
INSERT INTO om_requete (om_requete, code, libelle, description, requete, merge_fields, type, classe, methode) VALUES (26, 'consultation', 'Récapitulatif consultation', '', '
    SELECT

    --Coordonnées du service
    service.libelle as libelle_service, 
    service.adresse as adresse_service, 
    service.adresse2 as adresse2_service, 
    service.cp as cp_service, 
    service.ville as ville_service,
    service.delai as delai_service,
    CASE WHEN LOWER(service.delai_type) = LOWER(''jour'')
        THEN ''jour(s)''
        ELSE ''mois''
    END as delai_type_service,

    --Données générales du dossier d''instruction
    dossier.dossier_libelle as libelle_dossier,
    dossier.dossier as code_barres_dossier,
    replace(dossier.terrain_references_cadastrales, '';'', '' '') as terrain_references_cadastrales_dossier,
    dossier_autorisation_type_detaille.libelle as libelle_datd, 

    --Adresse du terrain du dossier d''instruction
    dossier.terrain_adresse_voie_numero as terrain_adresse_voie_numero_dossier,&DB_PREFIXEadresse(dossier.terrain_adresse_voie_numero::text, dossier.terrain_adresse_voie::text, ''''::text, dossier.terrain_adresse_lieu_dit::text, dossier.terrain_adresse_bp::text, dossier.terrain_adresse_code_postal::text, dossier.terrain_adresse_localite::text, dossier.terrain_adresse_cedex::text) as adresse_terrain_sdl,&DB_PREFIXEadresse(dossier.terrain_adresse_voie_numero::text, dossier.terrain_adresse_voie::text, ''''::text, dossier.terrain_adresse_lieu_dit::text, dossier.terrain_adresse_bp::text, dossier.terrain_adresse_code_postal::text, dossier.terrain_adresse_localite::text, dossier.terrain_adresse_cedex::text, ''''::text, '' ''::text) as adresse_terrain,
    dossier.terrain_adresse_voie as terrain_adresse_voie_dossier,
    dossier.terrain_adresse_lieu_dit as terrain_adresse_lieu_dit_dossier,
    dossier.terrain_adresse_code_postal as terrain_adresse_code_postal_dossier,
    dossier.terrain_adresse_localite as terrain_adresse_localite_dossier,

    --Taxe d''aménagement du dossier d''instruction
    CASE
        WHEN tax_secteur = 1 THEN taxe_amenagement.tx_comm_secteur_1
        WHEN tax_secteur = 2 THEN taxe_amenagement.tx_comm_secteur_2
        WHEN tax_secteur = 3 THEN taxe_amenagement.tx_comm_secteur_3
        WHEN tax_secteur = 4 THEN taxe_amenagement.tx_comm_secteur_4
        WHEN tax_secteur = 5 THEN taxe_amenagement.tx_comm_secteur_5
        WHEN tax_secteur = 6 THEN taxe_amenagement.tx_comm_secteur_6
        WHEN tax_secteur = 7 THEN taxe_amenagement.tx_comm_secteur_7
        WHEN tax_secteur = 8 THEN taxe_amenagement.tx_comm_secteur_8
        WHEN tax_secteur = 9 THEN taxe_amenagement.tx_comm_secteur_9
        WHEN tax_secteur = 10 THEN taxe_amenagement.tx_comm_secteur_10
        WHEN tax_secteur = 11 THEN taxe_amenagement.tx_comm_secteur_11
        WHEN tax_secteur = 12 THEN taxe_amenagement.tx_comm_secteur_12
        WHEN tax_secteur = 13 THEN taxe_amenagement.tx_comm_secteur_13
        WHEN tax_secteur = 14 THEN taxe_amenagement.tx_comm_secteur_14
        WHEN tax_secteur = 15 THEN taxe_amenagement.tx_comm_secteur_15
        WHEN tax_secteur = 16 THEN taxe_amenagement.tx_comm_secteur_16
        WHEN tax_secteur = 17 THEN taxe_amenagement.tx_comm_secteur_17
        WHEN tax_secteur = 18 THEN taxe_amenagement.tx_comm_secteur_18
        WHEN tax_secteur = 19 THEN taxe_amenagement.tx_comm_secteur_19
        WHEN tax_secteur = 20 THEN taxe_amenagement.tx_comm_secteur_20
    END as tax_taux_secteur,

    taxe_amenagement.tx_comm_secteur_1 as tax_taux_secteur_1,
    taxe_amenagement.tx_comm_secteur_2 as tax_taux_secteur_2,
    taxe_amenagement.tx_comm_secteur_3 as tax_taux_secteur_3,
    taxe_amenagement.tx_comm_secteur_4 as tax_taux_secteur_4,
    taxe_amenagement.tx_comm_secteur_5 as tax_taux_secteur_5,
    taxe_amenagement.tx_comm_secteur_6 as tax_taux_secteur_6,
    taxe_amenagement.tx_comm_secteur_7 as tax_taux_secteur_7,
    taxe_amenagement.tx_comm_secteur_8 as tax_taux_secteur_8,
    taxe_amenagement.tx_comm_secteur_9 as tax_taux_secteur_9,
    taxe_amenagement.tx_comm_secteur_10 as tax_taux_secteur_10,
    taxe_amenagement.tx_comm_secteur_11 as tax_taux_secteur_11,
    taxe_amenagement.tx_comm_secteur_12 as tax_taux_secteur_12,
    taxe_amenagement.tx_comm_secteur_13 as tax_taux_secteur_13,
    taxe_amenagement.tx_comm_secteur_14 as tax_taux_secteur_14,
    taxe_amenagement.tx_comm_secteur_15 as tax_taux_secteur_15,
    taxe_amenagement.tx_comm_secteur_16 as tax_taux_secteur_16,
    taxe_amenagement.tx_comm_secteur_17 as tax_taux_secteur_17,
    taxe_amenagement.tx_comm_secteur_18 as tax_taux_secteur_18,
    taxe_amenagement.tx_comm_secteur_19 as tax_taux_secteur_19,
    taxe_amenagement.tx_comm_secteur_20 as tax_taux_secteur_20,

    CASE WHEN taxe_amenagement.en_ile_de_france IS NULL
        OR taxe_amenagement.en_ile_de_france IS FALSE
        THEN ''Non''
        ELSE ''Oui''
    END as tax_en_ile_de_france,
    taxe_amenagement.val_forf_surf_cstr as tax_val_forf_surf_cstr,
    taxe_amenagement.val_forf_empl_tente_carav_rml as tax_val_forf_empl_tente_carav_rml,
    taxe_amenagement.val_forf_empl_hll as tax_val_forf_empl_hll,
    taxe_amenagement.val_forf_surf_piscine as tax_val_forf_surf_piscine,
    taxe_amenagement.val_forf_nb_eolienne as tax_val_forf_nb_eolienne,
    taxe_amenagement.val_forf_surf_pann_photo as tax_val_forf_surf_pann_photo,
    taxe_amenagement.val_forf_nb_parking_ext as tax_val_forf_nb_parking_ext,
    taxe_amenagement.tx_depart  as tax_tx_depart,
    taxe_amenagement.tx_reg as tax_tx_reg,
    taxe_amenagement.tx_exo_facul_1_reg as tax_tx_exo_facul_1_reg,
    taxe_amenagement.tx_exo_facul_2_reg as tax_tx_exo_facul_2_reg,
    taxe_amenagement.tx_exo_facul_3_reg as tax_tx_exo_facul_3_reg,
    taxe_amenagement.tx_exo_facul_4_reg as tax_tx_exo_facul_4_reg,
    taxe_amenagement.tx_exo_facul_5_reg as tax_tx_exo_facul_5_reg,
    taxe_amenagement.tx_exo_facul_6_reg as tax_tx_exo_facul_6_reg,
    taxe_amenagement.tx_exo_facul_7_reg as tax_tx_exo_facul_7_reg,
    taxe_amenagement.tx_exo_facul_8_reg as tax_tx_exo_facul_8_reg,
    taxe_amenagement.tx_exo_facul_9_reg as tax_tx_exo_facul_9_reg,
    taxe_amenagement.tx_exo_facul_1_depart  as tax_tx_exo_facul_1_depart,
    taxe_amenagement.tx_exo_facul_2_depart  as tax_tx_exo_facul_2_depart,
    taxe_amenagement.tx_exo_facul_3_depart  as tax_tx_exo_facul_3_depart,
    taxe_amenagement.tx_exo_facul_4_depart  as tax_tx_exo_facul_4_depart,
    taxe_amenagement.tx_exo_facul_5_depart  as tax_tx_exo_facul_5_depart,
    taxe_amenagement.tx_exo_facul_6_depart  as tax_tx_exo_facul_6_depart,
    taxe_amenagement.tx_exo_facul_7_depart  as tax_tx_exo_facul_7_depart,
    taxe_amenagement.tx_exo_facul_8_depart  as tax_tx_exo_facul_8_depart,
    taxe_amenagement.tx_exo_facul_9_depart  as tax_tx_exo_facul_9_depart,
    taxe_amenagement.tx_exo_facul_1_comm as tax_tx_exo_facul_1_comm,
    taxe_amenagement.tx_exo_facul_2_comm as tax_tx_exo_facul_2_comm,
    taxe_amenagement.tx_exo_facul_3_comm as tax_tx_exo_facul_3_comm,
    taxe_amenagement.tx_exo_facul_4_comm as tax_tx_exo_facul_4_comm,
    taxe_amenagement.tx_exo_facul_5_comm as tax_tx_exo_facul_5_comm,
    taxe_amenagement.tx_exo_facul_6_comm as tax_tx_exo_facul_6_comm,
    taxe_amenagement.tx_exo_facul_7_comm as tax_tx_exo_facul_7_comm,
    taxe_amenagement.tx_exo_facul_8_comm as tax_tx_exo_facul_8_comm,
    taxe_amenagement.tx_exo_facul_9_comm as tax_tx_exo_facul_9_comm,
    taxe_amenagement.tx_rap as tax_tx_rap,

    dossier.tax_mtn_rap as tax_montant_rap,
    CONCAT_WS('' '', ''Secteur'', dossier.tax_secteur) as tax_secteur,
    dossier.tax_secteur as tax_numero_secteur,
    dossier.tax_mtn_part_commu as tax_montant_part_communale,
    dossier.tax_mtn_part_depart as tax_montant_part_departementale,
    dossier.tax_mtn_part_reg as tax_montant_part_regionale,
    dossier.tax_mtn_total as tax_montant_total,

    --Coordonnées de l''instructeur
    instructeur.nom as nom_instructeur,
    instructeur.telephone as tel_instructeur,
    instructeur.telephone as telephone_instructeur,
    instructeur_utilisateur.email as email_instructeur,

    --Coordonnées du demandeur
    civilite.libelle as civilite_demandeur,
    CASE WHEN demandeur.qualite=''particulier''
        THEN TRIM(CONCAT(demandeur.particulier_nom, '' '', demandeur.particulier_prenom))
        ELSE TRIM(CONCAT(demandeur.personne_morale_raison_sociale, '' '', demandeur.personne_morale_denomination))
    END as nom_demandeur,
    CONCAT(demandeur.numero, '' '', demandeur.voie) as adresse_demandeur,
    demandeur.complement as complement_adresse_demandeur,
    demandeur.lieu_dit as lieu_dit_demandeur,
    demandeur.code_postal as code_postal_demandeur,
    demandeur.localite as ville_demandeur,
    demandeur.personne_morale_denomination as societe_demandeur,

    -- Coordonnées du pétitionnaire principal
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier'' OR petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_nom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
        THEN petitionnaire_principal.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
            END
    END as nom_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier'' OR petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_nom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_principal.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_principal.personne_morale_denomination
    END as denomination_petitionnaire_principal,
    petitionnaire_principal.numero as numero_petitionnaire_principal,&DB_PREFIXEadresse(petitionnaire_principal.numero::text, petitionnaire_principal.voie::text, petitionnaire_principal.complement::text, petitionnaire_principal.lieu_dit::text, petitionnaire_principal.bp::text, petitionnaire_principal.code_postal::text, petitionnaire_principal.localite::text, petitionnaire_principal.cedex::text, petitionnaire_principal.pays::text) as adresse_petitionnaire_principal_sdl,&DB_PREFIXEadresse(petitionnaire_principal.numero::text, petitionnaire_principal.voie::text, petitionnaire_principal.complement::text, petitionnaire_principal.lieu_dit::text, petitionnaire_principal.bp::text, petitionnaire_principal.code_postal::text, petitionnaire_principal.localite::text, petitionnaire_principal.cedex::text, petitionnaire_principal.pays::text, '' ''::text) as adresse_petitionnaire_principal,
    petitionnaire_principal.voie as voie_petitionnaire_principal,
    petitionnaire_principal.complement as complement_petitionnaire_principal,
    petitionnaire_principal.lieu_dit as lieu_dit_petitionnaire_principal,
    CASE 
        WHEN petitionnaire_principal.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_principal.bp)
    END as bp_petitionnaire_principal,
    petitionnaire_principal.code_postal as code_postal_petitionnaire_principal,
    petitionnaire_principal.localite as localite_petitionnaire_principal,
    CASE 
        WHEN petitionnaire_principal.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_principal.cedex)
    END as cedex_petitionnaire_principal,
    petitionnaire_principal.pays as pays_petitionnaire_principal,

    --Dates importantes du dossier d''instruction
to_char(dossier.date_depot_mairie, ''DD/MM/YYYY'') as date_depot_mairie,
to_char(dossier.date_affichage, ''DD/MM/YYYY'') as date_affichage,
    to_char(dossier.date_depot,''DD/MM/YYYY'') as date_depot_dossier,
    to_char(dossier.date_complet, ''DD/MM/YYYY'') as date_completude,
    to_char(dossier.date_dernier_depot, ''DD/MM/YYYY'') as date_dernier_depot,
    to_char(dossier.date_rejet,''DD/MM/YYYY'') as date_rejet_dossier,
    CASE WHEN dossier.incomplet_notifie IS TRUE AND dossier.incompletude IS TRUE
        THEN to_char(dossier.date_limite_incompletude ,''DD/MM/YYYY'')
        ELSE to_char(dossier.date_limite ,''DD/MM/YYYY'')
    END as date_limite_dossier,
    to_char(consultation.date_envoi,''DD/MM/YYYY'') as date_envoi_dossier,
    to_char(instruction.date_evenement,''DD/MM/YYYY'') as date_evenement,
    dossier.delai as delai_limite_decision,

    --Code barres de la consultation
    consultation.code_barres as code_barres_consultation,

    --Données générales des données techniques
    donnees_techniques.co_projet_desc as co_projet_desc_donnees_techniques,
    donnees_techniques.am_projet_desc as am_projet_desc_donnees_techniques,
    donnees_techniques.dm_projet_desc as dm_projet_desc_donnees_techniques,
    donnees_techniques.ope_proj_desc as ope_proj_desc_donnees_techniques,
    TRIM(CONCAT(
        donnees_techniques.co_projet_desc, '' '',
        donnees_techniques.am_projet_desc, '' '',
        donnees_techniques.dm_projet_desc, '' '',
        donnees_techniques.ope_proj_desc
        )) as projet_desc_donnees_techniques,
    donnees_techniques.am_lot_max_nb as am_lot_max_nb_donnees_techniques,
    donnees_techniques.am_lot_max_shon as am_lot_max_shon_donnees_techniques,
    -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        THEN donnees_techniques.su2_cstr_shon_tot
        ELSE donnees_techniques.su_cstr_shon_tot
    END as su_cstr_shon_tot_donnees_techniques,
    -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        THEN donnees_techniques.su2_demo_shon_tot
        ELSE donnees_techniques.su_demo_shon_tot
    END as su_demo_shon_tot_donnees_techniques,
    -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        THEN
            REGEXP_REPLACE(CONCAT(
                CASE WHEN donnees_techniques.su2_cstr_shon1 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Exploitation agricole - '', donnees_techniques.su2_cstr_shon1, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon2 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Exploitation forestière - '', donnees_techniques.su2_cstr_shon2, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon3 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Logement - '', donnees_techniques.su2_cstr_shon3, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon4 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Hébergement - '', donnees_techniques.su2_cstr_shon4, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon5 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Artisanat et commerce de détail - '', donnees_techniques.su2_cstr_shon5, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon6 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Restauration - '', donnees_techniques.su2_cstr_shon6, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon7 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Commerce de gros - '', donnees_techniques.su2_cstr_shon7, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon8 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Activités de services où s''''effectue l''''accueil d''''une clientèle - '', donnees_techniques.su2_cstr_shon8, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon9 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Hébergement hôtelier et touristique - '', donnees_techniques.su2_cstr_shon9, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon10 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Cinéma - '', donnees_techniques.su2_cstr_shon10, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon11 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Locaux et bureaux accueillant du public des administrations publiques et assimilés - '', donnees_techniques.su2_cstr_shon11, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon12 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Locaux techniques et industriels des administrations publiques et assimilés - '', donnees_techniques.su2_cstr_shon12, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon13 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Établissements d''''enseignement, de santé et d''''action sociale - '', donnees_techniques.su2_cstr_shon13, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon14 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Salles d''''art et de spectacles - '', donnees_techniques.su2_cstr_shon14, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon15 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Équipements sportifs - '', donnees_techniques.su2_cstr_shon15, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon16 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Autres équipements recevant du public - '', donnees_techniques.su2_cstr_shon16, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon17 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Industrie - '', donnees_techniques.su2_cstr_shon17, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon18 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Entrepôt - '', donnees_techniques.su2_cstr_shon18, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon19 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Bureau - '', donnees_techniques.su2_cstr_shon19, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon20 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Centre de congrès et d''''exposition - '', donnees_techniques.su2_cstr_shon20, '' m²'')
                END
            ), '' / $'', '''')
        ELSE
            REGEXP_REPLACE(CONCAT(
                CASE
                    WHEN donnees_techniques.su_cstr_shon1 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Habitation - '', donnees_techniques.su_cstr_shon1, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon2 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Hébergement hôtelier - '', donnees_techniques.su_cstr_shon2, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon3 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Bureaux - '', donnees_techniques.su_cstr_shon3, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon4 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Commerce - '', donnees_techniques.su_cstr_shon4, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon5 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Artisanat - '', donnees_techniques.su_cstr_shon5, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon6 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Industrie - '', donnees_techniques.su_cstr_shon6, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon7 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Exploitation agricole ou forestière - '', donnees_techniques.su_cstr_shon7, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon8 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Entrepôt - '', donnees_techniques.su_cstr_shon8, '' m² / '')
                END, 
                CASE
                    WHEN donnees_techniques.su_cstr_shon9 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Service public ou d''''intérêt collectif - '', donnees_techniques.su_cstr_shon9, '' m²'')
                END
            ), '' / $'', '''')
    END as tab_surface_donnees_techniques,
    donnees_techniques.co_tot_log_nb as co_tot_log_nb_donnees_techniques,
    donnees_techniques.co_statio_place_nb as co_statio_place_nb_donnees_techniques,
    -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        THEN donnees_techniques.su2_tot_shon_tot
        ELSE donnees_techniques.su_tot_shon_tot
    END as su_tot_shon_tot_donnees_techniques,

    -- Données techniques pour les AT
    CONCAT_WS('', '',
        CASE WHEN donnees_techniques.erp_cstr_neuve IS TRUE THEN ''construction neuve'' END,
        CASE WHEN donnees_techniques.erp_trvx_acc IS TRUE THEN ''travaux de mise en conformité totale aux règles d’accessibilité'' END,
        CASE WHEN donnees_techniques.erp_extension IS TRUE THEN ''extension'' END,
        CASE WHEN donnees_techniques.erp_rehab IS TRUE THEN ''réhabilitation'' END,
        CASE WHEN donnees_techniques.erp_trvx_am IS TRUE THEN ''travaux d’aménagement (remplacement de revêtements, rénovation électrique, création d’une rampe, par exemple)'' END,
        CASE WHEN donnees_techniques.erp_vol_nouv_exist IS TRUE THEN ''création de volumes nouveaux dans des volumes existants (modification du cloisonnement, par exemple)'' END
    ) as at_type_travaux,
    donnees_techniques.erp_public_eff_tot as at_effectif_public_total,
    CONCAT_WS('' - '', erp_categorie.libelle, erp_categorie.description) as at_categorie_etablissement,
    CONCAT_WS('' - '', erp_type.libelle, erp_type.description) as at_type_etablissement,

    -- Données techniques pour les DPC
    donnees_techniques.dpc_type as dpc_type,
    donnees_techniques.dpc_moda_cess_prix as dpc_moda_cess_prix
    
FROM 

    &DB_PREFIXEconsultation 
    LEFT JOIN &DB_PREFIXEservice 
        ON service.service=consultation.service 
    LEFT JOIN &DB_PREFIXEdossier 
        ON dossier.dossier=consultation.dossier 
    LEFT JOIN &DB_PREFIXEdonnees_techniques 
        ON dossier.dossier = donnees_techniques.dossier_instruction
    LEFT JOIN &DB_PREFIXEdossier_autorisation 
        ON dossier.dossier_autorisation = dossier_autorisation.dossier_autorisation 
    LEFT JOIN &DB_PREFIXEinstructeur 
        ON instructeur.instructeur=dossier.instructeur
    LEFT JOIN &DB_PREFIXEom_utilisateur as instructeur_utilisateur
        ON instructeur_utilisateur.om_utilisateur=instructeur.om_utilisateur
    LEFT JOIN &DB_PREFIXEinstruction
        ON dossier.dossier=instruction.dossier 
    LEFT JOIN &DB_PREFIXElien_dossier_demandeur 
        ON lien_dossier_demandeur.dossier=dossier.dossier 
    LEFT JOIN &DB_PREFIXEdemandeur 
        ON demandeur.demandeur=lien_dossier_demandeur.demandeur AND lien_dossier_demandeur.petitionnaire_principal IS TRUE
    LEFT JOIN &DB_PREFIXEcivilite 
        ON demandeur.personne_morale_civilite=civilite.civilite OR demandeur.particulier_civilite=civilite.civilite
    LEFT JOIN &DB_PREFIXEdemandeur as petitionnaire_principal
        ON lien_dossier_demandeur.demandeur = petitionnaire_principal.demandeur AND lien_dossier_demandeur.petitionnaire_principal IS TRUE
    LEFT JOIN &DB_PREFIXEcivilite as petitionnaire_principal_civilite
        ON petitionnaire_principal.personne_morale_civilite=petitionnaire_principal_civilite.civilite OR petitionnaire_principal.particulier_civilite=petitionnaire_principal_civilite.civilite
    LEFT JOIN &DB_PREFIXEdossier_instruction_type 
        ON dossier.dossier_instruction_type=dossier_instruction_type.dossier_instruction_type 
    LEFT JOIN &DB_PREFIXEdossier_autorisation_type_detaille 
        ON dossier_instruction_type.dossier_autorisation_type_detaille=dossier_autorisation_type_detaille.dossier_autorisation_type_detaille
    LEFT JOIN
        &DB_PREFIXEerp_categorie
        ON
            donnees_techniques.erp_class_cat = erp_categorie.erp_categorie
    LEFT JOIN
        &DB_PREFIXEerp_type
        ON
            donnees_techniques.erp_class_type = erp_type.erp_type
    LEFT JOIN
        &DB_PREFIXEtaxe_amenagement
        ON
            dossier.om_collectivite = taxe_amenagement.om_collectivite
WHERE consultation.consultation = &idx AND lien_dossier_demandeur.petitionnaire_principal IS TRUE
', '--Coordonnées du service
[libelle_service] 
[adresse_service] 
[adresse2_service] 
[cp_service]    [ville_service]
[delai_service]
[delai_type_service]

--Données générales du dossier d''instruction
[libelle_dossier]    [code_barres_dossier]
[terrain_references_cadastrales_dossier]
[libelle_datd] 

--Adresse du terrain du dossier d''instruction
[terrain_adresse_voie_numero_dossier][adresse_terrain_sdl][adresse_terrain]    [terrain_adresse_voie_dossier]
[terrain_adresse_lieu_dit_dossier]     [terrain_adresse_code_postal_dossier]
[terrain_adresse_localite_dossier]

--Taxe d''aménagement du dossier d''instruction
[tax_taux_secteur](à utiliser si l''option de simulation des taxes est activée et que le taxe du secteur est définit sur le dossier)
[tax_taux_secteur_1](jusqu''à 20)  [tax_numero_secteur]    [tax_montant_part_communale]    [tax_montant_part_departementale]
[tax_montant_part_regionale]    [tax_montant_total] [tax_secteur]   [tax_en_ile_de_france]
[tax_val_forf_surf_cstr]    [tax_val_forf_empl_tente_carav_rml] [tax_val_forf_empl_hll] [tax_val_forf_surf_piscine]
[tax_val_forf_nb_eolienne]  [tax_val_forf_surf_pann_photo]  [tax_val_forf_nb_parking_ext]   [tax_tx_depart] [tax_tx_reg]
[tax_tx_exo_facul_1_reg] [tax_tx_exo_facul_2_reg]   [tax_tx_exo_facul_3_reg]    [tax_tx_exo_facul_4_reg]    [tax_tx_exo_facul_5_reg]
[tax_tx_exo_facul_6_reg] [tax_tx_exo_facul_7_reg] [tax_tx_exo_facul_8_reg] [tax_tx_exo_facul_9_reg] [tax_tx_exo_facul_1_depart]
[tax_tx_exo_facul_2_depart] [tax_tx_exo_facul_3_depart] [tax_tx_exo_facul_4_depart] [tax_tx_exo_facul_5_depart]
[tax_tx_exo_facul_6_depart] [tax_tx_exo_facul_7_depart] [tax_tx_exo_facul_8_depart] [tax_tx_exo_facul_9_depart]
[tax_tx_exo_facul_1_comm]   [tax_tx_exo_facul_2_comm]   [tax_tx_exo_facul_3_comm] [tax_tx_exo_facul_4_comm]
[tax_tx_exo_facul_5_comm] [tax_tx_exo_facul_6_comm] [tax_tx_exo_facul_7_comm] [tax_tx_exo_facul_8_comm] [tax_tx_exo_facul_9_comm]
[tax_tx_rap]


--Coordonnées de l''instructeur
[nom_instructeur]
[tel_instructeur]
[email_instructeur]

--Coordonnées du demandeur
[civilite_demandeur]    [nom_demandeur]
[adresse_demandeur]
[complement_adresse_demandeur]    [lieu_dit_demandeur]
[code_postal_demandeur]    [ville_demandeur]
[societe_demandeur]

--Coordonnées du pétitionnaire principal
[nom_qualite_part_petitionnaire_principal] [prenom_qualite_part_petitionnaire_principal]
[civilite_qualite_part_petitionnaire_principal] [nom_complet_qualite_part_petitionnaire_principal]
[nom_qualite_pm_petitionnaire_principal] [prenom_qualite_pm_petitionnaire_principal]
[civilite_qualite_pm_petitionnaire_principal] [nom_complet_qualite_pm_petitionnaire_principal]
[nom_qualite_part_ou_pm_petitionnaire_principal] [prenom_qualite_part_ou_pm_petitionnaire_principal]
[civilite_qualite_part_ou_pm_petitionnaire_principal] [nom_complet_qualite_part_ou_pm_petitionnaire_principal]
[nom_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[civilite_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[nom_particulier_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[prenom_particulier_petitionnaire_principal]    (Déprécié], à ne plus utiliser)
[raison_sociale_petitionnaire_principal]
[denomination_petitionnaire_principal]
[numero_petitionnaire_principal][adresse_petitionnaire_principal_sdl][adresse_petitionnaire_principal]    [voie_petitionnaire_principal]    [complement_petitionnaire_principal]
[lieu_dit_petitionnaire_principal]    [bp_petitionnaire_principal]
[code_postal_petitionnaire_principal]    [localite_petitionnaire_principal]    [cedex_petitionnaire_principal]
[pays_petitionnaire_principal]

--Dates importantes du dossier d''instruction[date_depot_mairie]
[date_affichage]
[date_depot_dossier]
[date_completude]
[date_dernier_depot]
[date_rejet_dossier]
[date_limite_dossier]
[date_envoi_dossier]
[date_evenement]
[delai_limite_decision]

--Code barres de la consultation
[code_barres_consultation]

--Données générales des données techniques
[co_projet_desc_donnees_techniques]    [am_projet_desc_donnees_techniques]
[dm_projet_desc_donnees_techniques]    [ope_proj_desc_donnees_techniques]
[projet_desc_donnees_techniques]
[co_tot_log_nb_donnees_techniques]    [co_station_place_nb_donnees_techniques]
[am_lot_max_nb_donnees_techniques]    [am_lot_max_shon_donnees_techniques]
-- Les données techniques suivantes concernent le tableau des surfaces
-- Elles récupèrent les valeurs du tableau composé des sous-destinations si au
-- moins une valeur de celui-ci est saisie
[su_cstr_shon_tot_donnees_techniques]    [su_demo_shon_tot_donnees_techniques]
[tab_surface_donnees_techniques]
[su_tot_shon_tot_donnees_techniques]

--Données techniques des AT
[at_type_travaux]
[at_effectif_public_total]
[at_categorie_etablissement]
[at_type_etablissement]

-- Données techniques pour les DPC
[dpc_type]
[dpc_moda_cess_prix]
', 'sql', NULL, NULL);
INSERT INTO om_requete (om_requete, code, libelle, description, requete, merge_fields, type, classe, methode) VALUES (29, 'instruction', 'Récapitulatif du dossier d''instruction / instruction', NULL, 'SELECT

    --Données générales de l''événement d''instruction
    signataire_arrete.agrement AS agrement_signataire,
    signataire_arrete.visa AS visa_signataire,
    signataire_arrete.visa_2 AS visa_signataire_2,
    signataire_arrete.visa_3 AS visa_signataire_3,
    signataire_arrete.visa_4 AS visa_signataire_4,
    consultation_entrante.service_consultant_libelle,
    
    instruction.complement_om_html as complement_instruction,
    instruction.complement_om_html as complement1_instruction,
    instruction.complement2_om_html as complement2_instruction,
    instruction.complement3_om_html as complement3_instruction,
    instruction.complement4_om_html as complement4_instruction,
    instruction.code_barres as code_barres_instruction,
    to_char(instruction.date_evenement,''DD/MM/YYYY'') as date_evenement_instruction, 
    om_lettretype.libelle as libelle_om_lettretype,
    instruction.archive_delai as archive_delai_instruction,

    --Données générales du dossier d''instruction

    dossier.dossier_libelle as libelle_dossier,
    dossier.dossier as code_barres_dossier,
    dossier_autorisation.dossier_autorisation_libelle as libelle_da,

    dossier_autorisation_type_detaille.code as code_datd,
    dossier_autorisation_type_detaille.libelle as libelle_datd,
    dossier_autorisation_type.code as code_dat,
    dossier_autorisation_type.libelle as libelle_dat,
    dossier_instruction_type.code as code_dit,
    dossier_instruction_type.libelle as libelle_dit,
    famille_travaux.famille_travaux_libelle as famille_travaux,
    nature_travaux.nature_travaux_libelle as nature_travaux,

    dossier.delai as delai_dossier,
    to_char(dossier_autorisation.date_decision, ''DD/MM/YYYY'') as date_decision_da,
    ( select string_agg(parcelles::text, '', '') from ( select dossier_parcelle.libelle as parcelles from &DB_PREFIXEdossier_parcelle where dossier_parcelle.dossier = dossier.dossier  order by dossier_parcelle.libelle ) as req_parcelles) as terrain_references_cadastrales_dossier,
    dossier.terrain_superficie as terrain_superficie_dossier,
    quartier.libelle as libelle_quartier,

    avis_decision.libelle as libelle_avis_decision,

    dossier_autorisation.cle_acces_citoyen,

    CASE WHEN dossier.depot_electronique IS TRUE
        THEN ''&mention_depot_electronique_recepisse''
        ELSE ''''
    END as mention_depot_electronique_recepisse,

    CASE WHEN to_char(dossier.date_limite_incompletude::date - make_interval(months => dossier.delai_incompletude), ''DD/MM/YYYY'') IS NOT NULL
        THEN to_char(dossier.date_limite_incompletude::date - make_interval(months => dossier.delai_incompletude), ''DD/MM/YYYY'')
        ELSE ''''
    END as date_notification_incompletude,

    CASE WHEN dossier.date_dernier_depot IS NOT NULL AND to_char(dossier.date_dernier_depot, ''DD/MM/YYYY'') != to_char(dossier.date_depot, ''DD/MM/YYYY'')
        THEN ''&complete_le''
        ELSE ''''
    END as complete_le,

    
    -- Localisation du dossier

    commune.com as commune_code,
    commune.libelle as commune_libelle,
    commune.dep as departement_code,
    departement.libelle as departement_libelle,
    commune.reg as region_code,
    region.libelle as region_libelle,

    -- Données contentieux du dossier d''instruction
    dossier.autorisation_contestee as autorisation_contestee,
    to_char(dossier.date_cloture_instruction, ''DD/MM/YYYY'') as date_cloture_instruction_dossier,
    to_char(dossier.date_premiere_visite, ''DD/MM/YYYY'') as date_premiere_visite_dossier,
    to_char(dossier.date_derniere_visite, ''DD/MM/YYYY'') as date_derniere_visite_dossier,
    to_char(dossier.date_contradictoire, ''DD/MM/YYYY'') as date_contradictoire_dossier,
    to_char(dossier.date_retour_contradictoire, ''DD/MM/YYYY'') as date_retour_contradictoire_dossier,
    to_char(dossier.date_ait, ''DD/MM/YYYY'') as date_ait_dossier,
    to_char(dossier.date_transmission_parquet, ''DD/MM/YYYY'') as date_transmission_parquet_dossier,

    --Données générales du paramétrage de l''événement

    evenement.libelle as libelle_evenement,
    evenement.etat as etat_evenement,
    evenement.delai as delai_evenement,
    evenement.accord_tacite as accord_tacite_evenement,
    evenement.delai_notification as delai_notification_evenement,
    evenement.avis_decision as avis_decision_evenement,
    evenement.autorite_competente as autorite_competente_evenement,

    --Coordonnées de l''instructeur

    instructeur.nom as nom_instructeur,
    instructeur.telephone as telephone_instructeur,
    division.code as division_instructeur,
    om_utilisateur.email as email_instructeur,

    -- Coordonnées de l''instructeur 2
    instructeur_2.nom as nom_instructeur_2,
    instructeur_2.telephone as telephone_instructeur_2,
    division_2.code as division_instructeur_2,
    om_utilisateur_2.email as email_instructeur_2,

    --Adresse du terrain du dossier d''instruction

    dossier.terrain_adresse_voie_numero as terrain_adresse_voie_numero_dossier,
&DB_PREFIXEadresse(dossier.terrain_adresse_voie_numero::text, dossier.terrain_adresse_voie::text, ''''::text, dossier.terrain_adresse_lieu_dit::text, dossier.terrain_adresse_bp::text, dossier.terrain_adresse_code_postal::text, dossier.terrain_adresse_localite::text, dossier.terrain_adresse_cedex::text) as adresse_terrain_sdl,
&DB_PREFIXEadresse(dossier.terrain_adresse_voie_numero::text, dossier.terrain_adresse_voie::text, ''''::text, dossier.terrain_adresse_lieu_dit::text, dossier.terrain_adresse_bp::text, dossier.terrain_adresse_code_postal::text, dossier.terrain_adresse_localite::text, dossier.terrain_adresse_cedex::text, ''''::text, '' ''::text) as adresse_terrain,
    dossier.terrain_adresse_voie as terrain_adresse_voie_dossier,
    dossier.terrain_adresse_lieu_dit as terrain_adresse_lieu_dit_dossier,
    CASE 
        WHEN dossier.terrain_adresse_bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', dossier.terrain_adresse_bp)
    END as terrain_adresse_bp_dossier,
    dossier.terrain_adresse_code_postal as terrain_adresse_code_postal_dossier,
    dossier.terrain_adresse_localite as terrain_adresse_localite_dossier,
    CASE 
        WHEN dossier.terrain_adresse_cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', dossier.terrain_adresse_cedex)
    END as terrain_adresse_cedex_dossier,

    arrondissement.libelle as libelle_arrondissement,

    --Taxe d''aménagement du dossier d''instruction
    CASE
        WHEN tax_secteur = 1 THEN taxe_amenagement.tx_comm_secteur_1
        WHEN tax_secteur = 2 THEN taxe_amenagement.tx_comm_secteur_2
        WHEN tax_secteur = 3 THEN taxe_amenagement.tx_comm_secteur_3
        WHEN tax_secteur = 4 THEN taxe_amenagement.tx_comm_secteur_4
        WHEN tax_secteur = 5 THEN taxe_amenagement.tx_comm_secteur_5
        WHEN tax_secteur = 6 THEN taxe_amenagement.tx_comm_secteur_6
        WHEN tax_secteur = 7 THEN taxe_amenagement.tx_comm_secteur_7
        WHEN tax_secteur = 8 THEN taxe_amenagement.tx_comm_secteur_8
        WHEN tax_secteur = 9 THEN taxe_amenagement.tx_comm_secteur_9
        WHEN tax_secteur = 10 THEN taxe_amenagement.tx_comm_secteur_10
        WHEN tax_secteur = 11 THEN taxe_amenagement.tx_comm_secteur_11
        WHEN tax_secteur = 12 THEN taxe_amenagement.tx_comm_secteur_12
        WHEN tax_secteur = 13 THEN taxe_amenagement.tx_comm_secteur_13
        WHEN tax_secteur = 14 THEN taxe_amenagement.tx_comm_secteur_14
        WHEN tax_secteur = 15 THEN taxe_amenagement.tx_comm_secteur_15
        WHEN tax_secteur = 16 THEN taxe_amenagement.tx_comm_secteur_16
        WHEN tax_secteur = 17 THEN taxe_amenagement.tx_comm_secteur_17
        WHEN tax_secteur = 18 THEN taxe_amenagement.tx_comm_secteur_18
        WHEN tax_secteur = 19 THEN taxe_amenagement.tx_comm_secteur_19
        WHEN tax_secteur = 20 THEN taxe_amenagement.tx_comm_secteur_20
    END as tax_taux_secteur,

    taxe_amenagement.tx_comm_secteur_1 as tax_taux_secteur_1,
    taxe_amenagement.tx_comm_secteur_2 as tax_taux_secteur_2,
    taxe_amenagement.tx_comm_secteur_3 as tax_taux_secteur_3,
    taxe_amenagement.tx_comm_secteur_4 as tax_taux_secteur_4,
    taxe_amenagement.tx_comm_secteur_5 as tax_taux_secteur_5,
    taxe_amenagement.tx_comm_secteur_6 as tax_taux_secteur_6,
    taxe_amenagement.tx_comm_secteur_7 as tax_taux_secteur_7,
    taxe_amenagement.tx_comm_secteur_8 as tax_taux_secteur_8,
    taxe_amenagement.tx_comm_secteur_9 as tax_taux_secteur_9,
    taxe_amenagement.tx_comm_secteur_10 as tax_taux_secteur_10,
    taxe_amenagement.tx_comm_secteur_11 as tax_taux_secteur_11,
    taxe_amenagement.tx_comm_secteur_12 as tax_taux_secteur_12,
    taxe_amenagement.tx_comm_secteur_13 as tax_taux_secteur_13,
    taxe_amenagement.tx_comm_secteur_14 as tax_taux_secteur_14,
    taxe_amenagement.tx_comm_secteur_15 as tax_taux_secteur_15,
    taxe_amenagement.tx_comm_secteur_16 as tax_taux_secteur_16,
    taxe_amenagement.tx_comm_secteur_17 as tax_taux_secteur_17,
    taxe_amenagement.tx_comm_secteur_18 as tax_taux_secteur_18,
    taxe_amenagement.tx_comm_secteur_19 as tax_taux_secteur_19,
    taxe_amenagement.tx_comm_secteur_20 as tax_taux_secteur_20,

    CASE WHEN taxe_amenagement.en_ile_de_france IS NULL
        OR taxe_amenagement.en_ile_de_france IS FALSE
        THEN ''Non''
        ELSE ''Oui''
    END as tax_en_ile_de_france,
    taxe_amenagement.val_forf_surf_cstr as tax_val_forf_surf_cstr,
    taxe_amenagement.val_forf_empl_tente_carav_rml as tax_val_forf_empl_tente_carav_rml,
    taxe_amenagement.val_forf_empl_hll as tax_val_forf_empl_hll,
    taxe_amenagement.val_forf_surf_piscine as tax_val_forf_surf_piscine,
    taxe_amenagement.val_forf_nb_eolienne as tax_val_forf_nb_eolienne,
    taxe_amenagement.val_forf_surf_pann_photo as tax_val_forf_surf_pann_photo,
    taxe_amenagement.val_forf_nb_parking_ext as tax_val_forf_nb_parking_ext,
    taxe_amenagement.tx_depart  as tax_tx_depart,
    taxe_amenagement.tx_reg as tax_tx_reg,
    taxe_amenagement.tx_exo_facul_1_reg as tax_tx_exo_facul_1_reg,
    taxe_amenagement.tx_exo_facul_2_reg as tax_tx_exo_facul_2_reg,
    taxe_amenagement.tx_exo_facul_3_reg as tax_tx_exo_facul_3_reg,
    taxe_amenagement.tx_exo_facul_4_reg as tax_tx_exo_facul_4_reg,
    taxe_amenagement.tx_exo_facul_5_reg as tax_tx_exo_facul_5_reg,
    taxe_amenagement.tx_exo_facul_6_reg as tax_tx_exo_facul_6_reg,
    taxe_amenagement.tx_exo_facul_7_reg as tax_tx_exo_facul_7_reg,
    taxe_amenagement.tx_exo_facul_8_reg as tax_tx_exo_facul_8_reg,
    taxe_amenagement.tx_exo_facul_9_reg as tax_tx_exo_facul_9_reg,
    taxe_amenagement.tx_exo_facul_1_depart  as tax_tx_exo_facul_1_depart,
    taxe_amenagement.tx_exo_facul_2_depart  as tax_tx_exo_facul_2_depart,
    taxe_amenagement.tx_exo_facul_3_depart  as tax_tx_exo_facul_3_depart,
    taxe_amenagement.tx_exo_facul_4_depart  as tax_tx_exo_facul_4_depart,
    taxe_amenagement.tx_exo_facul_5_depart  as tax_tx_exo_facul_5_depart,
    taxe_amenagement.tx_exo_facul_6_depart  as tax_tx_exo_facul_6_depart,
    taxe_amenagement.tx_exo_facul_7_depart  as tax_tx_exo_facul_7_depart,
    taxe_amenagement.tx_exo_facul_8_depart  as tax_tx_exo_facul_8_depart,
    taxe_amenagement.tx_exo_facul_9_depart  as tax_tx_exo_facul_9_depart,
    taxe_amenagement.tx_exo_facul_1_comm as tax_tx_exo_facul_1_comm,
    taxe_amenagement.tx_exo_facul_2_comm as tax_tx_exo_facul_2_comm,
    taxe_amenagement.tx_exo_facul_3_comm as tax_tx_exo_facul_3_comm,
    taxe_amenagement.tx_exo_facul_4_comm as tax_tx_exo_facul_4_comm,
    taxe_amenagement.tx_exo_facul_5_comm as tax_tx_exo_facul_5_comm,
    taxe_amenagement.tx_exo_facul_6_comm as tax_tx_exo_facul_6_comm,
    taxe_amenagement.tx_exo_facul_7_comm as tax_tx_exo_facul_7_comm,
    taxe_amenagement.tx_exo_facul_8_comm as tax_tx_exo_facul_8_comm,
    taxe_amenagement.tx_exo_facul_9_comm as tax_tx_exo_facul_9_comm,
    taxe_amenagement.tx_rap as tax_tx_rap,

    dossier.tax_mtn_rap as tax_montant_rap,
    CONCAT_WS('' '', ''Secteur'', dossier.tax_secteur) as tax_secteur,
    dossier.tax_secteur as tax_numero_secteur,
    dossier.tax_mtn_part_commu as tax_montant_part_communale,
    dossier.tax_mtn_part_depart as tax_montant_part_departementale,
    dossier.tax_mtn_part_reg as tax_montant_part_regionale,
    dossier.tax_mtn_total as tax_montant_total,

    --Coordonnées du pétitionnaire principal
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier'' OR petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_nom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
        THEN petitionnaire_principal.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
            END
    END as nom_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier'' OR petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal_civilite.libelle
        ELSE ''''
    END as civilite_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_nom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_particulier_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN petitionnaire_principal.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_particulier_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_principal.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_principal.personne_morale_denomination
    END as denomination_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_principal.personne_morale_siret
    END as siret_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_principal.personne_morale_categorie_juridique
    END as categorie_juridique_petitionnaire_principal,
    petitionnaire_principal.numero as numero_petitionnaire_principal,
&DB_PREFIXEadresse(petitionnaire_principal.numero::text, petitionnaire_principal.voie::text, petitionnaire_principal.complement::text, petitionnaire_principal.lieu_dit::text, petitionnaire_principal.bp::text, petitionnaire_principal.code_postal::text, petitionnaire_principal.localite::text, petitionnaire_principal.cedex::text, petitionnaire_principal.pays::text) as adresse_petitionnaire_principal_sdl,
&DB_PREFIXEadresse(petitionnaire_principal.numero::text, petitionnaire_principal.voie::text, petitionnaire_principal.complement::text, petitionnaire_principal.lieu_dit::text, petitionnaire_principal.bp::text, petitionnaire_principal.code_postal::text, petitionnaire_principal.localite::text, petitionnaire_principal.cedex::text, petitionnaire_principal.pays::text, '' ''::text) as adresse_petitionnaire_principal,
    petitionnaire_principal.voie as voie_petitionnaire_principal,
    petitionnaire_principal.complement as complement_petitionnaire_principal,
    petitionnaire_principal.lieu_dit as lieu_dit_petitionnaire_principal,
    CASE 
        WHEN petitionnaire_principal.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_principal.bp)
    END as bp_petitionnaire_principal,
    petitionnaire_principal.code_postal as code_postal_petitionnaire_principal,
    petitionnaire_principal.localite as localite_petitionnaire_principal,
    CASE 
        WHEN petitionnaire_principal.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_principal.cedex)
    END as cedex_petitionnaire_principal,
    petitionnaire_principal.pays as pays_petitionnaire_principal,
    petitionnaire_principal.division_territoriale as division_territoriale_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite = ''particulier''
        THEN to_char(petitionnaire_principal.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.qualite = ''particulier''
        THEN CONCAT_WS('' '', petitionnaire_principal.particulier_commune_naissance, petitionnaire_principal.particulier_departement_naissance, petitionnaire_principal.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_petitionnaire_principal,
    petitionnaire_principal.courriel as email_petitionnaire_principal,
    CONCAT_WS('' '', petitionnaire_principal.indicatif, CONCAT_WS('' / '', petitionnaire_principal.telephone_fixe, petitionnaire_principal.telephone_mobile)) as coordonnees_telephonique_petitionnaire_principal,
    CASE WHEN petitionnaire_principal.notification IS TRUE
        THEN ''[X]''
        ELSE ''[ ]''
    END as notification_petitionnaire_principal,

    --Coordonnées du pétitionnaire principal initial
    CASE WHEN petitionnaire_principal_initial.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_initial_civilite.libelle, petitionnaire_principal_initial.particulier_nom, petitionnaire_principal_initial.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_principal_initial.personne_morale_nom IS NOT NULL OR petitionnaire_principal_initial.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_initial.personne_morale_raison_sociale, petitionnaire_principal_initial.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_initial_civilite.libelle, petitionnaire_principal_initial.personne_morale_nom, petitionnaire_principal_initial.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_principal_initial.personne_morale_raison_sociale, '' '', petitionnaire_principal_initial.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_principal_initial,
    CASE WHEN petitionnaire_principal_initial.qualite=''particulier'' OR petitionnaire_principal_initial.personne_morale_nom IS NOT NULL OR petitionnaire_principal_initial.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal_initial_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_principal_initial,
    CASE WHEN petitionnaire_principal_initial.qualite=''particulier''
        THEN petitionnaire_principal_initial.particulier_nom
        ELSE
            CASE WHEN petitionnaire_principal_initial.personne_morale_nom IS NOT NULL
                THEN petitionnaire_principal_initial.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_principal_initial,
    CASE WHEN petitionnaire_principal_initial.qualite=''particulier''
        THEN petitionnaire_principal_initial.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_principal_initial.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal_initial.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_principal_initial,
    CASE WHEN petitionnaire_principal_initial.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_initial_civilite.libelle, petitionnaire_principal_initial.particulier_nom, petitionnaire_principal_initial.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_principal_initial,
    CASE WHEN petitionnaire_principal_initial.qualite=''particulier''
        THEN petitionnaire_principal_initial_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_principal_initial,
    CASE WHEN petitionnaire_principal_initial.qualite=''particulier''
        THEN petitionnaire_principal_initial.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_principal_initial,
    CASE WHEN petitionnaire_principal_initial.qualite=''particulier''
        THEN petitionnaire_principal_initial.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_principal_initial,
    CASE WHEN petitionnaire_principal_initial.personne_morale_nom IS NOT NULL OR petitionnaire_principal_initial.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_initial.personne_morale_raison_sociale, petitionnaire_principal_initial.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_initial_civilite.libelle, petitionnaire_principal_initial.personne_morale_nom, petitionnaire_principal_initial.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_principal_initial.personne_morale_raison_sociale, '' '', petitionnaire_principal_initial.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_principal_initial,
    CASE WHEN petitionnaire_principal_initial.personne_morale_nom IS NOT NULL OR petitionnaire_principal_initial.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal_initial_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_principal_initial,
    CASE WHEN petitionnaire_principal_initial.personne_morale_nom IS NOT NULL
        THEN petitionnaire_principal_initial.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_principal_initial,
    CASE WHEN petitionnaire_principal_initial.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_principal_initial.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_principal_initial,
    CASE WHEN petitionnaire_principal_initial.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_initial_civilite.libelle, petitionnaire_principal_initial.particulier_nom, petitionnaire_principal_initial.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_principal_initial.personne_morale_nom IS NOT NULL OR petitionnaire_principal_initial.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_initial.personne_morale_raison_sociale, petitionnaire_principal_initial.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_initial_civilite.libelle, petitionnaire_principal_initial.personne_morale_nom, petitionnaire_principal_initial.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_principal_initial.personne_morale_raison_sociale, '' '', petitionnaire_principal_initial.personne_morale_denomination))
            END
    END as nom_petitionnaire_principal_initial,

    CASE WHEN petitionnaire_principal_initial.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_principal_initial.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_principal_initial,
    CASE WHEN petitionnaire_principal_initial.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_principal_initial.personne_morale_denomination
    END as denomination_petitionnaire_principal_initial,
    CASE WHEN petitionnaire_principal_initial.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_principal_initial.personne_morale_siret
    END as siret_petitionnaire_principal_initial,
    CASE WHEN petitionnaire_principal_initial.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_principal_initial.personne_morale_categorie_juridique
    END as categorie_juridique_petitionnaire_principal_initial,

    petitionnaire_principal_initial.numero as numero_petitionnaire_principal_initial,
&DB_PREFIXEadresse(petitionnaire_principal_initial.numero::text, petitionnaire_principal_initial.voie::text, petitionnaire_principal_initial.complement::text, petitionnaire_principal_initial.lieu_dit::text, petitionnaire_principal_initial.bp::text, petitionnaire_principal_initial.code_postal::text, petitionnaire_principal_initial.localite::text, petitionnaire_principal_initial.cedex::text, petitionnaire_principal_initial.pays::text) as adresse_petitionnaire_principal_initial_sdl,
&DB_PREFIXEadresse(petitionnaire_principal_initial.numero::text, petitionnaire_principal_initial.voie::text, petitionnaire_principal_initial.complement::text, petitionnaire_principal_initial.lieu_dit::text, petitionnaire_principal_initial.bp::text, petitionnaire_principal_initial.code_postal::text, petitionnaire_principal_initial.localite::text, petitionnaire_principal_initial.cedex::text, petitionnaire_principal_initial.pays::text, '' ''::text) as adresse_petitionnaire_principal_initial,
    petitionnaire_principal_initial.voie as voie_petitionnaire_principal_initial,
    petitionnaire_principal_initial.complement as complement_petitionnaire_principal_initial,
    petitionnaire_principal_initial.lieu_dit as lieu_dit_petitionnaire_principal_initial,
    CASE 
        WHEN petitionnaire_principal_initial.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_principal_initial.bp)
    END as bp_petitionnaire_principal_initial,
    petitionnaire_principal_initial.code_postal as code_postal_petitionnaire_principal_initial,
    petitionnaire_principal_initial.localite as localite_petitionnaire_principal_initial,
    CASE 
        WHEN petitionnaire_principal_initial.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_principal_initial.cedex)
    END as cedex_petitionnaire_principal_initial,
    petitionnaire_principal_initial.pays as pays_petitionnaire_principal,
    petitionnaire_principal_initial.division_territoriale as division_territoriale_petitionnaire_principal,
    CASE WHEN petitionnaire_principal_initial.qualite = ''particulier''
        THEN to_char(petitionnaire_principal_initial.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_petitionnaire_principal_initial,
    CASE WHEN petitionnaire_principal_initial.qualite = ''particulier''
        THEN CONCAT_WS('' '', petitionnaire_principal_initial.particulier_commune_naissance, petitionnaire_principal_initial.particulier_departement_naissance, petitionnaire_principal_initial.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_petitionnaire_principal_initial,
    petitionnaire_principal_initial.courriel as email_petitionnaire_principal_initial,
    CONCAT_WS('' '', petitionnaire_principal_initial.indicatif, CONCAT_WS('' / '', petitionnaire_principal_initial.telephone_fixe, petitionnaire_principal_initial.telephone_mobile)) as coordonnees_telephonique_petitionnaire_principal_initial,
    CASE WHEN petitionnaire_principal_initial.notification IS TRUE
        THEN ''[X]''
        ELSE ''[ ]''
    END as notification_petitionnaire_principal_initial,

    --Coordonnées du pétitionnaire 1

    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_1_civilite.libelle, petitionnaire_1.particulier_nom, petitionnaire_1.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_1.personne_morale_raison_sociale, petitionnaire_1.personne_morale_denomination, ''représenté(e) par'', petitionnaire_1_civilite.libelle, petitionnaire_1.personne_morale_nom, petitionnaire_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_1.personne_morale_raison_sociale, '' '', petitionnaire_1.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier'' OR petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_nom
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL
                THEN petitionnaire_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_1_civilite.libelle, petitionnaire_1.particulier_nom, petitionnaire_1.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN petitionnaire_1.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_1,
    CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_1.personne_morale_raison_sociale, petitionnaire_1.personne_morale_denomination, ''représenté(e) par'', petitionnaire_1_civilite.libelle, petitionnaire_1.personne_morale_nom, petitionnaire_1.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_1.personne_morale_raison_sociale, '' '', petitionnaire_1.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL
        THEN petitionnaire_1.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_1.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_1_civilite.libelle, petitionnaire_1.particulier_nom, petitionnaire_1.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_1.personne_morale_nom IS NOT NULL OR petitionnaire_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_1.personne_morale_raison_sociale, petitionnaire_1.personne_morale_denomination, ''représenté(e) par'', petitionnaire_1_civilite.libelle, petitionnaire_1.personne_morale_nom, petitionnaire_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_1.personne_morale_raison_sociale, '' '', petitionnaire_1.personne_morale_denomination))
            END
    END as nom_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_1.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_1.personne_morale_denomination
    END as denomination_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_1.personne_morale_siret
    END as siret_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_1.personne_morale_categorie_juridique
    END as categorie_juridique_petitionnaire_1,
    petitionnaire_1.numero as numero_petitionnaire_1,
&DB_PREFIXEadresse(petitionnaire_1.numero::text, petitionnaire_1.voie::text, petitionnaire_1.complement::text, petitionnaire_1.lieu_dit::text, petitionnaire_1.bp::text, petitionnaire_1.code_postal::text, petitionnaire_1.localite::text, petitionnaire_1.cedex::text, petitionnaire_1.pays::text) as adresse_petitionnaire_1_sdl,
&DB_PREFIXEadresse(petitionnaire_1.numero::text, petitionnaire_1.voie::text, petitionnaire_1.complement::text, petitionnaire_1.lieu_dit::text, petitionnaire_1.bp::text, petitionnaire_1.code_postal::text, petitionnaire_1.localite::text, petitionnaire_1.cedex::text, petitionnaire_1.pays::text, '' ''::text) as adresse_petitionnaire_1,
    petitionnaire_1.voie as voie_petitionnaire_1,
    petitionnaire_1.complement as complement_petitionnaire_1,
    petitionnaire_1.lieu_dit as lieu_dit_petitionnaire_1,
    CASE 
        WHEN petitionnaire_1.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_1.bp)
    END as bp_petitionnaire_1,
    petitionnaire_1.code_postal as code_postal_petitionnaire_1,
    petitionnaire_1.localite as localite_petitionnaire_1,
    CASE 
        WHEN petitionnaire_1.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_1.cedex)
    END as cedex_petitionnaire_1,
    petitionnaire_1.pays as pays_petitionnaire_1,
    petitionnaire_1.division_territoriale as division_territoriale_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite = ''particulier''
        THEN to_char(petitionnaire_1.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_petitionnaire_1,
    CASE WHEN petitionnaire_1.qualite = ''particulier''
        THEN CONCAT_WS('' '', petitionnaire_1.particulier_commune_naissance, petitionnaire_1.particulier_departement_naissance, petitionnaire_1.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_petitionnaire_1,
    petitionnaire_1.courriel as email_petitionnaire_1,
    CONCAT_WS('' '', petitionnaire_1.indicatif, CONCAT_WS('' / '', petitionnaire_1.telephone_fixe, petitionnaire_1.telephone_mobile)) as coordonnees_telephonique_petitionnaire_1,

    --Coordonnées du pétitionnaire 2

    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_2_civilite.libelle, petitionnaire_2.particulier_nom, petitionnaire_2.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_2.personne_morale_raison_sociale, petitionnaire_2.personne_morale_denomination, ''représenté(e) par'', petitionnaire_2_civilite.libelle, petitionnaire_2.personne_morale_nom, petitionnaire_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_2.personne_morale_raison_sociale, '' '', petitionnaire_2.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier'' OR petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_nom
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL
                THEN petitionnaire_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_2_civilite.libelle, petitionnaire_2.particulier_nom, petitionnaire_2.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN petitionnaire_2.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_2,
    CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_2.personne_morale_raison_sociale, petitionnaire_2.personne_morale_denomination, ''représenté(e) par'', petitionnaire_2_civilite.libelle, petitionnaire_2.personne_morale_nom, petitionnaire_2.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_2.personne_morale_raison_sociale, '' '', petitionnaire_2.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL
        THEN petitionnaire_2.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_2.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_2_civilite.libelle, petitionnaire_2.particulier_nom, petitionnaire_2.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_2.personne_morale_nom IS NOT NULL OR petitionnaire_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_2.personne_morale_raison_sociale, petitionnaire_2.personne_morale_denomination, ''représenté(e) par'', petitionnaire_2_civilite.libelle, petitionnaire_2.personne_morale_nom, petitionnaire_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_2.personne_morale_raison_sociale, '' '', petitionnaire_2.personne_morale_denomination))
            END
    END as nom_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_2.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_2.personne_morale_denomination
    END as denomination_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_2.personne_morale_categorie_juridique
    END as categorie_juridique_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_2.personne_morale_siret
    END as siret_petitionnaire_2,
    petitionnaire_2.numero as numero_petitionnaire_2,
&DB_PREFIXEadresse(petitionnaire_2.numero::text, petitionnaire_2.voie::text, petitionnaire_2.complement::text, petitionnaire_2.lieu_dit::text, petitionnaire_2.bp::text, petitionnaire_2.code_postal::text, petitionnaire_2.localite::text, petitionnaire_2.cedex::text, petitionnaire_2.pays::text) as adresse_petitionnaire_2_sdl,
&DB_PREFIXEadresse(petitionnaire_2.numero::text, petitionnaire_2.voie::text, petitionnaire_2.complement::text, petitionnaire_2.lieu_dit::text, petitionnaire_2.bp::text, petitionnaire_2.code_postal::text, petitionnaire_2.localite::text, petitionnaire_2.cedex::text, petitionnaire_2.pays::text, '' ''::text) as adresse_petitionnaire_2,
    petitionnaire_2.voie as voie_petitionnaire_2,
    petitionnaire_2.complement as complement_petitionnaire_2,
    petitionnaire_2.lieu_dit as lieu_dit_petitionnaire_2,
    CASE 
        WHEN petitionnaire_2.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_2.bp)
    END as bp_petitionnaire_2,
    petitionnaire_2.code_postal as code_postal_petitionnaire_2,
    petitionnaire_2.localite as localite_petitionnaire_2,
    CASE 
        WHEN petitionnaire_2.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_2.cedex)
    END as cedex_petitionnaire_2,
    petitionnaire_2.pays as pays_petitionnaire_2,
    petitionnaire_2.division_territoriale as division_territoriale_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite = ''particulier''
        THEN to_char(petitionnaire_2.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_petitionnaire_2,
    CASE WHEN petitionnaire_2.qualite = ''particulier''
        THEN CONCAT_WS('' '', petitionnaire_2.particulier_commune_naissance, petitionnaire_2.particulier_departement_naissance, petitionnaire_2.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_petitionnaire_2,
    petitionnaire_2.courriel as email_petitionnaire_2,
    CONCAT_WS('' '', petitionnaire_2.indicatif, CONCAT_WS('' / '', petitionnaire_2.telephone_fixe, petitionnaire_2.telephone_mobile)) as coordonnees_telephonique_petitionnaire_2,

    --Coordonnées du pétitionnaire 3

    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_3_civilite.libelle, petitionnaire_3.particulier_nom, petitionnaire_3.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_3.personne_morale_raison_sociale, petitionnaire_3.personne_morale_denomination, ''représenté(e) par'', petitionnaire_3_civilite.libelle, petitionnaire_3.personne_morale_nom, petitionnaire_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_3.personne_morale_raison_sociale, '' '', petitionnaire_3.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier'' OR petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_nom
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL
                THEN petitionnaire_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_3_civilite.libelle, petitionnaire_3.particulier_nom, petitionnaire_3.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN petitionnaire_3.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_3,
    CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_3.personne_morale_raison_sociale, petitionnaire_3.personne_morale_denomination, ''représenté(e) par'', petitionnaire_3_civilite.libelle, petitionnaire_3.personne_morale_nom, petitionnaire_3.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_3.personne_morale_raison_sociale, '' '', petitionnaire_3.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL
        THEN petitionnaire_3.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_3.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_3_civilite.libelle, petitionnaire_3.particulier_nom, petitionnaire_3.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_3.personne_morale_nom IS NOT NULL OR petitionnaire_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_3.personne_morale_raison_sociale, petitionnaire_3.personne_morale_denomination, ''représenté(e) par'', petitionnaire_3_civilite.libelle, petitionnaire_3.personne_morale_nom, petitionnaire_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_3.personne_morale_raison_sociale, '' '', petitionnaire_3.personne_morale_denomination))
            END
    END as nom_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_3.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_3.personne_morale_denomination
    END as denomination_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_3.personne_morale_siret
    END as siret_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_3.personne_morale_categorie_juridique
    END as categorie_juridique_petitionnaire_3,
    petitionnaire_3.numero as numero_petitionnaire_3,
&DB_PREFIXEadresse(petitionnaire_3.numero::text, petitionnaire_3.voie::text, petitionnaire_3.complement::text, petitionnaire_3.lieu_dit::text, petitionnaire_3.bp::text, petitionnaire_3.code_postal::text, petitionnaire_3.localite::text, petitionnaire_3.cedex::text, petitionnaire_3.pays::text) as adresse_petitionnaire_3_sdl,
&DB_PREFIXEadresse(petitionnaire_3.numero::text, petitionnaire_3.voie::text, petitionnaire_3.complement::text, petitionnaire_3.lieu_dit::text, petitionnaire_3.bp::text, petitionnaire_3.code_postal::text, petitionnaire_3.localite::text, petitionnaire_3.cedex::text, petitionnaire_3.pays::text, '' ''::text) as adresse_petitionnaire_3,
    petitionnaire_3.voie as voie_petitionnaire_3,
    petitionnaire_3.complement as complement_petitionnaire_3,
    petitionnaire_3.lieu_dit as lieu_dit_petitionnaire_3,
    CASE 
        WHEN petitionnaire_3.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_3.bp)
    END as bp_petitionnaire_3,
    petitionnaire_3.code_postal as code_postal_petitionnaire_3,
    petitionnaire_3.localite as localite_petitionnaire_3,
    CASE 
        WHEN petitionnaire_3.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_3.cedex)
    END as cedex_petitionnaire_3,
    petitionnaire_3.pays as pays_petitionnaire_3,
    petitionnaire_3.division_territoriale as division_territoriale_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite = ''particulier''
        THEN to_char(petitionnaire_3.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_petitionnaire_3,
    CASE WHEN petitionnaire_3.qualite = ''particulier''
        THEN CONCAT_WS('' '', petitionnaire_3.particulier_commune_naissance, petitionnaire_3.particulier_departement_naissance, petitionnaire_3.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_petitionnaire_3,
    petitionnaire_3.courriel as email_petitionnaire_3,
    CONCAT_WS('' '', petitionnaire_3.indicatif, CONCAT_WS('' / '', petitionnaire_3.telephone_fixe, petitionnaire_3.telephone_mobile)) as coordonnees_telephonique_petitionnaire_3,

    --Coordonnées du pétitionnaire 4

    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_4_civilite.libelle, petitionnaire_4.particulier_nom, petitionnaire_4.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_4.personne_morale_raison_sociale, petitionnaire_4.personne_morale_denomination, ''représenté(e) par'', petitionnaire_4_civilite.libelle, petitionnaire_4.personne_morale_nom, petitionnaire_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_4.personne_morale_raison_sociale, '' '', petitionnaire_4.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier'' OR petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_nom
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL
                THEN petitionnaire_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_4_civilite.libelle, petitionnaire_4.particulier_nom, petitionnaire_4.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN petitionnaire_4.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_4,
    CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_4.personne_morale_raison_sociale, petitionnaire_4.personne_morale_denomination, ''représenté(e) par'', petitionnaire_4_civilite.libelle, petitionnaire_4.personne_morale_nom, petitionnaire_4.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_4.personne_morale_raison_sociale, '' '', petitionnaire_4.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL
        THEN petitionnaire_4.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_4.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_4_civilite.libelle, petitionnaire_4.particulier_nom, petitionnaire_4.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_4.personne_morale_nom IS NOT NULL OR petitionnaire_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_4.personne_morale_raison_sociale, petitionnaire_4.personne_morale_denomination, ''représenté(e) par'', petitionnaire_4_civilite.libelle, petitionnaire_4.personne_morale_nom, petitionnaire_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_4.personne_morale_raison_sociale, '' '', petitionnaire_4.personne_morale_denomination))
            END
    END as nom_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_4.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_4.personne_morale_denomination
    END as denomination_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_4.personne_morale_categorie_juridique
    END as categorie_juridique_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_4.personne_morale_siret
    END as siret_petitionnaire_4,
    petitionnaire_4.numero as numero_petitionnaire_4,
&DB_PREFIXEadresse(petitionnaire_4.numero::text, petitionnaire_4.voie::text, petitionnaire_4.complement::text, petitionnaire_4.lieu_dit::text, petitionnaire_4.bp::text, petitionnaire_4.code_postal::text, petitionnaire_4.localite::text, petitionnaire_4.cedex::text, petitionnaire_4.pays::text) as adresse_petitionnaire_4_sdl,
&DB_PREFIXEadresse(petitionnaire_4.numero::text, petitionnaire_4.voie::text, petitionnaire_4.complement::text, petitionnaire_4.lieu_dit::text, petitionnaire_4.bp::text, petitionnaire_4.code_postal::text, petitionnaire_4.localite::text, petitionnaire_4.cedex::text, petitionnaire_4.pays::text, '' ''::text) as adresse_petitionnaire_4,
    petitionnaire_4.voie as voie_petitionnaire_4,
    petitionnaire_4.complement as complement_petitionnaire_4,
    petitionnaire_4.lieu_dit as lieu_dit_petitionnaire_4,
    CASE 
        WHEN petitionnaire_4.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_4.bp)
    END as bp_petitionnaire_4,
    petitionnaire_4.code_postal as code_postal_petitionnaire_4,
    petitionnaire_4.localite as localite_petitionnaire_4,
    CASE 
        WHEN petitionnaire_4.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_4.cedex)
    END as cedex_petitionnaire_4,
    petitionnaire_4.pays as pays_petitionnaire_4,
    petitionnaire_4.division_territoriale as division_territoriale_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite = ''particulier''
        THEN to_char(petitionnaire_4.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_petitionnaire_4,
    CASE WHEN petitionnaire_4.qualite = ''particulier''
        THEN CONCAT_WS('' '', petitionnaire_4.particulier_commune_naissance, petitionnaire_4.particulier_departement_naissance, petitionnaire_4.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_petitionnaire_4,
    petitionnaire_4.courriel as email_petitionnaire_4,
    CONCAT_WS('' '', petitionnaire_4.indicatif, CONCAT_WS('' / '', petitionnaire_4.telephone_fixe, petitionnaire_4.telephone_mobile)) as coordonnees_telephonique_petitionnaire_4,

    --Coordonnées du pétitionnaire 5

    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_5_civilite.libelle, petitionnaire_5.particulier_nom, petitionnaire_5.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_5.personne_morale_raison_sociale, petitionnaire_5.personne_morale_denomination, ''représenté(e) par'', petitionnaire_5_civilite.libelle, petitionnaire_5.personne_morale_nom, petitionnaire_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_5.personne_morale_raison_sociale, '' '', petitionnaire_5.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier'' OR petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_nom
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL
                THEN petitionnaire_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_prenom
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_5_civilite.libelle, petitionnaire_5.particulier_nom, petitionnaire_5.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_nom
        ELSE ''''
    END as nom_qualite_part_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN petitionnaire_5.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_petitionnaire_5,
    CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', petitionnaire_5.personne_morale_raison_sociale, petitionnaire_5.personne_morale_denomination, ''représenté(e) par'', petitionnaire_5_civilite.libelle, petitionnaire_5.personne_morale_nom, petitionnaire_5.personne_morale_prenom))
        ELSE TRIM(CONCAT(petitionnaire_5.personne_morale_raison_sociale, '' '', petitionnaire_5.personne_morale_denomination))
    END as nom_complet_qualite_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL
        THEN petitionnaire_5.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.personne_morale_prenom IS NOT NULL
        THEN petitionnaire_5.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', petitionnaire_5_civilite.libelle, petitionnaire_5.particulier_nom, petitionnaire_5.particulier_prenom))
        ELSE
            CASE WHEN petitionnaire_5.personne_morale_nom IS NOT NULL OR petitionnaire_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', petitionnaire_5.personne_morale_raison_sociale, petitionnaire_5.personne_morale_denomination, ''représenté(e) par'', petitionnaire_5_civilite.libelle, petitionnaire_5.personne_morale_nom, petitionnaire_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(petitionnaire_5.personne_morale_raison_sociale, '' '', petitionnaire_5.personne_morale_denomination))
            END
    END as nom_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_5.personne_morale_raison_sociale
    END as raison_sociale_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_5.personne_morale_denomination
    END as denomination_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_5.personne_morale_categorie_juridique
    END as categorie_juridique_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite=''particulier''
        THEN ''''
        ELSE petitionnaire_5.personne_morale_siret
    END as siret_petitionnaire_5,
    petitionnaire_5.numero as numero_petitionnaire_5,
&DB_PREFIXEadresse(petitionnaire_5.numero::text, petitionnaire_5.voie::text, petitionnaire_5.complement::text, petitionnaire_5.lieu_dit::text, petitionnaire_5.bp::text, petitionnaire_5.code_postal::text, petitionnaire_5.localite::text, petitionnaire_5.cedex::text, petitionnaire_5.pays::text) as adresse_petitionnaire_5_sdl,
&DB_PREFIXEadresse(petitionnaire_5.numero::text, petitionnaire_5.voie::text, petitionnaire_5.complement::text, petitionnaire_5.lieu_dit::text, petitionnaire_5.bp::text, petitionnaire_5.code_postal::text, petitionnaire_5.localite::text, petitionnaire_5.cedex::text, petitionnaire_5.pays::text, '' ''::text) as adresse_petitionnaire_5,
    petitionnaire_5.voie as voie_petitionnaire_5,
    petitionnaire_5.complement as complement_petitionnaire_5,
    petitionnaire_5.lieu_dit as lieu_dit_petitionnaire_5,
    CASE 
        WHEN petitionnaire_5.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', petitionnaire_5.bp)
    END as bp_petitionnaire_5,
    petitionnaire_5.code_postal as code_postal_petitionnaire_5,
    petitionnaire_5.localite as localite_petitionnaire_5,
    CASE 
        WHEN petitionnaire_5.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', petitionnaire_5.cedex)
    END as cedex_petitionnaire_5,
    petitionnaire_5.pays as pays_petitionnaire_5,
    petitionnaire_5.division_territoriale as division_territoriale_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite = ''particulier''
        THEN to_char(petitionnaire_5.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_petitionnaire_5,
    CASE WHEN petitionnaire_5.qualite = ''particulier''
        THEN CONCAT_WS('' '', petitionnaire_5.particulier_commune_naissance, petitionnaire_5.particulier_departement_naissance, petitionnaire_5.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_petitionnaire_5,
    petitionnaire_5.courriel as email_petitionnaire_5,
    CONCAT_WS('' '', petitionnaire_5.indicatif, CONCAT_WS('' / '', petitionnaire_5.telephone_fixe, petitionnaire_5.telephone_mobile)) as coordonnees_telephonique_petitionnaire_5,

    --Coordonnées du contrevenant principal

    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_principal_civilite.libelle, contrevenant_principal.particulier_nom, contrevenant_principal.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_principal.personne_morale_nom IS NOT NULL OR contrevenant_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_principal.personne_morale_raison_sociale, contrevenant_principal.personne_morale_denomination, ''représenté(e) par'', contrevenant_principal_civilite.libelle, contrevenant_principal.personne_morale_nom, contrevenant_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_principal.personne_morale_raison_sociale, '' '', contrevenant_principal.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier'' OR contrevenant_principal.personne_morale_nom IS NOT NULL OR contrevenant_principal.personne_morale_prenom IS NOT NULL
        THEN contrevenant_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN contrevenant_principal.particulier_nom
        ELSE
            CASE WHEN contrevenant_principal.personne_morale_nom IS NOT NULL
                THEN contrevenant_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN contrevenant_principal.particulier_prenom
        ELSE
            CASE WHEN contrevenant_principal.personne_morale_prenom IS NOT NULL
                THEN contrevenant_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_principal_civilite.libelle, contrevenant_principal.particulier_nom, contrevenant_principal.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN contrevenant_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN contrevenant_principal.particulier_nom
        ELSE ''''
    END as nom_qualite_part_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN contrevenant_principal.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_contrevenant_principal,
    CASE WHEN contrevenant_principal.personne_morale_nom IS NOT NULL OR contrevenant_principal.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', contrevenant_principal.personne_morale_raison_sociale, contrevenant_principal.personne_morale_denomination, ''représenté(e) par'', contrevenant_principal_civilite.libelle, contrevenant_principal.personne_morale_nom, contrevenant_principal.personne_morale_prenom))
        ELSE TRIM(CONCAT(contrevenant_principal.personne_morale_raison_sociale, '' '', contrevenant_principal.personne_morale_denomination))
    END as nom_complet_qualite_pm_contrevenant_principal,
    CASE WHEN contrevenant_principal.personne_morale_nom IS NOT NULL OR contrevenant_principal.personne_morale_prenom IS NOT NULL
        THEN contrevenant_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_contrevenant_principal,
    CASE WHEN contrevenant_principal.personne_morale_nom IS NOT NULL
        THEN contrevenant_principal.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_contrevenant_principal,
    CASE WHEN contrevenant_principal.personne_morale_prenom IS NOT NULL
        THEN contrevenant_principal.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_principal.personne_morale_raison_sociale
    END as raison_sociale_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_principal.personne_morale_denomination
    END as denomination_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_principal.personne_morale_siret
    END as siret_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_principal.personne_morale_categorie_juridique
    END as categorie_juridique_contrevenant_principal,
    contrevenant_principal.numero as numero_contrevenant_principal,
&DB_PREFIXEadresse(contrevenant_principal.numero::text, contrevenant_principal.voie::text, contrevenant_principal.complement::text, contrevenant_principal.lieu_dit::text, contrevenant_principal.bp::text, contrevenant_principal.code_postal::text, contrevenant_principal.localite::text, contrevenant_principal.cedex::text, contrevenant_principal.pays::text) as adresse_contrevenant_principal_sdl,
&DB_PREFIXEadresse(contrevenant_principal.numero::text, contrevenant_principal.voie::text, contrevenant_principal.complement::text, contrevenant_principal.lieu_dit::text, contrevenant_principal.bp::text, contrevenant_principal.code_postal::text, contrevenant_principal.localite::text, contrevenant_principal.cedex::text, contrevenant_principal.pays::text, '' ''::text) as adresse_contrevenant_principal,
    contrevenant_principal.voie as voie_contrevenant_principal,
    contrevenant_principal.complement as complement_contrevenant_principal,
    contrevenant_principal.lieu_dit as lieu_dit_contrevenant_principal,
    CASE 
        WHEN contrevenant_principal.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', contrevenant_principal.bp)
    END as bp_contrevenant_principal,
    contrevenant_principal.code_postal as code_postal_contrevenant_principal,
    contrevenant_principal.localite as localite_contrevenant_principal,
    CASE 
        WHEN contrevenant_principal.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', contrevenant_principal.cedex)
    END as cedex_contrevenant_principal,
    contrevenant_principal.pays as pays_contrevenant_principal,
    contrevenant_principal.division_territoriale as division_territoriale_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite = ''particulier''
        THEN to_char(contrevenant_principal.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_contrevenant_principal,
    CASE WHEN contrevenant_principal.qualite = ''particulier''
        THEN CONCAT_WS('' '', contrevenant_principal.particulier_commune_naissance, contrevenant_principal.particulier_departement_naissance, contrevenant_principal.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_contrevenant_principal,
    contrevenant_principal.courriel as email_contrevenant_principal,
    CONCAT_WS('' '', contrevenant_principal.indicatif, CONCAT_WS('' / '', contrevenant_principal.telephone_fixe, contrevenant_principal.telephone_mobile)) as coordonnees_telephonique_contrevenant_principal,

    --Coordonnées du contrevenant 1

    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_1_civilite.libelle, contrevenant_1.particulier_nom, contrevenant_1.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_1.personne_morale_nom IS NOT NULL OR contrevenant_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_1.personne_morale_raison_sociale, contrevenant_1.personne_morale_denomination, ''représenté(e) par'', contrevenant_1_civilite.libelle, contrevenant_1.personne_morale_nom, contrevenant_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_1.personne_morale_raison_sociale, '' '', contrevenant_1.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier'' OR contrevenant_1.personne_morale_nom IS NOT NULL OR contrevenant_1.personne_morale_prenom IS NOT NULL
        THEN contrevenant_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN contrevenant_1.particulier_nom
        ELSE
            CASE WHEN contrevenant_1.personne_morale_nom IS NOT NULL
                THEN contrevenant_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN contrevenant_1.particulier_prenom
        ELSE
            CASE WHEN contrevenant_1.personne_morale_prenom IS NOT NULL
                THEN contrevenant_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_1_civilite.libelle, contrevenant_1.particulier_nom, contrevenant_1.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN contrevenant_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN contrevenant_1.particulier_nom
        ELSE ''''
    END as nom_qualite_part_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN contrevenant_1.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_contrevenant_1,
    CASE WHEN contrevenant_1.personne_morale_nom IS NOT NULL OR contrevenant_1.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', contrevenant_1.personne_morale_raison_sociale, contrevenant_1.personne_morale_denomination, ''représenté(e) par'', contrevenant_1_civilite.libelle, contrevenant_1.personne_morale_nom, contrevenant_1.personne_morale_prenom))
        ELSE TRIM(CONCAT(contrevenant_1.personne_morale_raison_sociale, '' '', contrevenant_1.personne_morale_denomination))
    END as nom_complet_qualite_pm_contrevenant_1,
    CASE WHEN contrevenant_1.personne_morale_nom IS NOT NULL OR contrevenant_1.personne_morale_prenom IS NOT NULL
        THEN contrevenant_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_contrevenant_1,
    CASE WHEN contrevenant_1.personne_morale_nom IS NOT NULL
        THEN contrevenant_1.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_contrevenant_1,
    CASE WHEN contrevenant_1.personne_morale_prenom IS NOT NULL
        THEN contrevenant_1.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_1.personne_morale_raison_sociale
    END as raison_sociale_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_1.personne_morale_denomination
    END as denomination_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_1.personne_morale_siret
    END as siret_contrevenant_1,
    CASE WHEN contrevenant_1.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_1.personne_morale_categorie_juridique
    END as categorie_juridique_contrevenant_1,
    contrevenant_1.numero as numero_contrevenant_1,
&DB_PREFIXEadresse(contrevenant_1.numero::text, contrevenant_1.voie::text, contrevenant_1.complement::text, contrevenant_1.lieu_dit::text, contrevenant_1.bp::text, contrevenant_1.code_postal::text, contrevenant_1.localite::text, contrevenant_1.cedex::text, contrevenant_1.pays::text) as adresse_contrevenant_1_sdl,
&DB_PREFIXEadresse(contrevenant_1.numero::text, contrevenant_1.voie::text, contrevenant_1.complement::text, contrevenant_1.lieu_dit::text, contrevenant_1.bp::text, contrevenant_1.code_postal::text, contrevenant_1.localite::text, contrevenant_1.cedex::text, contrevenant_1.pays::text, '' ''::text) as adresse_contrevenant_1,
    contrevenant_1.voie as voie_contrevenant_1,
    contrevenant_1.complement as complement_contrevenant_1,
    contrevenant_1.lieu_dit as lieu_dit_contrevenant_1,
    CASE 
        WHEN contrevenant_1.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', contrevenant_1.bp)
    END as bp_contrevenant_1,
    contrevenant_1.code_postal as code_postal_contrevenant_1,
    contrevenant_1.localite as localite_contrevenant_1,
    CASE 
        WHEN contrevenant_1.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', contrevenant_1.cedex)
    END as cedex_contrevenant_1,
    contrevenant_1.pays as pays_contrevenant_1,
    contrevenant_1.division_territoriale as division_territoriale_contrevenant_1,
    CASE WHEN contrevenant_1.qualite = ''particulier''
        THEN to_char(contrevenant_1.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_contrevenant_1,
    CASE WHEN contrevenant_1.qualite = ''particulier''
        THEN CONCAT_WS('' '', contrevenant_1.particulier_commune_naissance, contrevenant_1.particulier_departement_naissance, contrevenant_1.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_contrevenant_1,
    contrevenant_1.courriel as email_contrevenant_1,
    CONCAT_WS('' '', contrevenant_1.indicatif, CONCAT_WS('' / '', contrevenant_1.telephone_fixe, contrevenant_1.telephone_mobile)) as coordonnees_telephonique_contrevenant_1,

    --Coordonnées du contrevenant 2

    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_2_civilite.libelle, contrevenant_2.particulier_nom, contrevenant_2.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_2.personne_morale_nom IS NOT NULL OR contrevenant_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_2.personne_morale_raison_sociale, contrevenant_2.personne_morale_denomination, ''représenté(e) par'', contrevenant_2_civilite.libelle, contrevenant_2.personne_morale_nom, contrevenant_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_2.personne_morale_raison_sociale, '' '', contrevenant_2.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier'' OR contrevenant_2.personne_morale_nom IS NOT NULL OR contrevenant_2.personne_morale_prenom IS NOT NULL
        THEN contrevenant_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN contrevenant_2.particulier_nom
        ELSE
            CASE WHEN contrevenant_2.personne_morale_nom IS NOT NULL
                THEN contrevenant_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN contrevenant_2.particulier_prenom
        ELSE
            CASE WHEN contrevenant_2.personne_morale_prenom IS NOT NULL
                THEN contrevenant_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_2_civilite.libelle, contrevenant_2.particulier_nom, contrevenant_2.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN contrevenant_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN contrevenant_2.particulier_nom
        ELSE ''''
    END as nom_qualite_part_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN contrevenant_2.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_contrevenant_2,
    CASE WHEN contrevenant_2.personne_morale_nom IS NOT NULL OR contrevenant_2.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', contrevenant_2.personne_morale_raison_sociale, contrevenant_2.personne_morale_denomination, ''représenté(e) par'', contrevenant_2_civilite.libelle, contrevenant_2.personne_morale_nom, contrevenant_2.personne_morale_prenom))
        ELSE TRIM(CONCAT(contrevenant_2.personne_morale_raison_sociale, '' '', contrevenant_2.personne_morale_denomination))
    END as nom_complet_qualite_pm_contrevenant_2,
    CASE WHEN contrevenant_2.personne_morale_nom IS NOT NULL OR contrevenant_2.personne_morale_prenom IS NOT NULL
        THEN contrevenant_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_contrevenant_2,
    CASE WHEN contrevenant_2.personne_morale_nom IS NOT NULL
        THEN contrevenant_2.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_contrevenant_2,
    CASE WHEN contrevenant_2.personne_morale_prenom IS NOT NULL
        THEN contrevenant_2.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_2.personne_morale_raison_sociale
    END as raison_sociale_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_2.personne_morale_denomination
    END as denomination_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_2.personne_morale_categorie_juridique
    END as categorie_juridique_contrevenant_2,
    CASE WHEN contrevenant_2.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_2.personne_morale_siret
    END as siret_contrevenant_2,
    contrevenant_2.numero as numero_contrevenant_2,
&DB_PREFIXEadresse(contrevenant_2.numero::text, contrevenant_2.voie::text, contrevenant_2.complement::text, contrevenant_2.lieu_dit::text, contrevenant_2.bp::text, contrevenant_2.code_postal::text, contrevenant_2.localite::text, contrevenant_2.cedex::text, contrevenant_2.pays::text) as adresse_contrevenant_2_sdl,
&DB_PREFIXEadresse(contrevenant_2.numero::text, contrevenant_2.voie::text, contrevenant_2.complement::text, contrevenant_2.lieu_dit::text, contrevenant_2.bp::text, contrevenant_2.code_postal::text, contrevenant_2.localite::text, contrevenant_2.cedex::text, contrevenant_2.pays::text, '' ''::text) as adresse_contrevenant_2,
    contrevenant_2.voie as voie_contrevenant_2,
    contrevenant_2.complement as complement_contrevenant_2,
    contrevenant_2.lieu_dit as lieu_dit_contrevenant_2,
    CASE 
        WHEN contrevenant_2.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', contrevenant_2.bp)
    END as bp_contrevenant_2,
    contrevenant_2.code_postal as code_postal_contrevenant_2,
    contrevenant_2.localite as localite_contrevenant_2,
    CASE 
        WHEN contrevenant_2.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', contrevenant_2.cedex)
    END as cedex_contrevenant_2,
    contrevenant_2.pays as pays_contrevenant_2,
    contrevenant_2.division_territoriale as division_territoriale_contrevenant_2,
    CASE WHEN contrevenant_2.qualite = ''particulier''
        THEN to_char(contrevenant_2.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_contrevenant_2,
    CASE WHEN contrevenant_2.qualite = ''particulier''
        THEN CONCAT_WS('' '', contrevenant_2.particulier_commune_naissance, contrevenant_2.particulier_departement_naissance, contrevenant_2.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_contrevenant_2,
    contrevenant_2.courriel as email_contrevenant_2,
    CONCAT_WS('' '', contrevenant_2.indicatif, CONCAT_WS('' / '', contrevenant_2.telephone_fixe, contrevenant_2.telephone_mobile)) as coordonnees_telephonique_contrevenant_2,

    --Coordonnées du contrevenant 3

    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_3_civilite.libelle, contrevenant_3.particulier_nom, contrevenant_3.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL OR contrevenant_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_3.personne_morale_raison_sociale, contrevenant_3.personne_morale_denomination, ''représenté(e) par'', contrevenant_3_civilite.libelle, contrevenant_3.personne_morale_nom, contrevenant_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_3.personne_morale_raison_sociale, '' '', contrevenant_3.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier'' OR contrevenant_3.personne_morale_nom IS NOT NULL OR contrevenant_3.personne_morale_prenom IS NOT NULL
        THEN contrevenant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3.particulier_nom
        ELSE
            CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL
                THEN contrevenant_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3.particulier_prenom
        ELSE
            CASE WHEN contrevenant_3.personne_morale_prenom IS NOT NULL
                THEN contrevenant_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_3_civilite.libelle, contrevenant_3.particulier_nom, contrevenant_3.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3.particulier_nom
        ELSE ''''
    END as nom_qualite_part_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_contrevenant_3,
    CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL OR contrevenant_3.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', contrevenant_3.personne_morale_raison_sociale, contrevenant_3.personne_morale_denomination, ''représenté(e) par'', contrevenant_3_civilite.libelle, contrevenant_3.personne_morale_nom, contrevenant_3.personne_morale_prenom))
        ELSE TRIM(CONCAT(contrevenant_3.personne_morale_raison_sociale, '' '', contrevenant_3.personne_morale_denomination))
    END as nom_complet_qualite_pm_contrevenant_3,
    CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL OR contrevenant_3.personne_morale_prenom IS NOT NULL
        THEN contrevenant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_contrevenant_3,
    CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL
        THEN contrevenant_3.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_contrevenant_3,
    CASE WHEN contrevenant_3.personne_morale_prenom IS NOT NULL
        THEN contrevenant_3.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_3_civilite.libelle, contrevenant_3.particulier_nom, contrevenant_3.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL OR contrevenant_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_3.personne_morale_raison_sociale, contrevenant_3.personne_morale_denomination, ''représenté(e) par'', contrevenant_3_civilite.libelle, contrevenant_3.personne_morale_nom, contrevenant_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_3.personne_morale_raison_sociale, '' '', contrevenant_3.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier'' OR contrevenant_3.personne_morale_nom IS NOT NULL OR contrevenant_3.personne_morale_prenom IS NOT NULL
        THEN contrevenant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3.particulier_nom
        ELSE
            CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL
                THEN contrevenant_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3.particulier_prenom
        ELSE
            CASE WHEN contrevenant_3.personne_morale_prenom IS NOT NULL
                THEN contrevenant_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_3_civilite.libelle, contrevenant_3.particulier_nom, contrevenant_3.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3.particulier_nom
        ELSE ''''
    END as nom_qualite_part_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN contrevenant_3.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_contrevenant_3,
    CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL OR contrevenant_3.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', contrevenant_3.personne_morale_raison_sociale, contrevenant_3.personne_morale_denomination, ''représenté(e) par'', contrevenant_3_civilite.libelle, contrevenant_3.personne_morale_nom, contrevenant_3.personne_morale_prenom))
        ELSE TRIM(CONCAT(contrevenant_3.personne_morale_raison_sociale, '' '', contrevenant_3.personne_morale_denomination))
    END as nom_complet_qualite_pm_contrevenant_3,
    CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL OR contrevenant_3.personne_morale_prenom IS NOT NULL
        THEN contrevenant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_contrevenant_3,
    CASE WHEN contrevenant_3.personne_morale_nom IS NOT NULL
        THEN contrevenant_3.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_contrevenant_3,
    CASE WHEN contrevenant_3.personne_morale_prenom IS NOT NULL
        THEN contrevenant_3.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_3.personne_morale_raison_sociale
    END as raison_sociale_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_3.personne_morale_denomination
    END as denomination_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_3.personne_morale_siret
    END as siret_contrevenant_3,
    CASE WHEN contrevenant_3.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_3.personne_morale_categorie_juridique
    END as categorie_juridique_contrevenant_3,
    contrevenant_3.numero as numero_contrevenant_3,
&DB_PREFIXEadresse(contrevenant_3.numero::text, contrevenant_3.voie::text, contrevenant_3.complement::text, contrevenant_3.lieu_dit::text, contrevenant_3.bp::text, contrevenant_3.code_postal::text, contrevenant_3.localite::text, contrevenant_3.cedex::text, contrevenant_3.pays::text) as adresse_contrevenant_3_sdl,
&DB_PREFIXEadresse(contrevenant_3.numero::text, contrevenant_3.voie::text, contrevenant_3.complement::text, contrevenant_3.lieu_dit::text, contrevenant_3.bp::text, contrevenant_3.code_postal::text, contrevenant_3.localite::text, contrevenant_3.cedex::text, contrevenant_3.pays::text, '' ''::text) as adresse_contrevenant_3,
    contrevenant_3.voie as voie_contrevenant_3,
    contrevenant_3.complement as complement_contrevenant_3,
    contrevenant_3.lieu_dit as lieu_dit_contrevenant_3,
    CASE 
        WHEN contrevenant_3.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', contrevenant_3.bp)
    END as bp_contrevenant_3,
    contrevenant_3.code_postal as code_postal_contrevenant_3,
    contrevenant_3.localite as localite_contrevenant_3,
    CASE 
        WHEN contrevenant_3.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', contrevenant_3.cedex)
    END as cedex_contrevenant_3,
    contrevenant_3.pays as pays_contrevenant_3,
    contrevenant_3.division_territoriale as division_territoriale_contrevenant_3,
    CASE WHEN contrevenant_3.qualite = ''particulier''
        THEN to_char(contrevenant_3.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_contrevenant_3,
    CASE WHEN contrevenant_3.qualite = ''particulier''
        THEN CONCAT_WS('' '', contrevenant_3.particulier_commune_naissance, contrevenant_3.particulier_departement_naissance, contrevenant_3.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_contrevenant_3,
    contrevenant_3.courriel as email_contrevenant_3,
    CONCAT_WS('' '', contrevenant_3.indicatif, CONCAT_WS('' / '', contrevenant_3.telephone_fixe, contrevenant_3.telephone_mobile)) as coordonnees_telephonique_contrevenant_3,

    --Coordonnées du contrevenant 4

    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_4_civilite.libelle, contrevenant_4.particulier_nom, contrevenant_4.particulier_prenom))
        ELSE
            CASE WHEN contrevenant_4.personne_morale_nom IS NOT NULL OR contrevenant_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', contrevenant_4.personne_morale_raison_sociale, contrevenant_4.personne_morale_denomination, ''représenté(e) par'', contrevenant_4_civilite.libelle, contrevenant_4.personne_morale_nom, contrevenant_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(contrevenant_4.personne_morale_raison_sociale, '' '', contrevenant_4.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier'' OR contrevenant_4.personne_morale_nom IS NOT NULL OR contrevenant_4.personne_morale_prenom IS NOT NULL
        THEN contrevenant_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN contrevenant_4.particulier_nom
        ELSE
            CASE WHEN contrevenant_4.personne_morale_nom IS NOT NULL
                THEN contrevenant_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN contrevenant_4.particulier_prenom
        ELSE
            CASE WHEN contrevenant_4.personne_morale_prenom IS NOT NULL
                THEN contrevenant_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', contrevenant_4_civilite.libelle, contrevenant_4.particulier_nom, contrevenant_4.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN contrevenant_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN contrevenant_4.particulier_nom
        ELSE ''''
    END as nom_qualite_part_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN contrevenant_4.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_contrevenant_4,
    CASE WHEN contrevenant_4.personne_morale_nom IS NOT NULL OR contrevenant_4.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', contrevenant_4.personne_morale_raison_sociale, contrevenant_4.personne_morale_denomination, ''représenté(e) par'', contrevenant_4_civilite.libelle, contrevenant_4.personne_morale_nom, contrevenant_4.personne_morale_prenom))
        ELSE TRIM(CONCAT(contrevenant_4.personne_morale_raison_sociale, '' '', contrevenant_4.personne_morale_denomination))
    END as nom_complet_qualite_pm_contrevenant_4,
    CASE WHEN contrevenant_4.personne_morale_nom IS NOT NULL OR contrevenant_4.personne_morale_prenom IS NOT NULL
        THEN contrevenant_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_contrevenant_4,
    CASE WHEN contrevenant_4.personne_morale_nom IS NOT NULL
        THEN contrevenant_4.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_contrevenant_4,
    CASE WHEN contrevenant_4.personne_morale_prenom IS NOT NULL
        THEN contrevenant_4.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_4.personne_morale_raison_sociale
    END as raison_sociale_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_4.personne_morale_denomination
    END as denomination_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_4.personne_morale_categorie_juridique
    END as categorie_juridique_contrevenant_4,
    CASE WHEN contrevenant_4.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_4.personne_morale_siret
    END as siret_contrevenant_4,
    contrevenant_4.numero as numero_contrevenant_4,
&DB_PREFIXEadresse(contrevenant_4.numero::text, contrevenant_4.voie::text, contrevenant_4.complement::text, contrevenant_4.lieu_dit::text, contrevenant_4.bp::text, contrevenant_4.code_postal::text, contrevenant_4.localite::text, contrevenant_4.cedex::text, contrevenant_4.pays::text) as adresse_contrevenant_4_sdl,
&DB_PREFIXEadresse(contrevenant_4.numero::text, contrevenant_4.voie::text, contrevenant_4.complement::text, contrevenant_4.lieu_dit::text, contrevenant_4.bp::text, contrevenant_4.code_postal::text, contrevenant_4.localite::text, contrevenant_4.cedex::text, contrevenant_4.pays::text, '' ''::text) as adresse_contrevenant_4,
    contrevenant_4.voie as voie_contrevenant_4,
    contrevenant_4.complement as complement_contrevenant_4,
    contrevenant_4.lieu_dit as lieu_dit_contrevenant_4,
    CASE 
        WHEN contrevenant_4.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', contrevenant_4.bp)
    END as bp_contrevenant_4,
    contrevenant_4.code_postal as code_postal_contrevenant_4,
    contrevenant_4.localite as localite_contrevenant_4,
    CASE 
        WHEN contrevenant_4.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', contrevenant_4.cedex)
    END as cedex_contrevenant_4,
    contrevenant_4.pays as pays_contrevenant_4,
    contrevenant_4.division_territoriale as division_territoriale_contrevenant_4,
    CASE WHEN contrevenant_4.qualite = ''particulier''
        THEN to_char(contrevenant_4.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_contrevenant_4,
    CASE WHEN contrevenant_4.qualite = ''particulier''
        THEN CONCAT_WS('' '', contrevenant_4.particulier_commune_naissance, contrevenant_4.particulier_departement_naissance, contrevenant_4.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_contrevenant_4,
    contrevenant_4.courriel as email_contrevenant_4,
    CONCAT_WS('' '', contrevenant_4.indicatif, CONCAT_WS('' / '', contrevenant_4.telephone_fixe, contrevenant_4.telephone_mobile)) as coordonnees_telephonique_contrevenant_4,

    --Coordonnées du contrevenant 5

    CASE WHEN contrevenant_5.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_5.personne_morale_raison_sociale
    END as raison_sociale_contrevenant_5,
    CASE WHEN contrevenant_5.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_5.personne_morale_denomination
    END as denomination_contrevenant_5,
    CASE WHEN contrevenant_5.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_5.personne_morale_categorie_juridique
    END as categorie_juridique_contrevenant_5,
    CASE WHEN contrevenant_5.qualite=''particulier''
        THEN ''''
        ELSE contrevenant_5.personne_morale_siret
    END as siret_contrevenant_5,
    contrevenant_5.numero as numero_contrevenant_5,
&DB_PREFIXEadresse(contrevenant_5.numero::text, contrevenant_5.voie::text, contrevenant_5.complement::text, contrevenant_5.lieu_dit::text, contrevenant_5.bp::text, contrevenant_5.code_postal::text, contrevenant_5.localite::text, contrevenant_5.cedex::text, contrevenant_5.pays::text) as adresse_contrevenant_5_sdl,
&DB_PREFIXEadresse(contrevenant_5.numero::text, contrevenant_5.voie::text, contrevenant_5.complement::text, contrevenant_5.lieu_dit::text, contrevenant_5.bp::text, contrevenant_5.code_postal::text, contrevenant_5.localite::text, contrevenant_5.cedex::text, contrevenant_5.pays::text, '' ''::text) as adresse_contrevenant_5,
    contrevenant_5.voie as voie_contrevenant_5,
    contrevenant_5.complement as complement_contrevenant_5,
    contrevenant_5.lieu_dit as lieu_dit_contrevenant_5,
    CASE 
        WHEN contrevenant_5.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', contrevenant_5.bp)
    END as bp_contrevenant_5,
    contrevenant_5.code_postal as code_postal_contrevenant_5,
    contrevenant_5.localite as localite_contrevenant_5,
    CASE 
        WHEN contrevenant_5.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', contrevenant_5.cedex)
    END as cedex_contrevenant_5,
    contrevenant_5.pays as pays_contrevenant_5,
    contrevenant_5.division_territoriale as division_territoriale_contrevenant_5,
    CASE WHEN contrevenant_5.qualite = ''particulier''
        THEN to_char(contrevenant_5.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_contrevenant_5,
    CASE WHEN contrevenant_5.qualite = ''particulier''
        THEN CONCAT_WS('' '', contrevenant_5.particulier_commune_naissance, contrevenant_5.particulier_departement_naissance, contrevenant_5.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_contrevenant_5,
    contrevenant_5.courriel as email_contrevenant_5,
    CONCAT_WS('' '', contrevenant_5.indicatif, CONCAT_WS('' / '', contrevenant_5.telephone_fixe, contrevenant_5.telephone_mobile)) as coordonnees_telephonique_contrevenant_5,

    --Coordonnées du requérant principal

    CASE WHEN requerant_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_principal_civilite.libelle, requerant_principal.particulier_nom, requerant_principal.particulier_prenom))
        ELSE
            CASE WHEN requerant_principal.personne_morale_nom IS NOT NULL OR requerant_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_principal.personne_morale_raison_sociale, requerant_principal.personne_morale_denomination, ''représenté(e) par'', requerant_principal_civilite.libelle, requerant_principal.personne_morale_nom, requerant_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_principal.personne_morale_raison_sociale, '' '', requerant_principal.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier'' OR requerant_principal.personne_morale_nom IS NOT NULL OR requerant_principal.personne_morale_prenom IS NOT NULL
        THEN requerant_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN requerant_principal.particulier_nom
        ELSE
            CASE WHEN requerant_principal.personne_morale_nom IS NOT NULL
                THEN requerant_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN requerant_principal.particulier_prenom
        ELSE
            CASE WHEN requerant_principal.personne_morale_prenom IS NOT NULL
                THEN requerant_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_principal_civilite.libelle, requerant_principal.particulier_nom, requerant_principal.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN requerant_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN requerant_principal.particulier_nom
        ELSE ''''
    END as nom_qualite_part_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN requerant_principal.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_requerant_principal,
    CASE WHEN requerant_principal.personne_morale_nom IS NOT NULL OR requerant_principal.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', requerant_principal.personne_morale_raison_sociale, requerant_principal.personne_morale_denomination, ''représenté(e) par'', requerant_principal_civilite.libelle, requerant_principal.personne_morale_nom, requerant_principal.personne_morale_prenom))
        ELSE TRIM(CONCAT(requerant_principal.personne_morale_raison_sociale, '' '', requerant_principal.personne_morale_denomination))
    END as nom_complet_qualite_pm_requerant_principal,
    CASE WHEN requerant_principal.personne_morale_nom IS NOT NULL OR requerant_principal.personne_morale_prenom IS NOT NULL
        THEN requerant_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_requerant_principal,
    CASE WHEN requerant_principal.personne_morale_nom IS NOT NULL
        THEN requerant_principal.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_requerant_principal,
    CASE WHEN requerant_principal.personne_morale_prenom IS NOT NULL
        THEN requerant_principal.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN ''''
        ELSE requerant_principal.personne_morale_raison_sociale
    END as raison_sociale_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN ''''
        ELSE requerant_principal.personne_morale_denomination
    END as denomination_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN ''''
        ELSE requerant_principal.personne_morale_siret
    END as siret_requerant_principal,
    CASE WHEN requerant_principal.qualite=''particulier''
        THEN ''''
        ELSE requerant_principal.personne_morale_categorie_juridique
    END as categorie_juridique_requerant_principal,
    requerant_principal.numero as numero_requerant_principal,
&DB_PREFIXEadresse(requerant_principal.numero::text, requerant_principal.voie::text, requerant_principal.complement::text, requerant_principal.lieu_dit::text, requerant_principal.bp::text, requerant_principal.code_postal::text, requerant_principal.localite::text, requerant_principal.cedex::text, requerant_principal.pays::text) as adresse_requerant_principal_sdl,
&DB_PREFIXEadresse(requerant_principal.numero::text, requerant_principal.voie::text, requerant_principal.complement::text, requerant_principal.lieu_dit::text, requerant_principal.bp::text, requerant_principal.code_postal::text, requerant_principal.localite::text, requerant_principal.cedex::text, requerant_principal.pays::text, '' ''::text) as adresse_requerant_principal,
    requerant_principal.voie as voie_requerant_principal,
    requerant_principal.complement as complement_requerant_principal,
    requerant_principal.lieu_dit as lieu_dit_requerant_principal,
    CASE 
        WHEN requerant_principal.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', requerant_principal.bp)
    END as bp_requerant_principal,
    requerant_principal.code_postal as code_postal_requerant_principal,
    requerant_principal.localite as localite_requerant_principal,
    CASE 
        WHEN requerant_principal.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', requerant_principal.cedex)
    END as cedex_requerant_principal,
    requerant_principal.pays as pays_requerant_principal,
    requerant_principal.division_territoriale as division_territoriale_requerant_principal,
    CASE WHEN requerant_principal.qualite = ''particulier''
        THEN to_char(requerant_principal.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_requerant_principal,
    CASE WHEN requerant_principal.qualite = ''particulier''
        THEN CONCAT_WS('' '', requerant_principal.particulier_commune_naissance, requerant_principal.particulier_departement_naissance, requerant_principal.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_requerant_principal,
    requerant_principal.courriel as email_requerant_principal,
    CONCAT_WS('' '', requerant_principal.indicatif, CONCAT_WS('' / '', requerant_principal.telephone_fixe, requerant_principal.telephone_mobile)) as coordonnees_telephonique_requerant_principal,

    --Coordonnées du requérant 1

    CASE WHEN requerant_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_1_civilite.libelle, requerant_1.particulier_nom, requerant_1.particulier_prenom))
        ELSE
            CASE WHEN requerant_1.personne_morale_nom IS NOT NULL OR requerant_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_1.personne_morale_raison_sociale, requerant_1.personne_morale_denomination, ''représenté(e) par'', requerant_1_civilite.libelle, requerant_1.personne_morale_nom, requerant_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_1.personne_morale_raison_sociale, '' '', requerant_1.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier'' OR requerant_1.personne_morale_nom IS NOT NULL OR requerant_1.personne_morale_prenom IS NOT NULL
        THEN requerant_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN requerant_1.particulier_nom
        ELSE
            CASE WHEN requerant_1.personne_morale_nom IS NOT NULL
                THEN requerant_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN requerant_1.particulier_prenom
        ELSE
            CASE WHEN requerant_1.personne_morale_prenom IS NOT NULL
                THEN requerant_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_1_civilite.libelle, requerant_1.particulier_nom, requerant_1.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN requerant_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN requerant_1.particulier_nom
        ELSE ''''
    END as nom_qualite_part_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN requerant_1.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_requerant_1,
    CASE WHEN requerant_1.personne_morale_nom IS NOT NULL OR requerant_1.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', requerant_1.personne_morale_raison_sociale, requerant_1.personne_morale_denomination, ''représenté(e) par'', requerant_1_civilite.libelle, requerant_1.personne_morale_nom, requerant_1.personne_morale_prenom))
        ELSE TRIM(CONCAT(requerant_1.personne_morale_raison_sociale, '' '', requerant_1.personne_morale_denomination))
    END as nom_complet_qualite_pm_requerant_1,
    CASE WHEN requerant_1.personne_morale_nom IS NOT NULL OR requerant_1.personne_morale_prenom IS NOT NULL
        THEN requerant_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_requerant_1,
    CASE WHEN requerant_1.personne_morale_nom IS NOT NULL
        THEN requerant_1.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_requerant_1,
    CASE WHEN requerant_1.personne_morale_prenom IS NOT NULL
        THEN requerant_1.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN ''''
        ELSE requerant_1.personne_morale_raison_sociale
    END as raison_sociale_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN ''''
        ELSE requerant_1.personne_morale_denomination
    END as denomination_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN ''''
        ELSE requerant_1.personne_morale_siret
    END as siret_requerant_1,
    CASE WHEN requerant_1.qualite=''particulier''
        THEN ''''
        ELSE requerant_1.personne_morale_categorie_juridique
    END as categorie_juridique_requerant_1,
    requerant_1.numero as numero_requerant_1,
&DB_PREFIXEadresse(requerant_1.numero::text, requerant_1.voie::text, requerant_1.complement::text, requerant_1.lieu_dit::text, requerant_1.bp::text, requerant_1.code_postal::text, requerant_1.localite::text, requerant_1.cedex::text, requerant_1.pays::text) as adresse_requerant_1_sdl,
&DB_PREFIXEadresse(requerant_1.numero::text, requerant_1.voie::text, requerant_1.complement::text, requerant_1.lieu_dit::text, requerant_1.bp::text, requerant_1.code_postal::text, requerant_1.localite::text, requerant_1.cedex::text, requerant_1.pays::text, '' ''::text) as adresse_requerant_1,
    requerant_1.voie as voie_requerant_1,
    requerant_1.complement as complement_requerant_1,
    requerant_1.lieu_dit as lieu_dit_requerant_1,
    CASE 
        WHEN requerant_1.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', requerant_1.bp)
    END as bp_requerant_1,
    requerant_1.code_postal as code_postal_requerant_1,
    requerant_1.localite as localite_requerant_1,
    CASE 
        WHEN requerant_1.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', requerant_1.cedex)
    END as cedex_requerant_1,
    requerant_1.pays as pays_requerant_1,
    requerant_1.division_territoriale as division_territoriale_requerant_1,
    CASE WHEN requerant_1.qualite = ''particulier''
        THEN to_char(requerant_1.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_requerant_1,
    CASE WHEN requerant_1.qualite = ''particulier''
        THEN CONCAT_WS('' '', requerant_1.particulier_commune_naissance, requerant_1.particulier_departement_naissance, requerant_1.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_requerant_1,
    requerant_1.courriel as email_requerant_1,
    CONCAT_WS('' '', requerant_1.indicatif, CONCAT_WS('' / '', requerant_1.telephone_fixe, requerant_1.telephone_mobile)) as coordonnees_telephonique_requerant_1,

    --Coordonnées du requérant 2

    CASE WHEN requerant_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_2_civilite.libelle, requerant_2.particulier_nom, requerant_2.particulier_prenom))
        ELSE
            CASE WHEN requerant_2.personne_morale_nom IS NOT NULL OR requerant_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_2.personne_morale_raison_sociale, requerant_2.personne_morale_denomination, ''représenté(e) par'', requerant_2_civilite.libelle, requerant_2.personne_morale_nom, requerant_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_2.personne_morale_raison_sociale, '' '', requerant_2.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier'' OR requerant_2.personne_morale_nom IS NOT NULL OR requerant_2.personne_morale_prenom IS NOT NULL
        THEN requerant_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN requerant_2.particulier_nom
        ELSE
            CASE WHEN requerant_2.personne_morale_nom IS NOT NULL
                THEN requerant_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN requerant_2.particulier_prenom
        ELSE
            CASE WHEN requerant_2.personne_morale_prenom IS NOT NULL
                THEN requerant_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_2_civilite.libelle, requerant_2.particulier_nom, requerant_2.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN requerant_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN requerant_2.particulier_nom
        ELSE ''''
    END as nom_qualite_part_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN requerant_2.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_requerant_2,
    CASE WHEN requerant_2.personne_morale_nom IS NOT NULL OR requerant_2.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', requerant_2.personne_morale_raison_sociale, requerant_2.personne_morale_denomination, ''représenté(e) par'', requerant_2_civilite.libelle, requerant_2.personne_morale_nom, requerant_2.personne_morale_prenom))
        ELSE TRIM(CONCAT(requerant_2.personne_morale_raison_sociale, '' '', requerant_2.personne_morale_denomination))
    END as nom_complet_qualite_pm_requerant_2,
    CASE WHEN requerant_2.personne_morale_nom IS NOT NULL OR requerant_2.personne_morale_prenom IS NOT NULL
        THEN requerant_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_requerant_2,
    CASE WHEN requerant_2.personne_morale_nom IS NOT NULL
        THEN requerant_2.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_requerant_2,
    CASE WHEN requerant_2.personne_morale_prenom IS NOT NULL
        THEN requerant_2.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN ''''
        ELSE requerant_2.personne_morale_raison_sociale
    END as raison_sociale_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN ''''
        ELSE requerant_2.personne_morale_denomination
    END as denomination_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN ''''
        ELSE requerant_2.personne_morale_categorie_juridique
    END as categorie_juridique_requerant_2,
    CASE WHEN requerant_2.qualite=''particulier''
        THEN ''''
        ELSE requerant_2.personne_morale_siret
    END as siret_requerant_2,
    requerant_2.numero as numero_requerant_2,
&DB_PREFIXEadresse(requerant_2.numero::text, requerant_2.voie::text, requerant_2.complement::text, requerant_2.lieu_dit::text, requerant_2.bp::text, requerant_2.code_postal::text, requerant_2.localite::text, requerant_2.cedex::text, requerant_2.pays::text) as adresse_requerant_2_sdl,
&DB_PREFIXEadresse(requerant_2.numero::text, requerant_2.voie::text, requerant_2.complement::text, requerant_2.lieu_dit::text, requerant_2.bp::text, requerant_2.code_postal::text, requerant_2.localite::text, requerant_2.cedex::text, requerant_2.pays::text, '' ''::text) as adresse_requerant_2,
    requerant_2.voie as voie_requerant_2,
    requerant_2.complement as complement_requerant_2,
    requerant_2.lieu_dit as lieu_dit_requerant_2,
    CASE 
        WHEN requerant_2.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', requerant_2.bp)
    END as bp_requerant_2,
    requerant_2.code_postal as code_postal_requerant_2,
    requerant_2.localite as localite_requerant_2,
    CASE 
        WHEN requerant_2.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', requerant_2.cedex)
    END as cedex_requerant_2,
    requerant_2.pays as pays_requerant_2,
    requerant_2.division_territoriale as division_territoriale_requerant_2,
    CASE WHEN requerant_2.qualite = ''particulier''
        THEN to_char(requerant_2.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_requerant_2,
    CASE WHEN requerant_2.qualite = ''particulier''
        THEN CONCAT_WS('' '', requerant_2.particulier_commune_naissance, requerant_2.particulier_departement_naissance, requerant_2.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_requerant_2,
    requerant_2.courriel as email_requerant_2,
    CONCAT_WS('' '', requerant_2.indicatif, CONCAT_WS('' / '', requerant_2.telephone_fixe, requerant_2.telephone_mobile)) as coordonnees_telephonique_requerant_2,

    --Coordonnées du requérant 3

    CASE WHEN requerant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_3_civilite.libelle, requerant_3.particulier_nom, requerant_3.particulier_prenom))
        ELSE
            CASE WHEN requerant_3.personne_morale_nom IS NOT NULL OR requerant_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_3.personne_morale_raison_sociale, requerant_3.personne_morale_denomination, ''représenté(e) par'', requerant_3_civilite.libelle, requerant_3.personne_morale_nom, requerant_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_3.personne_morale_raison_sociale, '' '', requerant_3.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier'' OR requerant_3.personne_morale_nom IS NOT NULL OR requerant_3.personne_morale_prenom IS NOT NULL
        THEN requerant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN requerant_3.particulier_nom
        ELSE
            CASE WHEN requerant_3.personne_morale_nom IS NOT NULL
                THEN requerant_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN requerant_3.particulier_prenom
        ELSE
            CASE WHEN requerant_3.personne_morale_prenom IS NOT NULL
                THEN requerant_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_3_civilite.libelle, requerant_3.particulier_nom, requerant_3.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN requerant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN requerant_3.particulier_nom
        ELSE ''''
    END as nom_qualite_part_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN requerant_3.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_requerant_3,
    CASE WHEN requerant_3.personne_morale_nom IS NOT NULL OR requerant_3.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', requerant_3.personne_morale_raison_sociale, requerant_3.personne_morale_denomination, ''représenté(e) par'', requerant_3_civilite.libelle, requerant_3.personne_morale_nom, requerant_3.personne_morale_prenom))
        ELSE TRIM(CONCAT(requerant_3.personne_morale_raison_sociale, '' '', requerant_3.personne_morale_denomination))
    END as nom_complet_qualite_pm_requerant_3,
    CASE WHEN requerant_3.personne_morale_nom IS NOT NULL OR requerant_3.personne_morale_prenom IS NOT NULL
        THEN requerant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_requerant_3,
    CASE WHEN requerant_3.personne_morale_nom IS NOT NULL
        THEN requerant_3.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_requerant_3,
    CASE WHEN requerant_3.personne_morale_prenom IS NOT NULL
        THEN requerant_3.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN ''''
        ELSE requerant_3.personne_morale_raison_sociale
    END as raison_sociale_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN ''''
        ELSE requerant_3.personne_morale_denomination
    END as denomination_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN ''''
        ELSE requerant_3.personne_morale_siret
    END as siret_requerant_3,
    CASE WHEN requerant_3.qualite=''particulier''
        THEN ''''
        ELSE requerant_3.personne_morale_categorie_juridique
    END as categorie_juridique_requerant_3,
    requerant_3.numero as numero_requerant_3,
&DB_PREFIXEadresse(requerant_3.numero::text, requerant_3.voie::text, requerant_3.complement::text, requerant_3.lieu_dit::text, requerant_3.bp::text, requerant_3.code_postal::text, requerant_3.localite::text, requerant_3.cedex::text, requerant_3.pays::text) as adresse_requerant_3_sdl,
&DB_PREFIXEadresse(requerant_3.numero::text, requerant_3.voie::text, requerant_3.complement::text, requerant_3.lieu_dit::text, requerant_3.bp::text, requerant_3.code_postal::text, requerant_3.localite::text, requerant_3.cedex::text, requerant_3.pays::text, '' ''::text) as adresse_requerant_3,
    requerant_3.voie as voie_requerant_3,
    requerant_3.complement as complement_requerant_3,
    requerant_3.lieu_dit as lieu_dit_requerant_3,
    CASE 
        WHEN requerant_3.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', requerant_3.bp)
    END as bp_requerant_3,
    requerant_3.code_postal as code_postal_requerant_3,
    requerant_3.localite as localite_requerant_3,
    CASE 
        WHEN requerant_3.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', requerant_3.cedex)
    END as cedex_requerant_3,
    requerant_3.pays as pays_requerant_3,
    requerant_3.division_territoriale as division_territoriale_requerant_3,
    CASE WHEN requerant_3.qualite = ''particulier''
        THEN to_char(requerant_3.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_requerant_3,
    CASE WHEN requerant_3.qualite = ''particulier''
        THEN CONCAT_WS('' '', requerant_3.particulier_commune_naissance, requerant_3.particulier_departement_naissance, requerant_3.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_requerant_3,
    requerant_3.courriel as email_requerant_3,
    CONCAT_WS('' '', requerant_3.indicatif, CONCAT_WS('' / '', requerant_3.telephone_fixe, requerant_3.telephone_mobile)) as coordonnees_telephonique_requerant_3,

    --Coordonnées du requérant 4

    CASE WHEN requerant_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_4_civilite.libelle, requerant_4.particulier_nom, requerant_4.particulier_prenom))
        ELSE
            CASE WHEN requerant_4.personne_morale_nom IS NOT NULL OR requerant_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_4.personne_morale_raison_sociale, requerant_4.personne_morale_denomination, ''représenté(e) par'', requerant_4_civilite.libelle, requerant_4.personne_morale_nom, requerant_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_4.personne_morale_raison_sociale, '' '', requerant_4.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier'' OR requerant_4.personne_morale_nom IS NOT NULL OR requerant_4.personne_morale_prenom IS NOT NULL
        THEN requerant_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN requerant_4.particulier_nom
        ELSE
            CASE WHEN requerant_4.personne_morale_nom IS NOT NULL
                THEN requerant_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN requerant_4.particulier_prenom
        ELSE
            CASE WHEN requerant_4.personne_morale_prenom IS NOT NULL
                THEN requerant_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_4_civilite.libelle, requerant_4.particulier_nom, requerant_4.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN requerant_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN requerant_4.particulier_nom
        ELSE ''''
    END as nom_qualite_part_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN requerant_4.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_requerant_4,
    CASE WHEN requerant_4.personne_morale_nom IS NOT NULL OR requerant_4.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', requerant_4.personne_morale_raison_sociale, requerant_4.personne_morale_denomination, ''représenté(e) par'', requerant_4_civilite.libelle, requerant_4.personne_morale_nom, requerant_4.personne_morale_prenom))
        ELSE TRIM(CONCAT(requerant_4.personne_morale_raison_sociale, '' '', requerant_4.personne_morale_denomination))
    END as nom_complet_qualite_pm_requerant_4,
    CASE WHEN requerant_4.personne_morale_nom IS NOT NULL OR requerant_4.personne_morale_prenom IS NOT NULL
        THEN requerant_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_requerant_4,
    CASE WHEN requerant_4.personne_morale_nom IS NOT NULL
        THEN requerant_4.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_requerant_4,
    CASE WHEN requerant_4.personne_morale_prenom IS NOT NULL
        THEN requerant_4.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN ''''
        ELSE requerant_4.personne_morale_raison_sociale
    END as raison_sociale_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN ''''
        ELSE requerant_4.personne_morale_denomination
    END as denomination_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN ''''
        ELSE requerant_4.personne_morale_categorie_juridique
    END as categorie_juridique_requerant_4,
    CASE WHEN requerant_4.qualite=''particulier''
        THEN ''''
        ELSE requerant_4.personne_morale_siret
    END as siret_requerant_4,
    requerant_4.numero as numero_requerant_4,
&DB_PREFIXEadresse(requerant_4.numero::text, requerant_4.voie::text, requerant_4.complement::text, requerant_4.lieu_dit::text, requerant_4.bp::text, requerant_4.code_postal::text, requerant_4.localite::text, requerant_4.cedex::text, requerant_4.pays::text) as adresse_requerant_4_sdl,
&DB_PREFIXEadresse(requerant_4.numero::text, requerant_4.voie::text, requerant_4.complement::text, requerant_4.lieu_dit::text, requerant_4.bp::text, requerant_4.code_postal::text, requerant_4.localite::text, requerant_4.cedex::text, requerant_4.pays::text, '' ''::text) as adresse_requerant_4,
    requerant_4.voie as voie_requerant_4,
    requerant_4.complement as complement_requerant_4,
    requerant_4.lieu_dit as lieu_dit_requerant_4,
    CASE 
        WHEN requerant_4.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', requerant_4.bp)
    END as bp_requerant_4,
    requerant_4.code_postal as code_postal_requerant_4,
    requerant_4.localite as localite_requerant_4,
    CASE 
        WHEN requerant_4.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', requerant_4.cedex)
    END as cedex_requerant_4,
    requerant_4.pays as pays_requerant_4,
    requerant_4.division_territoriale as division_territoriale_requerant_4,
    CASE WHEN requerant_4.qualite = ''particulier''
        THEN to_char(requerant_4.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_requerant_4,
    CASE WHEN requerant_4.qualite = ''particulier''
        THEN CONCAT_WS('' '', requerant_4.particulier_commune_naissance, requerant_4.particulier_departement_naissance, requerant_4.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_requerant_4,
    requerant_4.courriel as email_requerant_4,
    CONCAT_WS('' '', requerant_4.indicatif, CONCAT_WS('' / '', requerant_4.telephone_fixe, requerant_4.telephone_mobile)) as coordonnees_telephonique_requerant_4,

    --Coordonnées du requérant 5

    CASE WHEN requerant_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_5_civilite.libelle, requerant_5.particulier_nom, requerant_5.particulier_prenom))
        ELSE
            CASE WHEN requerant_5.personne_morale_nom IS NOT NULL OR requerant_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', requerant_5.personne_morale_raison_sociale, requerant_5.personne_morale_denomination, ''représenté(e) par'', requerant_5_civilite.libelle, requerant_5.personne_morale_nom, requerant_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(requerant_5.personne_morale_raison_sociale, '' '', requerant_5.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier'' OR requerant_5.personne_morale_nom IS NOT NULL OR requerant_5.personne_morale_prenom IS NOT NULL
        THEN requerant_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN requerant_5.particulier_nom
        ELSE
            CASE WHEN requerant_5.personne_morale_nom IS NOT NULL
                THEN requerant_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN requerant_5.particulier_prenom
        ELSE
            CASE WHEN requerant_5.personne_morale_prenom IS NOT NULL
                THEN requerant_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', requerant_5_civilite.libelle, requerant_5.particulier_nom, requerant_5.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN requerant_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN requerant_5.particulier_nom
        ELSE ''''
    END as nom_qualite_part_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN requerant_5.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_requerant_5,
    CASE WHEN requerant_5.personne_morale_nom IS NOT NULL OR requerant_5.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', requerant_5.personne_morale_raison_sociale, requerant_5.personne_morale_denomination, ''représenté(e) par'', requerant_5_civilite.libelle, requerant_5.personne_morale_nom, requerant_5.personne_morale_prenom))
        ELSE TRIM(CONCAT(requerant_5.personne_morale_raison_sociale, '' '', requerant_5.personne_morale_denomination))
    END as nom_complet_qualite_pm_requerant_5,
    CASE WHEN requerant_5.personne_morale_nom IS NOT NULL OR requerant_5.personne_morale_prenom IS NOT NULL
        THEN requerant_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_requerant_5,
    CASE WHEN requerant_5.personne_morale_nom IS NOT NULL
        THEN requerant_5.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_requerant_5,
    CASE WHEN requerant_5.personne_morale_prenom IS NOT NULL
        THEN requerant_5.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN ''''
        ELSE requerant_5.personne_morale_raison_sociale
    END as raison_sociale_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN ''''
        ELSE requerant_5.personne_morale_denomination
    END as denomination_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN ''''
        ELSE requerant_5.personne_morale_categorie_juridique
    END as categorie_juridique_requerant_5,
    CASE WHEN requerant_5.qualite=''particulier''
        THEN ''''
        ELSE requerant_5.personne_morale_siret
    END as siret_requerant_5,
    requerant_5.numero as numero_requerant_5,
&DB_PREFIXEadresse(requerant_5.numero::text, requerant_5.voie::text, requerant_5.complement::text, requerant_5.lieu_dit::text, requerant_5.bp::text, requerant_5.code_postal::text, requerant_5.localite::text, requerant_5.cedex::text, requerant_5.pays::text) as adresse_requerant_5_sdl,
&DB_PREFIXEadresse(requerant_5.numero::text, requerant_5.voie::text, requerant_5.complement::text, requerant_5.lieu_dit::text, requerant_5.bp::text, requerant_5.code_postal::text, requerant_5.localite::text, requerant_5.cedex::text, requerant_5.pays::text, '' ''::text) as adresse_requerant_5,
    requerant_5.voie as voie_requerant_5,
    requerant_5.complement as complement_requerant_5,
    requerant_5.lieu_dit as lieu_dit_requerant_5,
    CASE 
        WHEN requerant_5.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', requerant_5.bp)
    END as bp_requerant_5,
    requerant_5.code_postal as code_postal_requerant_5,
    requerant_5.localite as localite_requerant_5,
    CASE 
        WHEN requerant_5.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', requerant_5.cedex)
    END as cedex_requerant_5,
    requerant_5.pays as pays_requerant_5,
    requerant_5.division_territoriale as division_territoriale_requerant_5,
    CASE WHEN requerant_5.qualite = ''particulier''
        THEN to_char(requerant_5.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_requerant_5,
    CASE WHEN requerant_5.qualite = ''particulier''
        THEN CONCAT_WS('' '', requerant_5.particulier_commune_naissance, requerant_5.particulier_departement_naissance, requerant_5.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_requerant_5,
    requerant_5.courriel as email_requerant_5,
    CONCAT_WS('' '', requerant_5.indicatif, CONCAT_WS('' / '', requerant_5.telephone_fixe, requerant_5.telephone_mobile)) as coordonnees_telephonique_requerant_5,

    --Coordonnées de l''avocat principal

    CASE WHEN avocat_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_principal_civilite.libelle, avocat_principal.particulier_nom, avocat_principal.particulier_prenom))
        ELSE
            CASE WHEN avocat_principal.personne_morale_nom IS NOT NULL OR avocat_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', avocat_principal.personne_morale_raison_sociale, avocat_principal.personne_morale_denomination, ''représenté(e) par'', avocat_principal_civilite.libelle, avocat_principal.personne_morale_nom, avocat_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(avocat_principal.personne_morale_raison_sociale, '' '', avocat_principal.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier'' OR avocat_principal.personne_morale_nom IS NOT NULL OR avocat_principal.personne_morale_prenom IS NOT NULL
        THEN avocat_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN avocat_principal.particulier_nom
        ELSE
            CASE WHEN avocat_principal.personne_morale_nom IS NOT NULL
                THEN avocat_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN avocat_principal.particulier_prenom
        ELSE
            CASE WHEN avocat_principal.personne_morale_prenom IS NOT NULL
                THEN avocat_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_principal_civilite.libelle, avocat_principal.particulier_nom, avocat_principal.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN avocat_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN avocat_principal.particulier_nom
        ELSE ''''
    END as nom_qualite_part_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN avocat_principal.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_avocat_principal,
    CASE WHEN avocat_principal.personne_morale_nom IS NOT NULL OR avocat_principal.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', avocat_principal.personne_morale_raison_sociale, avocat_principal.personne_morale_denomination, ''représenté(e) par'', avocat_principal_civilite.libelle, avocat_principal.personne_morale_nom, avocat_principal.personne_morale_prenom))
        ELSE TRIM(CONCAT(avocat_principal.personne_morale_raison_sociale, '' '', avocat_principal.personne_morale_denomination))
    END as nom_complet_qualite_pm_avocat_principal,
    CASE WHEN avocat_principal.personne_morale_nom IS NOT NULL OR avocat_principal.personne_morale_prenom IS NOT NULL
        THEN avocat_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_avocat_principal,
    CASE WHEN avocat_principal.personne_morale_nom IS NOT NULL
        THEN avocat_principal.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_avocat_principal,
    CASE WHEN avocat_principal.personne_morale_prenom IS NOT NULL
        THEN avocat_principal.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN ''''
        ELSE avocat_principal.personne_morale_raison_sociale
    END as raison_sociale_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN ''''
        ELSE avocat_principal.personne_morale_denomination
    END as denomination_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN ''''
        ELSE avocat_principal.personne_morale_siret
    END as siret_avocat_principal,
    CASE WHEN avocat_principal.qualite=''particulier''
        THEN ''''
        ELSE avocat_principal.personne_morale_categorie_juridique
    END as categorie_juridique_avocat_principal,
    avocat_principal.numero as numero_avocat_principal,
&DB_PREFIXEadresse(avocat_principal.numero::text, avocat_principal.voie::text, avocat_principal.complement::text, avocat_principal.lieu_dit::text, avocat_principal.bp::text, avocat_principal.code_postal::text, avocat_principal.localite::text, avocat_principal.cedex::text, avocat_principal.pays::text) as adresse_avocat_principal_sdl,
&DB_PREFIXEadresse(avocat_principal.numero::text, avocat_principal.voie::text, avocat_principal.complement::text, avocat_principal.lieu_dit::text, avocat_principal.bp::text, avocat_principal.code_postal::text, avocat_principal.localite::text, avocat_principal.cedex::text, avocat_principal.pays::text, '' ''::text) as adresse_avocat_principal,
    avocat_principal.voie as voie_avocat_principal,
    avocat_principal.complement as complement_avocat_principal,
    avocat_principal.lieu_dit as lieu_dit_avocat_principal,
    CASE 
        WHEN avocat_principal.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', avocat_principal.bp)
    END as bp_avocat_principal,
    avocat_principal.code_postal as code_postal_avocat_principal,
    avocat_principal.localite as localite_avocat_principal,
    CASE 
        WHEN avocat_principal.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', avocat_principal.cedex)
    END as cedex_avocat_principal,
    avocat_principal.pays as pays_avocat_principal,
    avocat_principal.division_territoriale as division_territoriale_avocat_principal,
    CASE WHEN avocat_principal.qualite = ''particulier''
        THEN to_char(avocat_principal.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_avocat_principal,
    CASE WHEN avocat_principal.qualite = ''particulier''
        THEN CONCAT_WS('' '', avocat_principal.particulier_commune_naissance, avocat_principal.particulier_departement_naissance, avocat_principal.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_avocat_principal,
    avocat_principal.courriel as email_avocat_principal,
    CONCAT_WS('' '', avocat_principal.indicatif, CONCAT_WS('' / '', avocat_principal.telephone_fixe, avocat_principal.telephone_mobile)) as coordonnees_telephonique_avocat_principal,

    --Coordonnées de l''avocat 1

    CASE WHEN avocat_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_1_civilite.libelle, avocat_1.particulier_nom, avocat_1.particulier_prenom))
        ELSE
            CASE WHEN avocat_1.personne_morale_nom IS NOT NULL OR avocat_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', avocat_1.personne_morale_raison_sociale, avocat_1.personne_morale_denomination, ''représenté(e) par'', avocat_1_civilite.libelle, avocat_1.personne_morale_nom, avocat_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(avocat_1.personne_morale_raison_sociale, '' '', avocat_1.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier'' OR avocat_1.personne_morale_nom IS NOT NULL OR avocat_1.personne_morale_prenom IS NOT NULL
        THEN avocat_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN avocat_1.particulier_nom
        ELSE
            CASE WHEN avocat_1.personne_morale_nom IS NOT NULL
                THEN avocat_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN avocat_1.particulier_prenom
        ELSE
            CASE WHEN avocat_1.personne_morale_prenom IS NOT NULL
                THEN avocat_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_1_civilite.libelle, avocat_1.particulier_nom, avocat_1.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN avocat_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN avocat_1.particulier_nom
        ELSE ''''
    END as nom_qualite_part_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN avocat_1.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_avocat_1,
    CASE WHEN avocat_1.personne_morale_nom IS NOT NULL OR avocat_1.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', avocat_1.personne_morale_raison_sociale, avocat_1.personne_morale_denomination, ''représenté(e) par'', avocat_1_civilite.libelle, avocat_1.personne_morale_nom, avocat_1.personne_morale_prenom))
        ELSE TRIM(CONCAT(avocat_1.personne_morale_raison_sociale, '' '', avocat_1.personne_morale_denomination))
    END as nom_complet_qualite_pm_avocat_1,
    CASE WHEN avocat_1.personne_morale_nom IS NOT NULL OR avocat_1.personne_morale_prenom IS NOT NULL
        THEN avocat_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_avocat_1,
    CASE WHEN avocat_1.personne_morale_nom IS NOT NULL
        THEN avocat_1.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_avocat_1,
    CASE WHEN avocat_1.personne_morale_prenom IS NOT NULL
        THEN avocat_1.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN ''''
        ELSE avocat_1.personne_morale_raison_sociale
    END as raison_sociale_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN ''''
        ELSE avocat_1.personne_morale_denomination
    END as denomination_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN ''''
        ELSE avocat_1.personne_morale_siret
    END as siret_avocat_1,
    CASE WHEN avocat_1.qualite=''particulier''
        THEN ''''
        ELSE avocat_1.personne_morale_categorie_juridique
    END as categorie_juridique_avocat_1,
    avocat_1.numero as numero_avocat_1,
&DB_PREFIXEadresse(avocat_1.numero::text, avocat_1.voie::text, avocat_1.complement::text, avocat_1.lieu_dit::text, avocat_1.bp::text, avocat_1.code_postal::text, avocat_1.localite::text, avocat_1.cedex::text, avocat_1.pays::text) as adresse_avocat_1_sdl,
&DB_PREFIXEadresse(avocat_1.numero::text, avocat_1.voie::text, avocat_1.complement::text, avocat_1.lieu_dit::text, avocat_1.bp::text, avocat_1.code_postal::text, avocat_1.localite::text, avocat_1.cedex::text, avocat_1.pays::text, '' ''::text) as adresse_avocat_1,
    avocat_1.voie as voie_avocat_1,
    avocat_1.complement as complement_avocat_1,
    avocat_1.lieu_dit as lieu_dit_avocat_1,
    CASE 
        WHEN avocat_1.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', avocat_1.bp)
    END as bp_avocat_1,
    avocat_1.code_postal as code_postal_avocat_1,
    avocat_1.localite as localite_avocat_1,
    CASE 
        WHEN avocat_1.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', avocat_1.cedex)
    END as cedex_avocat_1,
    avocat_1.pays as pays_avocat_1,
    avocat_1.division_territoriale as division_territoriale_avocat_1,
    CASE WHEN avocat_1.qualite = ''particulier''
        THEN to_char(avocat_1.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_avocat_1,
    CASE WHEN avocat_1.qualite = ''particulier''
        THEN CONCAT_WS('' '', avocat_1.particulier_commune_naissance, avocat_1.particulier_departement_naissance, avocat_1.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_avocat_1,
    avocat_1.courriel as email_avocat_1,
    CONCAT_WS('' '', avocat_1.indicatif, CONCAT_WS('' / '', avocat_1.telephone_fixe, avocat_1.telephone_mobile)) as coordonnees_telephonique_avocat_1,

    --Coordonnées de l''avocat 2

    CASE WHEN avocat_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_2_civilite.libelle, avocat_2.particulier_nom, avocat_2.particulier_prenom))
        ELSE
            CASE WHEN avocat_2.personne_morale_nom IS NOT NULL OR avocat_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', avocat_2.personne_morale_raison_sociale, avocat_2.personne_morale_denomination, ''représenté(e) par'', avocat_2_civilite.libelle, avocat_2.personne_morale_nom, avocat_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(avocat_2.personne_morale_raison_sociale, '' '', avocat_2.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier'' OR avocat_2.personne_morale_nom IS NOT NULL OR avocat_2.personne_morale_prenom IS NOT NULL
        THEN avocat_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN avocat_2.particulier_nom
        ELSE
            CASE WHEN avocat_2.personne_morale_nom IS NOT NULL
                THEN avocat_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN avocat_2.particulier_prenom
        ELSE
            CASE WHEN avocat_2.personne_morale_prenom IS NOT NULL
                THEN avocat_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_2_civilite.libelle, avocat_2.particulier_nom, avocat_2.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN avocat_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN avocat_2.particulier_nom
        ELSE ''''
    END as nom_qualite_part_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN avocat_2.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_avocat_2,
    CASE WHEN avocat_2.personne_morale_nom IS NOT NULL OR avocat_2.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', avocat_2.personne_morale_raison_sociale, avocat_2.personne_morale_denomination, ''représenté(e) par'', avocat_2_civilite.libelle, avocat_2.personne_morale_nom, avocat_2.personne_morale_prenom))
        ELSE TRIM(CONCAT(avocat_2.personne_morale_raison_sociale, '' '', avocat_2.personne_morale_denomination))
    END as nom_complet_qualite_pm_avocat_2,
    CASE WHEN avocat_2.personne_morale_nom IS NOT NULL OR avocat_2.personne_morale_prenom IS NOT NULL
        THEN avocat_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_avocat_2,
    CASE WHEN avocat_2.personne_morale_nom IS NOT NULL
        THEN avocat_2.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_avocat_2,
    CASE WHEN avocat_2.personne_morale_prenom IS NOT NULL
        THEN avocat_2.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN ''''
        ELSE avocat_2.personne_morale_raison_sociale
    END as raison_sociale_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN ''''
        ELSE avocat_2.personne_morale_denomination
    END as denomination_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN ''''
        ELSE avocat_2.personne_morale_categorie_juridique
    END as categorie_juridique_avocat_2,
    CASE WHEN avocat_2.qualite=''particulier''
        THEN ''''
        ELSE avocat_2.personne_morale_siret
    END as siret_avocat_2,
    avocat_2.numero as numero_avocat_2,
&DB_PREFIXEadresse(avocat_2.numero::text, avocat_2.voie::text, avocat_2.complement::text, avocat_2.lieu_dit::text, avocat_2.bp::text, avocat_2.code_postal::text, avocat_2.localite::text, avocat_2.cedex::text, avocat_2.pays::text) as adresse_avocat_2_sdl,
&DB_PREFIXEadresse(avocat_2.numero::text, avocat_2.voie::text, avocat_2.complement::text, avocat_2.lieu_dit::text, avocat_2.bp::text, avocat_2.code_postal::text, avocat_2.localite::text, avocat_2.cedex::text, avocat_2.pays::text, '' ''::text) as adresse_avocat_2,
    avocat_2.voie as voie_avocat_2,
    avocat_2.complement as complement_avocat_2,
    avocat_2.lieu_dit as lieu_dit_avocat_2,
    CASE 
        WHEN avocat_2.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', avocat_2.bp)
    END as bp_avocat_2,
    avocat_2.code_postal as code_postal_avocat_2,
    avocat_2.localite as localite_avocat_2,
    CASE 
        WHEN avocat_2.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', avocat_2.cedex)
    END as cedex_avocat_2,
    avocat_2.pays as pays_avocat_2,
    avocat_2.division_territoriale as division_territoriale_avocat_2,
    CASE WHEN avocat_2.qualite = ''particulier''
        THEN to_char(avocat_2.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_avocat_2,
    CASE WHEN avocat_2.qualite = ''particulier''
        THEN CONCAT_WS('' '', avocat_2.particulier_commune_naissance, avocat_2.particulier_departement_naissance, avocat_2.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_avocat_2,
    avocat_2.courriel as email_avocat_2,
    CONCAT_WS('' '', avocat_2.indicatif, CONCAT_WS('' / '', avocat_2.telephone_fixe, avocat_2.telephone_mobile)) as coordonnees_telephonique_avocat_2,

    --Coordonnées de l''avocat 3

    CASE WHEN avocat_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_3_civilite.libelle, avocat_3.particulier_nom, avocat_3.particulier_prenom))
        ELSE
            CASE WHEN avocat_3.personne_morale_nom IS NOT NULL OR avocat_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', avocat_3.personne_morale_raison_sociale, avocat_3.personne_morale_denomination, ''représenté(e) par'', avocat_3_civilite.libelle, avocat_3.personne_morale_nom, avocat_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(avocat_3.personne_morale_raison_sociale, '' '', avocat_3.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier'' OR avocat_3.personne_morale_nom IS NOT NULL OR avocat_3.personne_morale_prenom IS NOT NULL
        THEN avocat_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN avocat_3.particulier_nom
        ELSE
            CASE WHEN avocat_3.personne_morale_nom IS NOT NULL
                THEN avocat_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN avocat_3.particulier_prenom
        ELSE
            CASE WHEN avocat_3.personne_morale_prenom IS NOT NULL
                THEN avocat_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_3_civilite.libelle, avocat_3.particulier_nom, avocat_3.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN avocat_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN avocat_3.particulier_nom
        ELSE ''''
    END as nom_qualite_part_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN avocat_3.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_avocat_3,
    CASE WHEN avocat_3.personne_morale_nom IS NOT NULL OR avocat_3.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', avocat_3.personne_morale_raison_sociale, avocat_3.personne_morale_denomination, ''représenté(e) par'', avocat_3_civilite.libelle, avocat_3.personne_morale_nom, avocat_3.personne_morale_prenom))
        ELSE TRIM(CONCAT(avocat_3.personne_morale_raison_sociale, '' '', avocat_3.personne_morale_denomination))
    END as nom_complet_qualite_pm_avocat_3,
    CASE WHEN avocat_3.personne_morale_nom IS NOT NULL OR avocat_3.personne_morale_prenom IS NOT NULL
        THEN avocat_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_avocat_3,
    CASE WHEN avocat_3.personne_morale_nom IS NOT NULL
        THEN avocat_3.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_avocat_3,
    CASE WHEN avocat_3.personne_morale_prenom IS NOT NULL
        THEN avocat_3.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN ''''
        ELSE avocat_3.personne_morale_raison_sociale
    END as raison_sociale_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN ''''
        ELSE avocat_3.personne_morale_denomination
    END as denomination_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN ''''
        ELSE avocat_3.personne_morale_siret
    END as siret_avocat_3,
    CASE WHEN avocat_3.qualite=''particulier''
        THEN ''''
        ELSE avocat_3.personne_morale_categorie_juridique
    END as categorie_juridique_avocat_3,
    avocat_3.numero as numero_avocat_3,
&DB_PREFIXEadresse(avocat_3.numero::text, avocat_3.voie::text, avocat_3.complement::text, avocat_3.lieu_dit::text, avocat_3.bp::text, avocat_3.code_postal::text, avocat_3.localite::text, avocat_3.cedex::text, avocat_3.pays::text) as adresse_avocat_3_sdl,
&DB_PREFIXEadresse(avocat_3.numero::text, avocat_3.voie::text, avocat_3.complement::text, avocat_3.lieu_dit::text, avocat_3.bp::text, avocat_3.code_postal::text, avocat_3.localite::text, avocat_3.cedex::text, avocat_3.pays::text, '' ''::text) as adresse_avocat_3,
    avocat_3.voie as voie_avocat_3,
    avocat_3.complement as complement_avocat_3,
    avocat_3.lieu_dit as lieu_dit_avocat_3,
    CASE 
        WHEN avocat_3.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', avocat_3.bp)
    END as bp_avocat_3,
    avocat_3.code_postal as code_postal_avocat_3,
    avocat_3.localite as localite_avocat_3,
    CASE 
        WHEN avocat_3.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', avocat_3.cedex)
    END as cedex_avocat_3,
    avocat_3.pays as pays_avocat_3,
    avocat_3.division_territoriale as division_territoriale_avocat_3,
    CASE WHEN avocat_3.qualite = ''particulier''
        THEN to_char(avocat_3.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_avocat_3,
    CASE WHEN avocat_3.qualite = ''particulier''
        THEN CONCAT_WS('' '', avocat_3.particulier_commune_naissance, avocat_3.particulier_departement_naissance, avocat_3.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_avocat_3,
    avocat_3.courriel as email_avocat_3,
    CONCAT_WS('' '', avocat_3.indicatif, CONCAT_WS('' / '', avocat_3.telephone_fixe, avocat_3.telephone_mobile)) as coordonnees_telephonique_avocat_3,

    --Coordonnées de l''avocat 4

    CASE WHEN avocat_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_4_civilite.libelle, avocat_4.particulier_nom, avocat_4.particulier_prenom))
        ELSE
            CASE WHEN avocat_4.personne_morale_nom IS NOT NULL OR avocat_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', avocat_4.personne_morale_raison_sociale, avocat_4.personne_morale_denomination, ''représenté(e) par'', avocat_4_civilite.libelle, avocat_4.personne_morale_nom, avocat_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(avocat_4.personne_morale_raison_sociale, '' '', avocat_4.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier'' OR avocat_4.personne_morale_nom IS NOT NULL OR avocat_4.personne_morale_prenom IS NOT NULL
        THEN avocat_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN avocat_4.particulier_nom
        ELSE
            CASE WHEN avocat_4.personne_morale_nom IS NOT NULL
                THEN avocat_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN avocat_4.particulier_prenom
        ELSE
            CASE WHEN avocat_4.personne_morale_prenom IS NOT NULL
                THEN avocat_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_4_civilite.libelle, avocat_4.particulier_nom, avocat_4.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN avocat_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN avocat_4.particulier_nom
        ELSE ''''
    END as nom_qualite_part_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN avocat_4.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_avocat_4,
    CASE WHEN avocat_4.personne_morale_nom IS NOT NULL OR avocat_4.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', avocat_4.personne_morale_raison_sociale, avocat_4.personne_morale_denomination, ''représenté(e) par'', avocat_4_civilite.libelle, avocat_4.personne_morale_nom, avocat_4.personne_morale_prenom))
        ELSE TRIM(CONCAT(avocat_4.personne_morale_raison_sociale, '' '', avocat_4.personne_morale_denomination))
    END as nom_complet_qualite_pm_avocat_4,
    CASE WHEN avocat_4.personne_morale_nom IS NOT NULL OR avocat_4.personne_morale_prenom IS NOT NULL
        THEN avocat_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_avocat_4,
    CASE WHEN avocat_4.personne_morale_nom IS NOT NULL
        THEN avocat_4.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_avocat_4,
    CASE WHEN avocat_4.personne_morale_prenom IS NOT NULL
        THEN avocat_4.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN ''''
        ELSE avocat_4.personne_morale_raison_sociale
    END as raison_sociale_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN ''''
        ELSE avocat_4.personne_morale_denomination
    END as denomination_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN ''''
        ELSE avocat_4.personne_morale_categorie_juridique
    END as categorie_juridique_avocat_4,
    CASE WHEN avocat_4.qualite=''particulier''
        THEN ''''
        ELSE avocat_4.personne_morale_siret
    END as siret_avocat_4,
    avocat_4.numero as numero_avocat_4,
&DB_PREFIXEadresse(avocat_4.numero::text, avocat_4.voie::text, avocat_4.complement::text, avocat_4.lieu_dit::text, avocat_4.bp::text, avocat_4.code_postal::text, avocat_4.localite::text, avocat_4.cedex::text, avocat_4.pays::text) as adresse_avocat_4_sdl,
&DB_PREFIXEadresse(avocat_4.numero::text, avocat_4.voie::text, avocat_4.complement::text, avocat_4.lieu_dit::text, avocat_4.bp::text, avocat_4.code_postal::text, avocat_4.localite::text, avocat_4.cedex::text, avocat_4.pays::text, '' ''::text) as adresse_avocat_4,
    avocat_4.voie as voie_avocat_4,
    avocat_4.complement as complement_avocat_4,
    avocat_4.lieu_dit as lieu_dit_avocat_4,
    CASE 
        WHEN avocat_4.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', avocat_4.bp)
    END as bp_avocat_4,
    avocat_4.code_postal as code_postal_avocat_4,
    avocat_4.localite as localite_avocat_4,
    CASE 
        WHEN avocat_4.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', avocat_4.cedex)
    END as cedex_avocat_4,
    avocat_4.pays as pays_avocat_4,
    avocat_4.division_territoriale as division_territoriale_avocat_4,
    CASE WHEN avocat_4.qualite = ''particulier''
        THEN to_char(avocat_4.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_avocat_4,
    CASE WHEN avocat_4.qualite = ''particulier''
        THEN CONCAT_WS('' '', avocat_4.particulier_commune_naissance, avocat_4.particulier_departement_naissance, avocat_4.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_avocat_4,
    avocat_4.courriel as email_avocat_4,
    CONCAT_WS('' '', avocat_4.indicatif, CONCAT_WS('' / '', avocat_4.telephone_fixe, avocat_4.telephone_mobile)) as coordonnees_telephonique_avocat_4,

    --Coordonnées de l''avocat 5

    CASE WHEN avocat_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_5_civilite.libelle, avocat_5.particulier_nom, avocat_5.particulier_prenom))
        ELSE
            CASE WHEN avocat_5.personne_morale_nom IS NOT NULL OR avocat_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', avocat_5.personne_morale_raison_sociale, avocat_5.personne_morale_denomination, ''représenté(e) par'', avocat_5_civilite.libelle, avocat_5.personne_morale_nom, avocat_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(avocat_5.personne_morale_raison_sociale, '' '', avocat_5.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier'' OR avocat_5.personne_morale_nom IS NOT NULL OR avocat_5.personne_morale_prenom IS NOT NULL
        THEN avocat_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN avocat_5.particulier_nom
        ELSE
            CASE WHEN avocat_5.personne_morale_nom IS NOT NULL
                THEN avocat_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN avocat_5.particulier_prenom
        ELSE
            CASE WHEN avocat_5.personne_morale_prenom IS NOT NULL
                THEN avocat_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', avocat_5_civilite.libelle, avocat_5.particulier_nom, avocat_5.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN avocat_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN avocat_5.particulier_nom
        ELSE ''''
    END as nom_qualite_part_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN avocat_5.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_avocat_5,
    CASE WHEN avocat_5.personne_morale_nom IS NOT NULL OR avocat_5.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', avocat_5.personne_morale_raison_sociale, avocat_5.personne_morale_denomination, ''représenté(e) par'', avocat_5_civilite.libelle, avocat_5.personne_morale_nom, avocat_5.personne_morale_prenom))
        ELSE TRIM(CONCAT(avocat_5.personne_morale_raison_sociale, '' '', avocat_5.personne_morale_denomination))
    END as nom_complet_qualite_pm_avocat_5,
    CASE WHEN avocat_5.personne_morale_nom IS NOT NULL OR avocat_5.personne_morale_prenom IS NOT NULL
        THEN avocat_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_avocat_5,
    CASE WHEN avocat_5.personne_morale_nom IS NOT NULL
        THEN avocat_5.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_avocat_5,
    CASE WHEN avocat_5.personne_morale_prenom IS NOT NULL
        THEN avocat_5.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN ''''
        ELSE avocat_5.personne_morale_raison_sociale
    END as raison_sociale_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN ''''
        ELSE avocat_5.personne_morale_denomination
    END as denomination_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN ''''
        ELSE avocat_5.personne_morale_categorie_juridique
    END as categorie_juridique_avocat_5,
    CASE WHEN avocat_5.qualite=''particulier''
        THEN ''''
        ELSE avocat_5.personne_morale_siret
    END as siret_avocat_5,
    avocat_5.numero as numero_avocat_5,
&DB_PREFIXEadresse(avocat_5.numero::text, avocat_5.voie::text, avocat_5.complement::text, avocat_5.lieu_dit::text, avocat_5.bp::text, avocat_5.code_postal::text, avocat_5.localite::text, avocat_5.cedex::text, avocat_5.pays::text) as adresse_avocat_5_sdl,
&DB_PREFIXEadresse(avocat_5.numero::text, avocat_5.voie::text, avocat_5.complement::text, avocat_5.lieu_dit::text, avocat_5.bp::text, avocat_5.code_postal::text, avocat_5.localite::text, avocat_5.cedex::text, avocat_5.pays::text, '' ''::text) as adresse_avocat_5,
    avocat_5.voie as voie_avocat_5,
    avocat_5.complement as complement_avocat_5,
    avocat_5.lieu_dit as lieu_dit_avocat_5,
    CASE 
        WHEN avocat_5.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', avocat_5.bp)
    END as bp_avocat_5,
    avocat_5.code_postal as code_postal_avocat_5,
    avocat_5.localite as localite_avocat_5,
    CASE 
        WHEN avocat_5.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', avocat_5.cedex)
    END as cedex_avocat_5,
    avocat_5.pays as pays_avocat_5,
    avocat_5.division_territoriale as division_territoriale_avocat_5,
    CASE WHEN avocat_5.qualite = ''particulier''
        THEN to_char(avocat_5.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_avocat_5,
    CASE WHEN avocat_5.qualite = ''particulier''
        THEN CONCAT_WS('' '', avocat_5.particulier_commune_naissance, avocat_5.particulier_departement_naissance, avocat_5.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_avocat_5,
    avocat_5.courriel as email_avocat_5,
    CONCAT_WS('' '', avocat_5.indicatif, CONCAT_WS('' / '', avocat_5.telephone_fixe, avocat_5.telephone_mobile)) as coordonnees_telephonique_avocat_5,

    --Coordonnées du plaignant principal

    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_principal_civilite.libelle, plaignant_principal.particulier_nom, plaignant_principal.particulier_prenom))
        ELSE
            CASE WHEN plaignant_principal.personne_morale_nom IS NOT NULL OR plaignant_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', plaignant_principal.personne_morale_raison_sociale, plaignant_principal.personne_morale_denomination, ''représenté(e) par'', plaignant_principal_civilite.libelle, plaignant_principal.personne_morale_nom, plaignant_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(plaignant_principal.personne_morale_raison_sociale, '' '', plaignant_principal.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier'' OR plaignant_principal.personne_morale_nom IS NOT NULL OR plaignant_principal.personne_morale_prenom IS NOT NULL
        THEN plaignant_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN plaignant_principal.particulier_nom
        ELSE
            CASE WHEN plaignant_principal.personne_morale_nom IS NOT NULL
                THEN plaignant_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN plaignant_principal.particulier_prenom
        ELSE
            CASE WHEN plaignant_principal.personne_morale_prenom IS NOT NULL
                THEN plaignant_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_principal_civilite.libelle, plaignant_principal.particulier_nom, plaignant_principal.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN plaignant_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN plaignant_principal.particulier_nom
        ELSE ''''
    END as nom_qualite_part_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN plaignant_principal.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_plaignant_principal,
    CASE WHEN plaignant_principal.personne_morale_nom IS NOT NULL OR plaignant_principal.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', plaignant_principal.personne_morale_raison_sociale, plaignant_principal.personne_morale_denomination, ''représenté(e) par'', plaignant_principal_civilite.libelle, plaignant_principal.personne_morale_nom, plaignant_principal.personne_morale_prenom))
        ELSE TRIM(CONCAT(plaignant_principal.personne_morale_raison_sociale, '' '', plaignant_principal.personne_morale_denomination))
    END as nom_complet_qualite_pm_plaignant_principal,
    CASE WHEN plaignant_principal.personne_morale_nom IS NOT NULL OR plaignant_principal.personne_morale_prenom IS NOT NULL
        THEN plaignant_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_plaignant_principal,
    CASE WHEN plaignant_principal.personne_morale_nom IS NOT NULL
        THEN plaignant_principal.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_plaignant_principal,
    CASE WHEN plaignant_principal.personne_morale_prenom IS NOT NULL
        THEN plaignant_principal.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN ''''
        ELSE plaignant_principal.personne_morale_raison_sociale
    END as raison_sociale_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN ''''
        ELSE plaignant_principal.personne_morale_denomination
    END as denomination_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN ''''
        ELSE plaignant_principal.personne_morale_siret
    END as siret_plaignant_principal,
    CASE WHEN plaignant_principal.qualite=''particulier''
        THEN ''''
        ELSE plaignant_principal.personne_morale_categorie_juridique
    END as categorie_juridique_plaignant_principal,
    plaignant_principal.numero as numero_plaignant_principal,
&DB_PREFIXEadresse(plaignant_principal.numero::text, plaignant_principal.voie::text, plaignant_principal.complement::text, plaignant_principal.lieu_dit::text, plaignant_principal.bp::text, plaignant_principal.code_postal::text, plaignant_principal.localite::text, plaignant_principal.cedex::text, plaignant_principal.pays::text) as adresse_plaignant_principal_sdl,
&DB_PREFIXEadresse(plaignant_principal.numero::text, plaignant_principal.voie::text, plaignant_principal.complement::text, plaignant_principal.lieu_dit::text, plaignant_principal.bp::text, plaignant_principal.code_postal::text, plaignant_principal.localite::text, plaignant_principal.cedex::text, plaignant_principal.pays::text, '' ''::text) as adresse_plaignant_principal,
    plaignant_principal.voie as voie_plaignant_principal,
    plaignant_principal.complement as complement_plaignant_principal,
    plaignant_principal.lieu_dit as lieu_dit_plaignant_principal,
    CASE 
        WHEN plaignant_principal.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', plaignant_principal.bp)
    END as bp_plaignant_principal,
    plaignant_principal.code_postal as code_postal_plaignant_principal,
    plaignant_principal.localite as localite_plaignant_principal,
    CASE 
        WHEN plaignant_principal.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', plaignant_principal.cedex)
    END as cedex_plaignant_principal,
    plaignant_principal.pays as pays_plaignant_principal,
    plaignant_principal.division_territoriale as division_territoriale_plaignant_principal,
    CASE WHEN plaignant_principal.qualite = ''particulier''
        THEN to_char(plaignant_principal.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_plaignant_principal,
    CASE WHEN plaignant_principal.qualite = ''particulier''
        THEN CONCAT_WS('' '', plaignant_principal.particulier_commune_naissance, plaignant_principal.particulier_departement_naissance, plaignant_principal.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_plaignant_principal,
    plaignant_principal.courriel as email_plaignant_principal,
    CONCAT_WS('' '', plaignant_principal.indicatif, CONCAT_WS('' / '', plaignant_principal.telephone_fixe, plaignant_principal.telephone_mobile)) as coordonnees_telephonique_plaignant_principal,

    --Coordonnées de l''plaignant 1

    CASE WHEN plaignant_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_1_civilite.libelle, plaignant_1.particulier_nom, plaignant_1.particulier_prenom))
        ELSE
            CASE WHEN plaignant_1.personne_morale_nom IS NOT NULL OR plaignant_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', plaignant_1.personne_morale_raison_sociale, plaignant_1.personne_morale_denomination, ''représenté(e) par'', plaignant_1_civilite.libelle, plaignant_1.personne_morale_nom, plaignant_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(plaignant_1.personne_morale_raison_sociale, '' '', plaignant_1.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier'' OR plaignant_1.personne_morale_nom IS NOT NULL OR plaignant_1.personne_morale_prenom IS NOT NULL
        THEN plaignant_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN plaignant_1.particulier_nom
        ELSE
            CASE WHEN plaignant_1.personne_morale_nom IS NOT NULL
                THEN plaignant_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN plaignant_1.particulier_prenom
        ELSE
            CASE WHEN plaignant_1.personne_morale_prenom IS NOT NULL
                THEN plaignant_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_1_civilite.libelle, plaignant_1.particulier_nom, plaignant_1.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN plaignant_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN plaignant_1.particulier_nom
        ELSE ''''
    END as nom_qualite_part_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN plaignant_1.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_plaignant_1,
    CASE WHEN plaignant_1.personne_morale_nom IS NOT NULL OR plaignant_1.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', plaignant_1.personne_morale_raison_sociale, plaignant_1.personne_morale_denomination, ''représenté(e) par'', plaignant_1_civilite.libelle, plaignant_1.personne_morale_nom, plaignant_1.personne_morale_prenom))
        ELSE TRIM(CONCAT(plaignant_1.personne_morale_raison_sociale, '' '', plaignant_1.personne_morale_denomination))
    END as nom_complet_qualite_pm_plaignant_1,
    CASE WHEN plaignant_1.personne_morale_nom IS NOT NULL OR plaignant_1.personne_morale_prenom IS NOT NULL
        THEN plaignant_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_plaignant_1,
    CASE WHEN plaignant_1.personne_morale_nom IS NOT NULL
        THEN plaignant_1.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_plaignant_1,
    CASE WHEN plaignant_1.personne_morale_prenom IS NOT NULL
        THEN plaignant_1.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN ''''
        ELSE plaignant_1.personne_morale_raison_sociale
    END as raison_sociale_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN ''''
        ELSE plaignant_1.personne_morale_denomination
    END as denomination_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN ''''
        ELSE plaignant_1.personne_morale_siret
    END as siret_plaignant_1,
    CASE WHEN plaignant_1.qualite=''particulier''
        THEN ''''
        ELSE plaignant_1.personne_morale_categorie_juridique
    END as categorie_juridique_plaignant_1,
    plaignant_1.numero as numero_plaignant_1,
&DB_PREFIXEadresse(plaignant_1.numero::text, plaignant_1.voie::text, plaignant_1.complement::text, plaignant_1.lieu_dit::text, plaignant_1.bp::text, plaignant_1.code_postal::text, plaignant_1.localite::text, plaignant_1.cedex::text, plaignant_1.pays::text) as adresse_plaignant_1_sdl,
&DB_PREFIXEadresse(plaignant_1.numero::text, plaignant_1.voie::text, plaignant_1.complement::text, plaignant_1.lieu_dit::text, plaignant_1.bp::text, plaignant_1.code_postal::text, plaignant_1.localite::text, plaignant_1.cedex::text, plaignant_1.pays::text, '' ''::text) as adresse_plaignant_1,
    plaignant_1.voie as voie_plaignant_1,
    plaignant_1.complement as complement_plaignant_1,
    plaignant_1.lieu_dit as lieu_dit_plaignant_1,
    CASE 
        WHEN plaignant_1.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', plaignant_1.bp)
    END as bp_plaignant_1,
    plaignant_1.code_postal as code_postal_plaignant_1,
    plaignant_1.localite as localite_plaignant_1,
    CASE 
        WHEN plaignant_1.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', plaignant_1.cedex)
    END as cedex_plaignant_1,
    plaignant_1.pays as pays_plaignant_1,
    plaignant_1.division_territoriale as division_territoriale_plaignant_1,
    CASE WHEN plaignant_1.qualite = ''particulier''
        THEN to_char(plaignant_1.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_plaignant_1,
    CASE WHEN plaignant_1.qualite = ''particulier''
        THEN CONCAT_WS('' '', plaignant_1.particulier_commune_naissance, plaignant_1.particulier_departement_naissance, plaignant_1.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_plaignant_1,
    plaignant_1.courriel as email_plaignant_1,
    CONCAT_WS('' '', plaignant_1.indicatif, CONCAT_WS('' / '', plaignant_1.telephone_fixe, plaignant_1.telephone_mobile)) as coordonnees_telephonique_plaignant_1,

    --Coordonnées de l''plaignant 2

    CASE WHEN plaignant_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_2_civilite.libelle, plaignant_2.particulier_nom, plaignant_2.particulier_prenom))
        ELSE
            CASE WHEN plaignant_2.personne_morale_nom IS NOT NULL OR plaignant_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', plaignant_2.personne_morale_raison_sociale, plaignant_2.personne_morale_denomination, ''représenté(e) par'', plaignant_2_civilite.libelle, plaignant_2.personne_morale_nom, plaignant_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(plaignant_2.personne_morale_raison_sociale, '' '', plaignant_2.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier'' OR plaignant_2.personne_morale_nom IS NOT NULL OR plaignant_2.personne_morale_prenom IS NOT NULL
        THEN plaignant_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN plaignant_2.particulier_nom
        ELSE
            CASE WHEN plaignant_2.personne_morale_nom IS NOT NULL
                THEN plaignant_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN plaignant_2.particulier_prenom
        ELSE
            CASE WHEN plaignant_2.personne_morale_prenom IS NOT NULL
                THEN plaignant_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_2_civilite.libelle, plaignant_2.particulier_nom, plaignant_2.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN plaignant_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN plaignant_2.particulier_nom
        ELSE ''''
    END as nom_qualite_part_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN plaignant_2.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_plaignant_2,
    CASE WHEN plaignant_2.personne_morale_nom IS NOT NULL OR plaignant_2.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', plaignant_2.personne_morale_raison_sociale, plaignant_2.personne_morale_denomination, ''représenté(e) par'', plaignant_2_civilite.libelle, plaignant_2.personne_morale_nom, plaignant_2.personne_morale_prenom))
        ELSE TRIM(CONCAT(plaignant_2.personne_morale_raison_sociale, '' '', plaignant_2.personne_morale_denomination))
    END as nom_complet_qualite_pm_plaignant_2,
    CASE WHEN plaignant_2.personne_morale_nom IS NOT NULL OR plaignant_2.personne_morale_prenom IS NOT NULL
        THEN plaignant_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_plaignant_2,
    CASE WHEN plaignant_2.personne_morale_nom IS NOT NULL
        THEN plaignant_2.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_plaignant_2,
    CASE WHEN plaignant_2.personne_morale_prenom IS NOT NULL
        THEN plaignant_2.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN ''''
        ELSE plaignant_2.personne_morale_raison_sociale
    END as raison_sociale_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN ''''
        ELSE plaignant_2.personne_morale_denomination
    END as denomination_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN ''''
        ELSE plaignant_2.personne_morale_categorie_juridique
    END as categorie_juridique_plaignant_2,
    CASE WHEN plaignant_2.qualite=''particulier''
        THEN ''''
        ELSE plaignant_2.personne_morale_siret
    END as siret_plaignant_2,
    plaignant_2.numero as numero_plaignant_2,
&DB_PREFIXEadresse(plaignant_2.numero::text, plaignant_2.voie::text, plaignant_2.complement::text, plaignant_2.lieu_dit::text, plaignant_2.bp::text, plaignant_2.code_postal::text, plaignant_2.localite::text, plaignant_2.cedex::text, plaignant_2.pays::text) as adresse_plaignant_2_sdl,
&DB_PREFIXEadresse(plaignant_2.numero::text, plaignant_2.voie::text, plaignant_2.complement::text, plaignant_2.lieu_dit::text, plaignant_2.bp::text, plaignant_2.code_postal::text, plaignant_2.localite::text, plaignant_2.cedex::text, plaignant_2.pays::text, '' ''::text) as adresse_plaignant_2,
    plaignant_2.voie as voie_plaignant_2,
    plaignant_2.complement as complement_plaignant_2,
    plaignant_2.lieu_dit as lieu_dit_plaignant_2,
    CASE 
        WHEN plaignant_2.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', plaignant_2.bp)
    END as bp_plaignant_2,
    plaignant_2.code_postal as code_postal_plaignant_2,
    plaignant_2.localite as localite_plaignant_2,
    CASE 
        WHEN plaignant_2.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', plaignant_2.cedex)
    END as cedex_plaignant_2,
    plaignant_2.pays as pays_plaignant_2,
    plaignant_2.division_territoriale as division_territoriale_plaignant_2,
    CASE WHEN plaignant_2.qualite = ''particulier''
        THEN to_char(plaignant_2.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_plaignant_2,
    CASE WHEN plaignant_2.qualite = ''particulier''
        THEN CONCAT_WS('' '', plaignant_2.particulier_commune_naissance, plaignant_2.particulier_departement_naissance, plaignant_2.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_plaignant_2,
    plaignant_2.courriel as email_plaignant_2,
    CONCAT_WS('' '', plaignant_2.indicatif, CONCAT_WS('' / '', plaignant_2.telephone_fixe, plaignant_2.telephone_mobile)) as coordonnees_telephonique_plaignant_2,

    --Coordonnées de l''plaignant 3

    CASE WHEN plaignant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_3_civilite.libelle, plaignant_3.particulier_nom, plaignant_3.particulier_prenom))
        ELSE
            CASE WHEN plaignant_3.personne_morale_nom IS NOT NULL OR plaignant_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', plaignant_3.personne_morale_raison_sociale, plaignant_3.personne_morale_denomination, ''représenté(e) par'', plaignant_3_civilite.libelle, plaignant_3.personne_morale_nom, plaignant_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(plaignant_3.personne_morale_raison_sociale, '' '', plaignant_3.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier'' OR plaignant_3.personne_morale_nom IS NOT NULL OR plaignant_3.personne_morale_prenom IS NOT NULL
        THEN plaignant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN plaignant_3.particulier_nom
        ELSE
            CASE WHEN plaignant_3.personne_morale_nom IS NOT NULL
                THEN plaignant_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN plaignant_3.particulier_prenom
        ELSE
            CASE WHEN plaignant_3.personne_morale_prenom IS NOT NULL
                THEN plaignant_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_3_civilite.libelle, plaignant_3.particulier_nom, plaignant_3.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN plaignant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN plaignant_3.particulier_nom
        ELSE ''''
    END as nom_qualite_part_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN plaignant_3.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_plaignant_3,
    CASE WHEN plaignant_3.personne_morale_nom IS NOT NULL OR plaignant_3.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', plaignant_3.personne_morale_raison_sociale, plaignant_3.personne_morale_denomination, ''représenté(e) par'', plaignant_3_civilite.libelle, plaignant_3.personne_morale_nom, plaignant_3.personne_morale_prenom))
        ELSE TRIM(CONCAT(plaignant_3.personne_morale_raison_sociale, '' '', plaignant_3.personne_morale_denomination))
    END as nom_complet_qualite_pm_plaignant_3,
    CASE WHEN plaignant_3.personne_morale_nom IS NOT NULL OR plaignant_3.personne_morale_prenom IS NOT NULL
        THEN plaignant_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_plaignant_3,
    CASE WHEN plaignant_3.personne_morale_nom IS NOT NULL
        THEN plaignant_3.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_plaignant_3,
    CASE WHEN plaignant_3.personne_morale_prenom IS NOT NULL
        THEN plaignant_3.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN ''''
        ELSE plaignant_3.personne_morale_raison_sociale
    END as raison_sociale_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN ''''
        ELSE plaignant_3.personne_morale_denomination
    END as denomination_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN ''''
        ELSE plaignant_3.personne_morale_siret
    END as siret_plaignant_3,
    CASE WHEN plaignant_3.qualite=''particulier''
        THEN ''''
        ELSE plaignant_3.personne_morale_categorie_juridique
    END as categorie_juridique_plaignant_3,
    plaignant_3.numero as numero_plaignant_3,
&DB_PREFIXEadresse(plaignant_3.numero::text, plaignant_3.voie::text, plaignant_3.complement::text, plaignant_3.lieu_dit::text, plaignant_3.bp::text, plaignant_3.code_postal::text, plaignant_3.localite::text, plaignant_3.cedex::text, plaignant_3.pays::text) as adresse_plaignant_3_sdl,
&DB_PREFIXEadresse(plaignant_3.numero::text, plaignant_3.voie::text, plaignant_3.complement::text, plaignant_3.lieu_dit::text, plaignant_3.bp::text, plaignant_3.code_postal::text, plaignant_3.localite::text, plaignant_3.cedex::text, plaignant_3.pays::text, '' ''::text) as adresse_plaignant_3,
    plaignant_3.voie as voie_plaignant_3,
    plaignant_3.complement as complement_plaignant_3,
    plaignant_3.lieu_dit as lieu_dit_plaignant_3,
    CASE 
        WHEN plaignant_3.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', plaignant_3.bp)
    END as bp_plaignant_3,
    plaignant_3.code_postal as code_postal_plaignant_3,
    plaignant_3.localite as localite_plaignant_3,
    CASE 
        WHEN plaignant_3.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', plaignant_3.cedex)
    END as cedex_plaignant_3,
    plaignant_3.pays as pays_plaignant_3,
    plaignant_3.division_territoriale as division_territoriale_plaignant_3,
    CASE WHEN plaignant_3.qualite = ''particulier''
        THEN to_char(plaignant_3.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_plaignant_3,
    CASE WHEN plaignant_3.qualite = ''particulier''
        THEN CONCAT_WS('' '', plaignant_3.particulier_commune_naissance, plaignant_3.particulier_departement_naissance, plaignant_3.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_plaignant_3,
    plaignant_3.courriel as email_plaignant_3,
    CONCAT_WS('' '', plaignant_3.indicatif, CONCAT_WS('' / '', plaignant_3.telephone_fixe, plaignant_3.telephone_mobile)) as coordonnees_telephonique_plaignant_3,

    --Coordonnées de l''plaignant 4

    CASE WHEN plaignant_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_4_civilite.libelle, plaignant_4.particulier_nom, plaignant_4.particulier_prenom))
        ELSE
            CASE WHEN plaignant_4.personne_morale_nom IS NOT NULL OR plaignant_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', plaignant_4.personne_morale_raison_sociale, plaignant_4.personne_morale_denomination, ''représenté(e) par'', plaignant_4_civilite.libelle, plaignant_4.personne_morale_nom, plaignant_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(plaignant_4.personne_morale_raison_sociale, '' '', plaignant_4.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier'' OR plaignant_4.personne_morale_nom IS NOT NULL OR plaignant_4.personne_morale_prenom IS NOT NULL
        THEN plaignant_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN plaignant_4.particulier_nom
        ELSE
            CASE WHEN plaignant_4.personne_morale_nom IS NOT NULL
                THEN plaignant_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN plaignant_4.particulier_prenom
        ELSE
            CASE WHEN plaignant_4.personne_morale_prenom IS NOT NULL
                THEN plaignant_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_4_civilite.libelle, plaignant_4.particulier_nom, plaignant_4.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN plaignant_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN plaignant_4.particulier_nom
        ELSE ''''
    END as nom_qualite_part_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN plaignant_4.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_plaignant_4,
    CASE WHEN plaignant_4.personne_morale_nom IS NOT NULL OR plaignant_4.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', plaignant_4.personne_morale_raison_sociale, plaignant_4.personne_morale_denomination, ''représenté(e) par'', plaignant_4_civilite.libelle, plaignant_4.personne_morale_nom, plaignant_4.personne_morale_prenom))
        ELSE TRIM(CONCAT(plaignant_4.personne_morale_raison_sociale, '' '', plaignant_4.personne_morale_denomination))
    END as nom_complet_qualite_pm_plaignant_4,
    CASE WHEN plaignant_4.personne_morale_nom IS NOT NULL OR plaignant_4.personne_morale_prenom IS NOT NULL
        THEN plaignant_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN ''''
        ELSE plaignant_4.personne_morale_raison_sociale
    END as raison_sociale_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN ''''
        ELSE plaignant_4.personne_morale_denomination
    END as denomination_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN ''''
        ELSE plaignant_4.personne_morale_categorie_juridique
    END as categorie_juridique_plaignant_4,
    CASE WHEN plaignant_4.qualite=''particulier''
        THEN ''''
        ELSE plaignant_4.personne_morale_siret
    END as siret_plaignant_4,
    plaignant_4.numero as numero_plaignant_4,
&DB_PREFIXEadresse(plaignant_4.numero::text, plaignant_4.voie::text, plaignant_4.complement::text, plaignant_4.lieu_dit::text, plaignant_4.bp::text, plaignant_4.code_postal::text, plaignant_4.localite::text, plaignant_4.cedex::text, plaignant_4.pays::text) as adresse_plaignant_4_sdl,
&DB_PREFIXEadresse(plaignant_4.numero::text, plaignant_4.voie::text, plaignant_4.complement::text, plaignant_4.lieu_dit::text, plaignant_4.bp::text, plaignant_4.code_postal::text, plaignant_4.localite::text, plaignant_4.cedex::text, plaignant_4.pays::text, '' ''::text) as adresse_plaignant_4,
    plaignant_4.voie as voie_plaignant_4,
    plaignant_4.complement as complement_plaignant_4,
    plaignant_4.lieu_dit as lieu_dit_plaignant_4,
    CASE 
        WHEN plaignant_4.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', plaignant_4.bp)
    END as bp_plaignant_4,
    plaignant_4.code_postal as code_postal_plaignant_4,
    plaignant_4.localite as localite_plaignant_4,
    CASE 
        WHEN plaignant_4.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', plaignant_4.cedex)
    END as cedex_plaignant_4,
    plaignant_4.pays as pays_plaignant_4,
    plaignant_4.division_territoriale as division_territoriale_plaignant_4,
    CASE WHEN plaignant_4.qualite = ''particulier''
        THEN to_char(plaignant_4.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_plaignant_4,
    CASE WHEN plaignant_4.qualite = ''particulier''
        THEN CONCAT_WS('' '', plaignant_4.particulier_commune_naissance, plaignant_4.particulier_departement_naissance, plaignant_4.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_plaignant_4,
    plaignant_4.courriel as email_plaignant_4,
    CONCAT_WS('' '', plaignant_4.indicatif, CONCAT_WS('' / '', plaignant_4.telephone_fixe, plaignant_4.telephone_mobile)) as coordonnees_telephonique_plaignant_4,

    --Coordonnées de l''plaignant 5

    CASE WHEN plaignant_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_5_civilite.libelle, plaignant_5.particulier_nom, plaignant_5.particulier_prenom))
        ELSE
            CASE WHEN plaignant_5.personne_morale_nom IS NOT NULL OR plaignant_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', plaignant_5.personne_morale_raison_sociale, plaignant_5.personne_morale_denomination, ''représenté(e) par'', plaignant_5_civilite.libelle, plaignant_5.personne_morale_nom, plaignant_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(plaignant_5.personne_morale_raison_sociale, '' '', plaignant_5.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier'' OR plaignant_5.personne_morale_nom IS NOT NULL OR plaignant_5.personne_morale_prenom IS NOT NULL
        THEN plaignant_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN plaignant_5.particulier_nom
        ELSE
            CASE WHEN plaignant_5.personne_morale_nom IS NOT NULL
                THEN plaignant_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN plaignant_5.particulier_prenom
        ELSE
            CASE WHEN plaignant_5.personne_morale_prenom IS NOT NULL
                THEN plaignant_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', plaignant_5_civilite.libelle, plaignant_5.particulier_nom, plaignant_5.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN plaignant_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN plaignant_5.particulier_nom
        ELSE ''''
    END as nom_qualite_part_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN plaignant_5.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_plaignant_5,
    CASE WHEN plaignant_5.personne_morale_nom IS NOT NULL OR plaignant_5.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', plaignant_5.personne_morale_raison_sociale, plaignant_5.personne_morale_denomination, ''représenté(e) par'', plaignant_5_civilite.libelle, plaignant_5.personne_morale_nom, plaignant_5.personne_morale_prenom))
        ELSE TRIM(CONCAT(plaignant_5.personne_morale_raison_sociale, '' '', plaignant_5.personne_morale_denomination))
    END as nom_complet_qualite_pm_plaignant_5,
    CASE WHEN plaignant_5.personne_morale_nom IS NOT NULL OR plaignant_5.personne_morale_prenom IS NOT NULL
        THEN plaignant_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_plaignant_5,
    CASE WHEN plaignant_5.personne_morale_nom IS NOT NULL
        THEN plaignant_5.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_plaignant_5,
    CASE WHEN plaignant_5.personne_morale_prenom IS NOT NULL
        THEN plaignant_5.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN ''''
        ELSE plaignant_5.personne_morale_raison_sociale
    END as raison_sociale_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN ''''
        ELSE plaignant_5.personne_morale_denomination
    END as denomination_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN ''''
        ELSE plaignant_5.personne_morale_categorie_juridique
    END as categorie_juridique_plaignant_5,
    CASE WHEN plaignant_5.qualite=''particulier''
        THEN ''''
        ELSE plaignant_5.personne_morale_siret
    END as siret_plaignant_5,
    plaignant_5.numero as numero_plaignant_5,
&DB_PREFIXEadresse(plaignant_5.numero::text, plaignant_5.voie::text, plaignant_5.complement::text, plaignant_5.lieu_dit::text, plaignant_5.bp::text, plaignant_5.code_postal::text, plaignant_5.localite::text, plaignant_5.cedex::text, plaignant_5.pays::text) as adresse_plaignant_5_sdl,
&DB_PREFIXEadresse(plaignant_5.numero::text, plaignant_5.voie::text, plaignant_5.complement::text, plaignant_5.lieu_dit::text, plaignant_5.bp::text, plaignant_5.code_postal::text, plaignant_5.localite::text, plaignant_5.cedex::text, plaignant_5.pays::text, '' ''::text) as adresse_plaignant_5,
    plaignant_5.voie as voie_plaignant_5,
    plaignant_5.complement as complement_plaignant_5,
    plaignant_5.lieu_dit as lieu_dit_plaignant_5,
    CASE 
        WHEN plaignant_5.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', plaignant_5.bp)
    END as bp_plaignant_5,
    plaignant_5.code_postal as code_postal_plaignant_5,
    plaignant_5.localite as localite_plaignant_5,
    CASE 
        WHEN plaignant_5.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', plaignant_5.cedex)
    END as cedex_plaignant_5,
    plaignant_5.pays as pays_plaignant_5,
    plaignant_5.division_territoriale as division_territoriale_plaignant_5,
    CASE WHEN plaignant_5.qualite = ''particulier''
        THEN to_char(plaignant_5.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_plaignant_5,
    CASE WHEN plaignant_5.qualite = ''particulier''
        THEN CONCAT_WS('' '', plaignant_5.particulier_commune_naissance, plaignant_5.particulier_departement_naissance, plaignant_5.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_plaignant_5,
    plaignant_5.courriel as email_plaignant_5,
    CONCAT_WS('' '', plaignant_5.indicatif, CONCAT_WS('' / '', plaignant_5.telephone_fixe, plaignant_5.telephone_mobile)) as coordonnees_telephonique_plaignant_5,

    --Coordonnées du délégataire

    CASE WHEN delegataire.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
        ELSE
            CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', delegataire.personne_morale_raison_sociale, delegataire.personne_morale_denomination, ''représenté(e) par'', delegataire_civilite.libelle, delegataire.personne_morale_nom, delegataire.personne_morale_prenom))
                ELSE TRIM(CONCAT(delegataire.personne_morale_raison_sociale, '' '', delegataire.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_delegataire,
    CASE WHEN delegataire.qualite=''particulier'' OR delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
        THEN delegataire_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire.particulier_nom
        ELSE
            CASE WHEN delegataire.personne_morale_nom IS NOT NULL
                THEN delegataire.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire.particulier_prenom
        ELSE
            CASE WHEN delegataire.personne_morale_prenom IS NOT NULL
                THEN delegataire.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire.particulier_nom
        ELSE ''''
    END as nom_qualite_part_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN delegataire.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_delegataire,
    CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', delegataire.personne_morale_raison_sociale, delegataire.personne_morale_denomination, ''représenté(e) par'', delegataire_civilite.libelle, delegataire.personne_morale_nom, delegataire.personne_morale_prenom))
        ELSE TRIM(CONCAT(delegataire.personne_morale_raison_sociale, '' '', delegataire.personne_morale_denomination))
    END as nom_complet_qualite_pm_delegataire,
    CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
        THEN delegataire_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_delegataire,
    CASE WHEN delegataire.personne_morale_nom IS NOT NULL
        THEN delegataire.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_delegataire,
    CASE WHEN delegataire.personne_morale_prenom IS NOT NULL
        THEN delegataire.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN ''''
        ELSE delegataire.personne_morale_raison_sociale
    END as raison_sociale_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN ''''
        ELSE delegataire.personne_morale_denomination
    END as denomination_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN ''''
        ELSE delegataire.personne_morale_siret
    END as siret_delegataire,
    CASE WHEN delegataire.qualite=''particulier''
        THEN ''''
        ELSE delegataire.personne_morale_categorie_juridique
    END as categorie_juridique_delegataire,
    delegataire.numero as numero_delegataire,
&DB_PREFIXEadresse(delegataire.numero::text, delegataire.voie::text, delegataire.complement::text, delegataire.lieu_dit::text, delegataire.bp::text, delegataire.code_postal::text, delegataire.localite::text, delegataire.cedex::text, delegataire.pays::text) as adresse_delegataire_sdl,
&DB_PREFIXEadresse(delegataire.numero::text, delegataire.voie::text, delegataire.complement::text, delegataire.lieu_dit::text, delegataire.bp::text, delegataire.code_postal::text, delegataire.localite::text, delegataire.cedex::text, delegataire.pays::text, '' ''::text) as adresse_delegataire,
    delegataire.voie as voie_delegataire,
    delegataire.complement as complement_delegataire,
    delegataire.lieu_dit as lieu_dit_delegataire,
    CASE 
        WHEN delegataire.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', delegataire.bp)
    END as bp_delegataire,
    delegataire.code_postal as code_postal_delegataire,
    delegataire.localite as ville_delegataire,
    CASE 
        WHEN delegataire.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', delegataire.cedex)
    END as cedex_delegataire,
    delegataire.pays as pays_delegataire,
    delegataire.division_territoriale as division_territoriale_delegataire,
    CASE WHEN delegataire.qualite = ''particulier''
        THEN to_char(delegataire.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_delegataire,
    CASE WHEN delegataire.qualite = ''particulier''
        THEN CONCAT_WS('' '', delegataire.particulier_commune_naissance, delegataire.particulier_departement_naissance, delegataire.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_delegataire,
    delegataire.courriel as email_delegataire,
    CONCAT_WS('' '', delegataire.indicatif, CONCAT_WS('' / '', delegataire.telephone_fixe, delegataire.telephone_mobile)) as coordonnees_telephonique_delegataire,

    --Coordonnées de du bailleur principal

    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_principal_civilite.libelle, bailleur_principal.particulier_nom, bailleur_principal.particulier_prenom))
        ELSE
            CASE WHEN bailleur_principal.personne_morale_nom IS NOT NULL OR bailleur_principal.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', bailleur_principal.personne_morale_raison_sociale, bailleur_principal.personne_morale_denomination, ''représenté(e) par'', bailleur_principal_civilite.libelle, bailleur_principal.personne_morale_nom, bailleur_principal.personne_morale_prenom))
                ELSE TRIM(CONCAT(bailleur_principal.personne_morale_raison_sociale, '' '', bailleur_principal.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier'' OR bailleur_principal.personne_morale_nom IS NOT NULL OR bailleur_principal.personne_morale_prenom IS NOT NULL
        THEN bailleur_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN bailleur_principal.particulier_nom
        ELSE
            CASE WHEN bailleur_principal.personne_morale_nom IS NOT NULL
                THEN bailleur_principal.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN bailleur_principal.particulier_prenom
        ELSE
            CASE WHEN bailleur_principal.personne_morale_prenom IS NOT NULL
                THEN bailleur_principal.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_principal_civilite.libelle, bailleur_principal.particulier_nom, bailleur_principal.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN bailleur_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN bailleur_principal.particulier_nom
        ELSE ''''
    END as nom_qualite_part_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN bailleur_principal.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_bailleur_principal,
    CASE WHEN bailleur_principal.personne_morale_nom IS NOT NULL OR bailleur_principal.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', bailleur_principal.personne_morale_raison_sociale, bailleur_principal.personne_morale_denomination, ''représenté(e) par'', bailleur_principal_civilite.libelle, bailleur_principal.personne_morale_nom, bailleur_principal.personne_morale_prenom))
        ELSE TRIM(CONCAT(bailleur_principal.personne_morale_raison_sociale, '' '', bailleur_principal.personne_morale_denomination))
    END as nom_complet_qualite_pm_bailleur_principal,
    CASE WHEN bailleur_principal.personne_morale_nom IS NOT NULL OR bailleur_principal.personne_morale_prenom IS NOT NULL
        THEN bailleur_principal_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_bailleur_principal,
    CASE WHEN bailleur_principal.personne_morale_nom IS NOT NULL
        THEN bailleur_principal.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_bailleur_principal,
    CASE WHEN bailleur_principal.personne_morale_prenom IS NOT NULL
        THEN bailleur_principal.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN ''''
        ELSE bailleur_principal.personne_morale_raison_sociale
    END as raison_sociale_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN ''''
        ELSE bailleur_principal.personne_morale_denomination
    END as denomination_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN ''''
        ELSE bailleur_principal.personne_morale_siret
    END as siret_bailleur_principal,
    CASE WHEN bailleur_principal.qualite=''particulier''
        THEN ''''
        ELSE bailleur_principal.personne_morale_categorie_juridique
    END as categorie_juridique_bailleur_principal,
    bailleur_principal.numero as numero_bailleur_principal,
&DB_PREFIXEadresse(bailleur_principal.numero::text, bailleur_principal.voie::text, bailleur_principal.complement::text, bailleur_principal.lieu_dit::text, bailleur_principal.bp::text, bailleur_principal.code_postal::text, bailleur_principal.localite::text, bailleur_principal.cedex::text, bailleur_principal.pays::text) as adresse_bailleur_principal_sdl,
&DB_PREFIXEadresse(bailleur_principal.numero::text, bailleur_principal.voie::text, bailleur_principal.complement::text, bailleur_principal.lieu_dit::text, bailleur_principal.bp::text, bailleur_principal.code_postal::text, bailleur_principal.localite::text, bailleur_principal.cedex::text, bailleur_principal.pays::text, '' ''::text) as adresse_bailleur_principal,
    bailleur_principal.voie as voie_bailleur_principal,
    bailleur_principal.complement as complement_bailleur_principal,
    bailleur_principal.lieu_dit as lieu_dit_bailleur_principal,
    CASE 
        WHEN bailleur_principal.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', bailleur_principal.bp)
    END as bp_bailleur_principal,
    bailleur_principal.code_postal as code_postal_bailleur_principal,
    bailleur_principal.localite as localite_bailleur_principal,
    CASE 
        WHEN bailleur_principal.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', bailleur_principal.cedex)
    END as cedex_bailleur_principal,
    bailleur_principal.pays as pays_bailleur_principal,
    bailleur_principal.division_territoriale as division_territoriale_bailleur_principal,
    CASE WHEN bailleur_principal.qualite = ''particulier''
        THEN to_char(bailleur_principal.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_bailleur_principal,
    CASE WHEN bailleur_principal.qualite = ''particulier''
        THEN CONCAT_WS('' '', bailleur_principal.particulier_commune_naissance, bailleur_principal.particulier_departement_naissance, bailleur_principal.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_bailleur_principal,
    bailleur_principal.courriel as email_bailleur_principal,
    CONCAT_WS('' '', bailleur_principal.indicatif, CONCAT_WS('' / '', bailleur_principal.telephone_fixe, bailleur_principal.telephone_mobile)) as coordonnees_telephonique_bailleur_principal,

    --Coordonnées de du bailleur 1

    CASE WHEN bailleur_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_1_civilite.libelle, bailleur_1.particulier_nom, bailleur_1.particulier_prenom))
        ELSE
            CASE WHEN bailleur_1.personne_morale_nom IS NOT NULL OR bailleur_1.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', bailleur_1.personne_morale_raison_sociale, bailleur_1.personne_morale_denomination, ''représenté(e) par'', bailleur_1_civilite.libelle, bailleur_1.personne_morale_nom, bailleur_1.personne_morale_prenom))
                ELSE TRIM(CONCAT(bailleur_1.personne_morale_raison_sociale, '' '', bailleur_1.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier'' OR bailleur_1.personne_morale_nom IS NOT NULL OR bailleur_1.personne_morale_prenom IS NOT NULL
        THEN bailleur_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN bailleur_1.particulier_nom
        ELSE
            CASE WHEN bailleur_1.personne_morale_nom IS NOT NULL
                THEN bailleur_1.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN bailleur_1.particulier_prenom
        ELSE
            CASE WHEN bailleur_1.personne_morale_prenom IS NOT NULL
                THEN bailleur_1.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_1_civilite.libelle, bailleur_1.particulier_nom, bailleur_1.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN bailleur_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN bailleur_1.particulier_nom
        ELSE ''''
    END as nom_qualite_part_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN bailleur_1.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_bailleur_1,
    CASE WHEN bailleur_1.personne_morale_nom IS NOT NULL OR bailleur_1.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', bailleur_1.personne_morale_raison_sociale, bailleur_1.personne_morale_denomination, ''représenté(e) par'', bailleur_1_civilite.libelle, bailleur_1.personne_morale_nom, bailleur_1.personne_morale_prenom))
        ELSE TRIM(CONCAT(bailleur_1.personne_morale_raison_sociale, '' '', bailleur_1.personne_morale_denomination))
    END as nom_complet_qualite_pm_bailleur_1,
    CASE WHEN bailleur_1.personne_morale_nom IS NOT NULL OR bailleur_1.personne_morale_prenom IS NOT NULL
        THEN bailleur_1_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_bailleur_1,
    CASE WHEN bailleur_1.personne_morale_nom IS NOT NULL
        THEN bailleur_1.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_bailleur_1,
    CASE WHEN bailleur_1.personne_morale_prenom IS NOT NULL
        THEN bailleur_1.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN ''''
        ELSE bailleur_1.personne_morale_raison_sociale
    END as raison_sociale_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN ''''
        ELSE bailleur_1.personne_morale_denomination
    END as denomination_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN ''''
        ELSE bailleur_1.personne_morale_siret
    END as siret_bailleur_1,
    CASE WHEN bailleur_1.qualite=''particulier''
        THEN ''''
        ELSE bailleur_1.personne_morale_categorie_juridique
    END as categorie_juridique_bailleur_1,
    bailleur_1.numero as numero_bailleur_1,
&DB_PREFIXEadresse(bailleur_1.numero::text, bailleur_1.voie::text, bailleur_1.complement::text, bailleur_1.lieu_dit::text, bailleur_1.bp::text, bailleur_1.code_postal::text, bailleur_1.localite::text, bailleur_1.cedex::text, bailleur_1.pays::text) as adresse_bailleur_1_sdl,
&DB_PREFIXEadresse(bailleur_1.numero::text, bailleur_1.voie::text, bailleur_1.complement::text, bailleur_1.lieu_dit::text, bailleur_1.bp::text, bailleur_1.code_postal::text, bailleur_1.localite::text, bailleur_1.cedex::text, bailleur_1.pays::text, '' ''::text) as adresse_bailleur_1,
    bailleur_1.voie as voie_bailleur_1,
    bailleur_1.complement as complement_bailleur_1,
    bailleur_1.lieu_dit as lieu_dit_bailleur_1,
    CASE 
        WHEN bailleur_1.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', bailleur_1.bp)
    END as bp_bailleur_1,
    bailleur_1.code_postal as code_postal_bailleur_1,
    bailleur_1.localite as localite_bailleur_1,
    CASE 
        WHEN bailleur_1.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', bailleur_1.cedex)
    END as cedex_bailleur_1,
    bailleur_1.pays as pays_bailleur_1,
    bailleur_1.division_territoriale as division_territoriale_bailleur_1,
    CASE WHEN bailleur_1.qualite = ''particulier''
        THEN to_char(bailleur_1.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_bailleur_1,
    CASE WHEN bailleur_1.qualite = ''particulier''
        THEN CONCAT_WS('' '', bailleur_1.particulier_commune_naissance, bailleur_1.particulier_departement_naissance, bailleur_1.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_bailleur_1,
    bailleur_1.courriel as email_bailleur_1,
    CONCAT_WS('' '', bailleur_1.indicatif, CONCAT_WS('' / '', bailleur_1.telephone_fixe, bailleur_1.telephone_mobile)) as coordonnees_telephonique_bailleur_1,

    --Coordonnées de du bailleur 2

    CASE WHEN bailleur_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_2_civilite.libelle, bailleur_2.particulier_nom, bailleur_2.particulier_prenom))
        ELSE
            CASE WHEN bailleur_2.personne_morale_nom IS NOT NULL OR bailleur_2.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', bailleur_2.personne_morale_raison_sociale, bailleur_2.personne_morale_denomination, ''représenté(e) par'', bailleur_2_civilite.libelle, bailleur_2.personne_morale_nom, bailleur_2.personne_morale_prenom))
                ELSE TRIM(CONCAT(bailleur_2.personne_morale_raison_sociale, '' '', bailleur_2.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier'' OR bailleur_2.personne_morale_nom IS NOT NULL OR bailleur_2.personne_morale_prenom IS NOT NULL
        THEN bailleur_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN bailleur_2.particulier_nom
        ELSE
            CASE WHEN bailleur_2.personne_morale_nom IS NOT NULL
                THEN bailleur_2.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN bailleur_2.particulier_prenom
        ELSE
            CASE WHEN bailleur_2.personne_morale_prenom IS NOT NULL
                THEN bailleur_2.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_2_civilite.libelle, bailleur_2.particulier_nom, bailleur_2.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN bailleur_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN bailleur_2.particulier_nom
        ELSE ''''
    END as nom_qualite_part_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN bailleur_2.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_bailleur_2,
    CASE WHEN bailleur_2.personne_morale_nom IS NOT NULL OR bailleur_2.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', bailleur_2.personne_morale_raison_sociale, bailleur_2.personne_morale_denomination, ''représenté(e) par'', bailleur_2_civilite.libelle, bailleur_2.personne_morale_nom, bailleur_2.personne_morale_prenom))
        ELSE TRIM(CONCAT(bailleur_2.personne_morale_raison_sociale, '' '', bailleur_2.personne_morale_denomination))
    END as nom_complet_qualite_pm_bailleur_2,
    CASE WHEN bailleur_2.personne_morale_nom IS NOT NULL OR bailleur_2.personne_morale_prenom IS NOT NULL
        THEN bailleur_2_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_bailleur_2,
    CASE WHEN bailleur_2.personne_morale_nom IS NOT NULL
        THEN bailleur_2.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_bailleur_2,
    CASE WHEN bailleur_2.personne_morale_prenom IS NOT NULL
        THEN bailleur_2.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN ''''
        ELSE bailleur_2.personne_morale_raison_sociale
    END as raison_sociale_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN ''''
        ELSE bailleur_2.personne_morale_denomination
    END as denomination_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN ''''
        ELSE bailleur_2.personne_morale_categorie_juridique
    END as categorie_juridique_bailleur_2,
    CASE WHEN bailleur_2.qualite=''particulier''
        THEN ''''
        ELSE bailleur_2.personne_morale_siret
    END as siret_bailleur_2,
    bailleur_2.numero as numero_bailleur_2,
&DB_PREFIXEadresse(bailleur_2.numero::text, bailleur_2.voie::text, bailleur_2.complement::text, bailleur_2.lieu_dit::text, bailleur_2.bp::text, bailleur_2.code_postal::text, bailleur_2.localite::text, bailleur_2.cedex::text, bailleur_2.pays::text) as adresse_bailleur_2_sdl,
&DB_PREFIXEadresse(bailleur_2.numero::text, bailleur_2.voie::text, bailleur_2.complement::text, bailleur_2.lieu_dit::text, bailleur_2.bp::text, bailleur_2.code_postal::text, bailleur_2.localite::text, bailleur_2.cedex::text, bailleur_2.pays::text, '' ''::text) as adresse_bailleur_2,
    bailleur_2.voie as voie_bailleur_2,
    bailleur_2.complement as complement_bailleur_2,
    bailleur_2.lieu_dit as lieu_dit_bailleur_2,
    CASE 
        WHEN bailleur_2.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', bailleur_2.bp)
    END as bp_bailleur_2,
    bailleur_2.code_postal as code_postal_bailleur_2,
    bailleur_2.localite as localite_bailleur_2,
    CASE 
        WHEN bailleur_2.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', bailleur_2.cedex)
    END as cedex_bailleur_2,
    bailleur_2.pays as pays_bailleur_2,
    bailleur_2.division_territoriale as division_territoriale_bailleur_2,
    CASE WHEN bailleur_2.qualite = ''particulier''
        THEN to_char(bailleur_2.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_bailleur_2,
    CASE WHEN bailleur_2.qualite = ''particulier''
        THEN CONCAT_WS('' '', bailleur_2.particulier_commune_naissance, bailleur_2.particulier_departement_naissance, bailleur_2.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_bailleur_2,
    bailleur_2.courriel as email_bailleur_2,
    CONCAT_WS('' '', bailleur_2.indicatif, CONCAT_WS('' / '', bailleur_2.telephone_fixe, bailleur_2.telephone_mobile)) as coordonnees_telephonique_bailleur_2,

    --Coordonnées de du bailleur 3

    CASE WHEN bailleur_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_3_civilite.libelle, bailleur_3.particulier_nom, bailleur_3.particulier_prenom))
        ELSE
            CASE WHEN bailleur_3.personne_morale_nom IS NOT NULL OR bailleur_3.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', bailleur_3.personne_morale_raison_sociale, bailleur_3.personne_morale_denomination, ''représenté(e) par'', bailleur_3_civilite.libelle, bailleur_3.personne_morale_nom, bailleur_3.personne_morale_prenom))
                ELSE TRIM(CONCAT(bailleur_3.personne_morale_raison_sociale, '' '', bailleur_3.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier'' OR bailleur_3.personne_morale_nom IS NOT NULL OR bailleur_3.personne_morale_prenom IS NOT NULL
        THEN bailleur_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN bailleur_3.particulier_nom
        ELSE
            CASE WHEN bailleur_3.personne_morale_nom IS NOT NULL
                THEN bailleur_3.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN bailleur_3.particulier_prenom
        ELSE
            CASE WHEN bailleur_3.personne_morale_prenom IS NOT NULL
                THEN bailleur_3.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_3_civilite.libelle, bailleur_3.particulier_nom, bailleur_3.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN bailleur_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN bailleur_3.particulier_nom
        ELSE ''''
    END as nom_qualite_part_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN bailleur_3.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_bailleur_3,
    CASE WHEN bailleur_3.personne_morale_nom IS NOT NULL OR bailleur_3.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', bailleur_3.personne_morale_raison_sociale, bailleur_3.personne_morale_denomination, ''représenté(e) par'', bailleur_3_civilite.libelle, bailleur_3.personne_morale_nom, bailleur_3.personne_morale_prenom))
        ELSE TRIM(CONCAT(bailleur_3.personne_morale_raison_sociale, '' '', bailleur_3.personne_morale_denomination))
    END as nom_complet_qualite_pm_bailleur_3,
    CASE WHEN bailleur_3.personne_morale_nom IS NOT NULL OR bailleur_3.personne_morale_prenom IS NOT NULL
        THEN bailleur_3_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_bailleur_3,
    CASE WHEN bailleur_3.personne_morale_nom IS NOT NULL
        THEN bailleur_3.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_bailleur_3,
    CASE WHEN bailleur_3.personne_morale_prenom IS NOT NULL
        THEN bailleur_3.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN ''''
        ELSE bailleur_3.personne_morale_raison_sociale
    END as raison_sociale_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN ''''
        ELSE bailleur_3.personne_morale_denomination
    END as denomination_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN ''''
        ELSE bailleur_3.personne_morale_siret
    END as siret_bailleur_3,
    CASE WHEN bailleur_3.qualite=''particulier''
        THEN ''''
        ELSE bailleur_3.personne_morale_categorie_juridique
    END as categorie_juridique_bailleur_3,
    bailleur_3.numero as numero_bailleur_3,
&DB_PREFIXEadresse(bailleur_3.numero::text, bailleur_3.voie::text, bailleur_3.complement::text, bailleur_3.lieu_dit::text, bailleur_3.bp::text, bailleur_3.code_postal::text, bailleur_3.localite::text, bailleur_3.cedex::text, bailleur_3.pays::text) as adresse_bailleur_3_sdl,
&DB_PREFIXEadresse(bailleur_3.numero::text, bailleur_3.voie::text, bailleur_3.complement::text, bailleur_3.lieu_dit::text, bailleur_3.bp::text, bailleur_3.code_postal::text, bailleur_3.localite::text, bailleur_3.cedex::text, bailleur_3.pays::text, '' ''::text) as adresse_bailleur_3,
    bailleur_3.voie as voie_bailleur_3,
    bailleur_3.complement as complement_bailleur_3,
    bailleur_3.lieu_dit as lieu_dit_bailleur_3,
    CASE 
        WHEN bailleur_3.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', bailleur_3.bp)
    END as bp_bailleur_3,
    bailleur_3.code_postal as code_postal_bailleur_3,
    bailleur_3.localite as localite_bailleur_3,
    CASE 
        WHEN bailleur_3.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', bailleur_3.cedex)
    END as cedex_bailleur_3,
    bailleur_3.pays as pays_bailleur_3,
    bailleur_3.division_territoriale as division_territoriale_bailleur_3,
    CASE WHEN bailleur_3.qualite = ''particulier''
        THEN to_char(bailleur_3.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_bailleur_3,
    CASE WHEN bailleur_3.qualite = ''particulier''
        THEN CONCAT_WS('' '', bailleur_3.particulier_commune_naissance, bailleur_3.particulier_departement_naissance, bailleur_3.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_bailleur_3,
    bailleur_3.courriel as email_bailleur_3,
    CONCAT_WS('' '', bailleur_3.indicatif, CONCAT_WS('' / '', bailleur_3.telephone_fixe, bailleur_3.telephone_mobile)) as coordonnees_telephonique_bailleur_3,

    --Coordonnées de du bailleur 4

    CASE WHEN bailleur_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_4_civilite.libelle, bailleur_4.particulier_nom, bailleur_4.particulier_prenom))
        ELSE
            CASE WHEN bailleur_4.personne_morale_nom IS NOT NULL OR bailleur_4.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', bailleur_4.personne_morale_raison_sociale, bailleur_4.personne_morale_denomination, ''représenté(e) par'', bailleur_4_civilite.libelle, bailleur_4.personne_morale_nom, bailleur_4.personne_morale_prenom))
                ELSE TRIM(CONCAT(bailleur_4.personne_morale_raison_sociale, '' '', bailleur_4.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier'' OR bailleur_4.personne_morale_nom IS NOT NULL OR bailleur_4.personne_morale_prenom IS NOT NULL
        THEN bailleur_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN bailleur_4.particulier_nom
        ELSE
            CASE WHEN bailleur_4.personne_morale_nom IS NOT NULL
                THEN bailleur_4.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN bailleur_4.particulier_prenom
        ELSE
            CASE WHEN bailleur_4.personne_morale_prenom IS NOT NULL
                THEN bailleur_4.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_4_civilite.libelle, bailleur_4.particulier_nom, bailleur_4.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN bailleur_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN bailleur_4.particulier_nom
        ELSE ''''
    END as nom_qualite_part_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN bailleur_4.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_bailleur_4,
    CASE WHEN bailleur_4.personne_morale_nom IS NOT NULL OR bailleur_4.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', bailleur_4.personne_morale_raison_sociale, bailleur_4.personne_morale_denomination, ''représenté(e) par'', bailleur_4_civilite.libelle, bailleur_4.personne_morale_nom, bailleur_4.personne_morale_prenom))
        ELSE TRIM(CONCAT(bailleur_4.personne_morale_raison_sociale, '' '', bailleur_4.personne_morale_denomination))
    END as nom_complet_qualite_pm_bailleur_4,
    CASE WHEN bailleur_4.personne_morale_nom IS NOT NULL OR bailleur_4.personne_morale_prenom IS NOT NULL
        THEN bailleur_4_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_bailleur_4,
    CASE WHEN bailleur_4.personne_morale_nom IS NOT NULL
        THEN bailleur_4.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_bailleur_4,
    CASE WHEN bailleur_4.personne_morale_prenom IS NOT NULL
        THEN bailleur_4.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN ''''
        ELSE bailleur_4.personne_morale_raison_sociale
    END as raison_sociale_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN ''''
        ELSE bailleur_4.personne_morale_denomination
    END as denomination_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN ''''
        ELSE bailleur_4.personne_morale_categorie_juridique
    END as categorie_juridique_bailleur_4,
    CASE WHEN bailleur_4.qualite=''particulier''
        THEN ''''
        ELSE bailleur_4.personne_morale_siret
    END as siret_bailleur_4,
    bailleur_4.numero as numero_bailleur_4,
&DB_PREFIXEadresse(bailleur_4.numero::text, bailleur_4.voie::text, bailleur_4.complement::text, bailleur_4.lieu_dit::text, bailleur_4.bp::text, bailleur_4.code_postal::text, bailleur_4.localite::text, bailleur_4.cedex::text, bailleur_4.pays::text) as adresse_bailleur_4_sdl,
&DB_PREFIXEadresse(bailleur_4.numero::text, bailleur_4.voie::text, bailleur_4.complement::text, bailleur_4.lieu_dit::text, bailleur_4.bp::text, bailleur_4.code_postal::text, bailleur_4.localite::text, bailleur_4.cedex::text, bailleur_4.pays::text, '' ''::text) as adresse_bailleur_4,
    bailleur_4.voie as voie_bailleur_4,
    bailleur_4.complement as complement_bailleur_4,
    bailleur_4.lieu_dit as lieu_dit_bailleur_4,
    CASE 
        WHEN bailleur_4.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', bailleur_4.bp)
    END as bp_bailleur_4,
    bailleur_4.code_postal as code_postal_bailleur_4,
    bailleur_4.localite as localite_bailleur_4,
    CASE 
        WHEN bailleur_4.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', bailleur_4.cedex)
    END as cedex_bailleur_4,
    bailleur_4.pays as pays_bailleur_4,
    bailleur_4.division_territoriale as division_territoriale_bailleur_4,
    CASE WHEN bailleur_4.qualite = ''particulier''
        THEN to_char(bailleur_4.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_bailleur_4,
    CASE WHEN bailleur_4.qualite = ''particulier''
        THEN CONCAT_WS('' '', bailleur_4.particulier_commune_naissance, bailleur_4.particulier_departement_naissance, bailleur_4.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_bailleur_4,
    bailleur_4.courriel as email_bailleur_4,
    CONCAT_WS('' '', bailleur_4.indicatif, CONCAT_WS('' / '', bailleur_4.telephone_fixe, bailleur_4.telephone_mobile)) as coordonnees_telephonique_bailleur_4,

    --Coordonnées de du bailleur 5

    CASE WHEN bailleur_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_5_civilite.libelle, bailleur_5.particulier_nom, bailleur_5.particulier_prenom))
        ELSE
            CASE WHEN bailleur_5.personne_morale_nom IS NOT NULL OR bailleur_5.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', bailleur_5.personne_morale_raison_sociale, bailleur_5.personne_morale_denomination, ''représenté(e) par'', bailleur_5_civilite.libelle, bailleur_5.personne_morale_nom, bailleur_5.personne_morale_prenom))
                ELSE TRIM(CONCAT(bailleur_5.personne_morale_raison_sociale, '' '', bailleur_5.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier'' OR bailleur_5.personne_morale_nom IS NOT NULL OR bailleur_5.personne_morale_prenom IS NOT NULL
        THEN bailleur_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN bailleur_5.particulier_nom
        ELSE
            CASE WHEN bailleur_5.personne_morale_nom IS NOT NULL
                THEN bailleur_5.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN bailleur_5.particulier_prenom
        ELSE
            CASE WHEN bailleur_5.personne_morale_prenom IS NOT NULL
                THEN bailleur_5.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', bailleur_5_civilite.libelle, bailleur_5.particulier_nom, bailleur_5.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN bailleur_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN bailleur_5.particulier_nom
        ELSE ''''
    END as nom_qualite_part_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN bailleur_5.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_bailleur_5,
    CASE WHEN bailleur_5.personne_morale_nom IS NOT NULL OR bailleur_5.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', bailleur_5.personne_morale_raison_sociale, bailleur_5.personne_morale_denomination, ''représenté(e) par'', bailleur_5_civilite.libelle, bailleur_5.personne_morale_nom, bailleur_5.personne_morale_prenom))
        ELSE TRIM(CONCAT(bailleur_5.personne_morale_raison_sociale, '' '', bailleur_5.personne_morale_denomination))
    END as nom_complet_qualite_pm_bailleur_5,
    CASE WHEN bailleur_5.personne_morale_nom IS NOT NULL OR bailleur_5.personne_morale_prenom IS NOT NULL
        THEN bailleur_5_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_bailleur_5,
    CASE WHEN bailleur_5.personne_morale_nom IS NOT NULL
        THEN bailleur_5.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_bailleur_5,
    CASE WHEN bailleur_5.personne_morale_prenom IS NOT NULL
        THEN bailleur_5.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN ''''
        ELSE bailleur_5.personne_morale_raison_sociale
    END as raison_sociale_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN ''''
        ELSE bailleur_5.personne_morale_denomination
    END as denomination_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN ''''
        ELSE bailleur_5.personne_morale_categorie_juridique
    END as categorie_juridique_bailleur_5,
    CASE WHEN bailleur_5.qualite=''particulier''
        THEN ''''
        ELSE bailleur_5.personne_morale_siret
    END as siret_bailleur_5,
    bailleur_5.numero as numero_bailleur_5,
&DB_PREFIXEadresse(bailleur_5.numero::text, bailleur_5.voie::text, bailleur_5.complement::text, bailleur_5.lieu_dit::text, bailleur_5.bp::text, bailleur_5.code_postal::text, bailleur_5.localite::text, bailleur_5.cedex::text, bailleur_5.pays::text) as adresse_bailleur_5_sdl,
&DB_PREFIXEadresse(bailleur_5.numero::text, bailleur_5.voie::text, bailleur_5.complement::text, bailleur_5.lieu_dit::text, bailleur_5.bp::text, bailleur_5.code_postal::text, bailleur_5.localite::text, bailleur_5.cedex::text, bailleur_5.pays::text, '' ''::text) as adresse_bailleur_5,
    bailleur_5.voie as voie_bailleur_5,
    bailleur_5.complement as complement_bailleur_5,
    bailleur_5.lieu_dit as lieu_dit_bailleur_5,
    CASE 
        WHEN bailleur_5.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', bailleur_5.bp)
    END as bp_bailleur_5,
    bailleur_5.code_postal as code_postal_bailleur_5,
    bailleur_5.localite as localite_bailleur_5,
    CASE 
        WHEN bailleur_5.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', bailleur_5.cedex)
    END as cedex_bailleur_5,
    bailleur_5.pays as pays_bailleur_5,
    bailleur_5.division_territoriale as division_territoriale_bailleur_5,
    CASE WHEN bailleur_5.qualite = ''particulier''
        THEN to_char(bailleur_5.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_bailleur_5,
    CASE WHEN bailleur_5.qualite = ''particulier''
        THEN CONCAT_WS('' '', bailleur_5.particulier_commune_naissance, bailleur_5.particulier_departement_naissance, bailleur_5.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_bailleur_5,
    bailleur_5.courriel as email_bailleur_5,
    CONCAT_WS('' '', bailleur_5.indicatif, CONCAT_WS('' / '', bailleur_5.telephone_fixe, bailleur_5.telephone_mobile)) as coordonnees_telephonique_bailleur_5,

    -- CORRESPONDANT : destinataire du courrier. Il est le délégataire ou le pétitionnaire principal

    CASE
        WHEN delegataire.qualite IS NULL
        THEN
                CASE WHEN petitionnaire_principal.qualite=''particulier''
                    THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
                    ELSE
                        CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                            THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                            ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
                        END
                END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
                ELSE
                    CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                        THEN TRIM(CONCAT_WS('' '', delegataire.personne_morale_raison_sociale, delegataire.personne_morale_denomination, ''représenté(e) par'', delegataire_civilite.libelle, delegataire.personne_morale_nom, delegataire.personne_morale_prenom))
                        ELSE TRIM(CONCAT(delegataire.personne_morale_raison_sociale, '' '', delegataire.personne_morale_denomination))
                    END
            END
    END as nom_complet_qualite_part_ou_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier'' OR petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal_civilite.libelle
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier'' OR delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                THEN delegataire_civilite.libelle
                ELSE ''''
            END
    END as civilite_qualite_part_ou_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN petitionnaire_principal.particulier_nom
                ELSE
                    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                        THEN petitionnaire_principal.personne_morale_nom
                        ELSE ''''
                    END
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN delegataire.particulier_nom
                ELSE
                    CASE WHEN delegataire.personne_morale_nom IS NOT NULL
                        THEN delegataire.personne_morale_nom
                        ELSE ''''
                    END
            END
    END as nom_qualite_part_ou_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN petitionnaire_principal.particulier_prenom
                ELSE
                    CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                        THEN petitionnaire_principal.personne_morale_prenom
                        ELSE ''''
                    END
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN delegataire.particulier_prenom
                ELSE
                    CASE WHEN delegataire.personne_morale_prenom IS NOT NULL
                        THEN delegataire.personne_morale_prenom
                        ELSE ''''
                    END
            END
    END as prenom_qualite_part_ou_pm_correspondant,
    CASE
        WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
                ELSE ''''
            END
    END as nom_complet_qualite_part_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN petitionnaire_principal_civilite.libelle
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN delegataire_civilite.libelle
                ELSE ''''
            END
    END as civilite_qualite_part_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            petitionnaire_principal.particulier_nom
        ELSE
            delegataire.particulier_nom
    END as nom_qualite_part_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            petitionnaire_principal.particulier_prenom
        ELSE
            delegataire.particulier_prenom
    END as prenom_qualite_part_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal_civilite.libelle
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                THEN delegataire_civilite.libelle
                ELSE ''''
            END
    END as civilite_qualite_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_nom
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.personne_morale_nom IS NOT NULL
                THEN delegataire.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.personne_morale_prenom IS NOT NULL
                THEN petitionnaire_principal.personne_morale_prenom
                ELSE ''''
            END
        ELSE
            CASE WHEN delegataire.personne_morale_prenom IS NOT NULL
                THEN delegataire.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_pm_correspondant,

    CASE
        WHEN delegataire.qualite IS NULL
        THEN
                CASE WHEN petitionnaire_principal.qualite=''particulier''
                    THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
                    ELSE
                        CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                            THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                            ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
                        END
                END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
                ELSE
                    CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                        THEN TRIM(CONCAT_WS('' '', delegataire.personne_morale_raison_sociale, delegataire.personne_morale_denomination, ''représenté(e) par'', delegataire_civilite.libelle, delegataire.personne_morale_nom, delegataire.personne_morale_prenom))
                        ELSE TRIM(CONCAT(delegataire.personne_morale_raison_sociale, '' '', delegataire.personne_morale_denomination))
                    END
            END
    END as nom_complet_qualite_pm_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN TRIM(CONCAT_WS('' '', petitionnaire_principal_civilite.libelle, petitionnaire_principal.particulier_nom, petitionnaire_principal.particulier_prenom))
                ELSE
                    CASE WHEN petitionnaire_principal.personne_morale_nom IS NOT NULL OR petitionnaire_principal.personne_morale_prenom IS NOT NULL
                        THEN TRIM(CONCAT_WS('' '', petitionnaire_principal.personne_morale_raison_sociale, petitionnaire_principal.personne_morale_denomination, ''représenté(e) par'', petitionnaire_principal_civilite.libelle, petitionnaire_principal.personne_morale_nom, petitionnaire_principal.personne_morale_prenom))
                        ELSE TRIM(CONCAT(petitionnaire_principal.personne_morale_raison_sociale, '' '', petitionnaire_principal.personne_morale_denomination))
                    END
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN TRIM(CONCAT_WS('' '', delegataire_civilite.libelle, delegataire.particulier_nom, delegataire.particulier_prenom))
                ELSE
                    CASE WHEN delegataire.personne_morale_nom IS NOT NULL OR delegataire.personne_morale_prenom IS NOT NULL
                        THEN TRIM(CONCAT_WS('' '', delegataire.personne_morale_raison_sociale, delegataire.personne_morale_denomination, ''représenté(e) par'', delegataire_civilite.libelle, delegataire.personne_morale_nom, delegataire.personne_morale_prenom))
                        ELSE TRIM(CONCAT(delegataire.personne_morale_raison_sociale, '' '', delegataire.personne_morale_denomination))
                    END
            END
    END as nom_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN ''''
                ELSE petitionnaire_principal.personne_morale_raison_sociale
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN ''''
                ELSE delegataire.personne_morale_raison_sociale
            END
    END as raison_sociale_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN ''''
                ELSE petitionnaire_principal.personne_morale_denomination
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN ''''
                ELSE delegataire.personne_morale_denomination
            END
    END as denomination_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN ''''
                ELSE petitionnaire_principal.personne_morale_siret
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN ''''
                ELSE delegataire.personne_morale_siret
            END
    END as siret_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN
            CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN ''''
                ELSE petitionnaire_principal.personne_morale_categorie_juridique
            END
        ELSE
            CASE WHEN delegataire.qualite=''particulier''
                THEN ''''
                ELSE delegataire.personne_morale_categorie_juridique
            END
    END as categorie_juridique_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.numero
        ELSE delegataire.numero
    END as numero_correspondant,
&DB_PREFIXEadresse(CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.numero ELSE delegataire.numero END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.voie ELSE delegataire.voie END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.complement ELSE delegataire.complement END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.lieu_dit ELSE delegataire.lieu_dit END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.bp ELSE delegataire.bp END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.code_postal ELSE delegataire.code_postal END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.localite ELSE delegataire.localite END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.cedex ELSE delegataire.cedex END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.pays ELSE delegataire.pays END::text) as adresse_correspondant_sdl,
&DB_PREFIXEadresse(CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.numero ELSE delegataire.numero END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.voie ELSE delegataire.voie END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.complement ELSE delegataire.complement END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.lieu_dit ELSE delegataire.lieu_dit END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.bp ELSE delegataire.bp END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.code_postal ELSE delegataire.code_postal END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.localite ELSE delegataire.localite END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.cedex ELSE delegataire.cedex END::text, CASE WHEN delegataire.qualite IS NULL THEN petitionnaire_principal.pays ELSE delegataire.pays END::text, '' ''::text) as adresse_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.voie
        ELSE delegataire.voie
    END as voie_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.complement
        ELSE delegataire.complement
    END as complement_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.lieu_dit
        ELSE delegataire.lieu_dit
    END as lieu_dit_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN 
            CASE 
                WHEN petitionnaire_principal.bp IS NULL
                THEN ''''
                ELSE CONCAT(''BP '', petitionnaire_principal.bp)
            END
        ELSE 
            CASE 
                WHEN delegataire.bp IS NULL
                THEN ''''
                ELSE CONCAT(''BP '', delegataire.bp)
            END
    END as bp_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.code_postal
        ELSE delegataire.code_postal
    END as code_postal_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.localite
        ELSE delegataire.localite
    END as ville_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN 
            CASE 
                WHEN petitionnaire_principal.cedex IS NULL
                THEN ''''
                ELSE CONCAT(''CEDEX '', petitionnaire_principal.cedex)
            END 
        ELSE 
            CASE 
                WHEN delegataire.cedex IS NULL
                THEN ''''
                ELSE CONCAT(''CEDEX '', delegataire.cedex)
            END 
    END as cedex_correspondant,

    CASE WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.pays
        ELSE delegataire.pays
    END as pays_correspondant,
    CASE WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.division_territoriale
        ELSE delegataire.division_territoriale
    END as division_territoriale_correspondant,
    CASE WHEN delegataire.qualite IS NULL
        THEN CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN to_char(petitionnaire_principal.particulier_date_naissance, ''DD/MM/YYYY'')
                ELSE ''''
            END
        ELSE CASE WHEN delegataire.qualite=''particulier''
                THEN to_char(delegataire.particulier_date_naissance, ''DD/MM/YYYY'')
                ELSE ''''
            END
    END as date_naissance_correspondant,
    CASE WHEN delegataire.qualite IS NULL
        THEN CASE WHEN petitionnaire_principal.qualite=''particulier''
                THEN CONCAT_WS('' '', petitionnaire_principal.particulier_commune_naissance, petitionnaire_principal.particulier_departement_naissance, petitionnaire_principal.particulier_pays_naissance)
                ELSE ''''
            END
        ELSE CASE WHEN delegataire.qualite=''particulier''
                THEN CONCAT_WS('' '', delegataire.particulier_commune_naissance, delegataire.particulier_departement_naissance, delegataire.particulier_pays_naissance)
                ELSE ''''
            END
    END as lieu_naissance_correspondant,
    CASE WHEN delegataire.qualite IS NULL
        THEN petitionnaire_principal.courriel
        ELSE delegataire.courriel
    END as email_correspondant,
    CASE WHEN delegataire.qualite IS NULL
        THEN CONCAT_WS('' '', petitionnaire_principal.indicatif, CONCAT_WS('' / '', petitionnaire_principal.telephone_fixe, petitionnaire_principal.telephone_mobile))
        ELSE CONCAT_WS('' '', delegataire.indicatif, CONCAT_WS('' / '', delegataire.telephone_fixe, delegataire.telephone_mobile))
    END as coordonnees_telephonique_correspondant,
    CASE WHEN delegataire.qualite IS NULL
        THEN CASE WHEN petitionnaire_principal.notification IS TRUE
                THEN ''[X]''
                ELSE ''[ ]''
            END
        ELSE ''[ ]''
    END as notification_correspondant,

    -- Coordonnées du propriétaire

    CASE WHEN proprietaire.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', proprietaire_civilite.libelle, proprietaire.particulier_nom, proprietaire.particulier_prenom))
        ELSE
            CASE WHEN proprietaire.personne_morale_nom IS NOT NULL OR proprietaire.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', proprietaire.personne_morale_raison_sociale, proprietaire.personne_morale_denomination, ''représenté(e) par'', proprietaire_civilite.libelle, proprietaire.personne_morale_nom, proprietaire.personne_morale_prenom))
                ELSE TRIM(CONCAT(proprietaire.personne_morale_raison_sociale, '' '', proprietaire.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_proprietaire,
    CASE WHEN proprietaire.qualite=''particulier'' OR proprietaire.personne_morale_nom IS NOT NULL OR proprietaire.personne_morale_prenom IS NOT NULL
        THEN proprietaire_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_proprietaire,
    CASE WHEN proprietaire.qualite=''particulier''
        THEN proprietaire.particulier_nom
        ELSE
            CASE WHEN proprietaire.personne_morale_nom IS NOT NULL
                THEN proprietaire.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_proprietaire,
    CASE WHEN proprietaire.qualite=''particulier''
        THEN proprietaire.particulier_prenom
        ELSE
            CASE WHEN proprietaire.personne_morale_prenom IS NOT NULL
                THEN proprietaire.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_proprietaire,
    CASE WHEN proprietaire.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', proprietaire_civilite.libelle, proprietaire.particulier_nom, proprietaire.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_proprietaire,
    CASE WHEN proprietaire.qualite=''particulier''
        THEN proprietaire_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_proprietaire,
    CASE WHEN proprietaire.qualite=''particulier''
        THEN proprietaire.particulier_nom
        ELSE ''''
    END as nom_qualite_part_proprietaire,
    CASE WHEN proprietaire.qualite=''particulier''
        THEN proprietaire.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_proprietaire,
    CASE WHEN proprietaire.personne_morale_nom IS NOT NULL OR proprietaire.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', proprietaire.personne_morale_raison_sociale, proprietaire.personne_morale_denomination, ''représenté(e) par'', proprietaire_civilite.libelle, proprietaire.personne_morale_nom, proprietaire.personne_morale_prenom))
        ELSE TRIM(CONCAT(proprietaire.personne_morale_raison_sociale, '' '', proprietaire.personne_morale_denomination))
    END as nom_complet_qualite_pm_proprietaire,
    CASE WHEN proprietaire.personne_morale_nom IS NOT NULL OR proprietaire.personne_morale_prenom IS NOT NULL
        THEN proprietaire_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_proprietaire,
    CASE WHEN proprietaire.personne_morale_nom IS NOT NULL
        THEN proprietaire.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_proprietaire,
    CASE WHEN proprietaire.personne_morale_prenom IS NOT NULL
        THEN proprietaire.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_proprietaire,
    CASE WHEN proprietaire.qualite=''particulier''
        THEN ''''
        ELSE proprietaire.personne_morale_raison_sociale
    END as raison_sociale_proprietaire,
    CASE WHEN proprietaire.qualite=''particulier''
        THEN ''''
        ELSE proprietaire.personne_morale_denomination
    END as denomination_proprietaire,
    CASE WHEN proprietaire.qualite=''particulier''
        THEN ''''
        ELSE proprietaire.personne_morale_siret
    END as siret_proprietaire,
    CASE WHEN proprietaire.qualite=''particulier''
        THEN ''''
        ELSE proprietaire.personne_morale_categorie_juridique
    END as categorie_juridique_proprietaire,
    proprietaire.numero as numero_proprietaire,
&DB_PREFIXEadresse(proprietaire.numero::text, proprietaire.voie::text, proprietaire.complement::text, proprietaire.lieu_dit::text, proprietaire.bp::text, proprietaire.code_postal::text, proprietaire.localite::text, proprietaire.cedex::text, proprietaire.pays::text) as adresse_proprietaire_sdl,
&DB_PREFIXEadresse(proprietaire.numero::text, proprietaire.voie::text, proprietaire.complement::text, proprietaire.lieu_dit::text, proprietaire.bp::text, proprietaire.code_postal::text, proprietaire.localite::text, proprietaire.cedex::text, proprietaire.pays::text, '' ''::text) as adresse_proprietaire,
    proprietaire.voie as voie_proprietaire,
    proprietaire.complement as complement_proprietaire,
    proprietaire.lieu_dit as lieu_dit_proprietaire,
    CASE 
        WHEN proprietaire.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', proprietaire.bp)
    END as bp_proprietaire,
    proprietaire.code_postal as code_postal_proprietaire,
    proprietaire.localite as localite_proprietaire,
    CASE 
        WHEN proprietaire.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', proprietaire.cedex)
    END as cedex_proprietaire,
    proprietaire.pays as pays_proprietaire,
    proprietaire.division_territoriale as division_territoriale_proprietaire,
    CASE WHEN proprietaire.qualite = ''particulier''
        THEN to_char(proprietaire.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_proprietaire,
    CASE WHEN proprietaire.qualite = ''particulier''
        THEN CONCAT_WS('' '', proprietaire.particulier_commune_naissance, proprietaire.particulier_departement_naissance, proprietaire.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_proprietaire,
    proprietaire.courriel as email_proprietaire,
    CONCAT_WS('' '', proprietaire.indicatif, CONCAT_WS('' / '', proprietaire.telephone_fixe, proprietaire.telephone_mobile)) as coordonnees_telephonique_proprietaire,
    CASE WHEN proprietaire.notification IS TRUE
        THEN ''[X]''
        ELSE ''[ ]''
    END as notification_proprietaire,

    -- Coordonnées du concepteur-paysagiste

    CASE WHEN paysagiste.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', paysagiste_civilite.libelle, paysagiste.particulier_nom, paysagiste.particulier_prenom))
        ELSE
            CASE WHEN paysagiste.personne_morale_nom IS NOT NULL OR paysagiste.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', paysagiste.personne_morale_raison_sociale, paysagiste.personne_morale_denomination, ''représenté(e) par'', paysagiste_civilite.libelle, paysagiste.personne_morale_nom, paysagiste.personne_morale_prenom))
                ELSE TRIM(CONCAT(paysagiste.personne_morale_raison_sociale, '' '', paysagiste.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_paysagiste,
    CASE WHEN paysagiste.qualite=''particulier'' OR paysagiste.personne_morale_nom IS NOT NULL OR paysagiste.personne_morale_prenom IS NOT NULL
        THEN paysagiste_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_paysagiste,
    CASE WHEN paysagiste.qualite=''particulier''
        THEN paysagiste.particulier_nom
        ELSE
            CASE WHEN paysagiste.personne_morale_nom IS NOT NULL
                THEN paysagiste.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_paysagiste,
    CASE WHEN paysagiste.qualite=''particulier''
        THEN paysagiste.particulier_prenom
        ELSE
            CASE WHEN paysagiste.personne_morale_prenom IS NOT NULL
                THEN paysagiste.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_paysagiste,
    CASE WHEN paysagiste.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', paysagiste_civilite.libelle, paysagiste.particulier_nom, paysagiste.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_paysagiste,
    CASE WHEN paysagiste.qualite=''particulier''
        THEN paysagiste_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_paysagiste,
    CASE WHEN paysagiste.qualite=''particulier''
        THEN paysagiste.particulier_nom
        ELSE ''''
    END as nom_qualite_part_paysagiste,
    CASE WHEN paysagiste.qualite=''particulier''
        THEN paysagiste.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_paysagiste,
    CASE WHEN paysagiste.personne_morale_nom IS NOT NULL OR paysagiste.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', paysagiste.personne_morale_raison_sociale, paysagiste.personne_morale_denomination, ''représenté(e) par'', paysagiste_civilite.libelle, paysagiste.personne_morale_nom, paysagiste.personne_morale_prenom))
        ELSE TRIM(CONCAT(paysagiste.personne_morale_raison_sociale, '' '', paysagiste.personne_morale_denomination))
    END as nom_complet_qualite_pm_paysagiste,
    CASE WHEN paysagiste.personne_morale_nom IS NOT NULL OR paysagiste.personne_morale_prenom IS NOT NULL
        THEN paysagiste_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_paysagiste,
    CASE WHEN paysagiste.personne_morale_nom IS NOT NULL
        THEN paysagiste.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_paysagiste,
    CASE WHEN paysagiste.personne_morale_prenom IS NOT NULL
        THEN paysagiste.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_paysagiste,
    CASE WHEN paysagiste.qualite=''particulier''
        THEN ''''
        ELSE paysagiste.personne_morale_raison_sociale
    END as raison_sociale_paysagiste,
    CASE WHEN paysagiste.qualite=''particulier''
        THEN ''''
        ELSE paysagiste.personne_morale_denomination
    END as denomination_paysagiste,
    CASE WHEN paysagiste.qualite=''particulier''
        THEN ''''
        ELSE paysagiste.personne_morale_siret
    END as siret_paysagiste,
    CASE WHEN paysagiste.qualite=''particulier''
        THEN ''''
        ELSE paysagiste.personne_morale_categorie_juridique
    END as categorie_juridique_paysagiste,
    paysagiste.numero as numero_paysagiste,
&DB_PREFIXEadresse(paysagiste.numero::text, paysagiste.voie::text, paysagiste.complement::text, paysagiste.lieu_dit::text, paysagiste.bp::text, paysagiste.code_postal::text, paysagiste.localite::text, paysagiste.cedex::text, paysagiste.pays::text) as adresse_paysagiste_sdl,
&DB_PREFIXEadresse(paysagiste.numero::text, paysagiste.voie::text, paysagiste.complement::text, paysagiste.lieu_dit::text, paysagiste.bp::text, paysagiste.code_postal::text, paysagiste.localite::text, paysagiste.cedex::text, paysagiste.pays::text, '' ''::text) as adresse_paysagiste,
    paysagiste.voie as voie_paysagiste,
    paysagiste.complement as complement_paysagiste,
    paysagiste.lieu_dit as lieu_dit_paysagiste,
    CASE 
        WHEN paysagiste.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', paysagiste.bp)
    END as bp_paysagiste,
    paysagiste.code_postal as code_postal_paysagiste,
    paysagiste.localite as localite_paysagiste,
    CASE 
        WHEN paysagiste.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', paysagiste.cedex)
    END as cedex_paysagiste,
    paysagiste.pays as pays_paysagiste,
    paysagiste.division_territoriale as division_territoriale_paysagiste,
    CASE WHEN paysagiste.qualite = ''particulier''
        THEN to_char(paysagiste.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_paysagiste,
    CASE WHEN paysagiste.qualite = ''particulier''
        THEN CONCAT_WS('' '', paysagiste.particulier_commune_naissance, paysagiste.particulier_departement_naissance, paysagiste.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_paysagiste,
    paysagiste.courriel as email_paysagiste,
    CONCAT_WS('' '', paysagiste.indicatif, CONCAT_WS('' / '', paysagiste.telephone_fixe, paysagiste.telephone_mobile)) as coordonnees_telephonique_paysagiste,

    -- Coordonnées de l''architecte législation connexe

    CASE WHEN architecte_lc.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', architecte_lc_civilite.libelle, architecte_lc.particulier_nom, architecte_lc.particulier_prenom))
        ELSE
            CASE WHEN architecte_lc.personne_morale_nom IS NOT NULL OR architecte_lc.personne_morale_prenom IS NOT NULL
                THEN TRIM(CONCAT_WS('' '', architecte_lc.personne_morale_raison_sociale, architecte_lc.personne_morale_denomination, ''représenté(e) par'', architecte_lc_civilite.libelle, architecte_lc.personne_morale_nom, architecte_lc.personne_morale_prenom))
                ELSE TRIM(CONCAT(architecte_lc.personne_morale_raison_sociale, '' '', architecte_lc.personne_morale_denomination))
            END
    END as nom_complet_qualite_part_ou_pm_architecte_lc,
    CASE WHEN architecte_lc.qualite=''particulier'' OR architecte_lc.personne_morale_nom IS NOT NULL OR architecte_lc.personne_morale_prenom IS NOT NULL
        THEN architecte_lc_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_ou_pm_architecte_lc,
    CASE WHEN architecte_lc.qualite=''particulier''
        THEN architecte_lc.particulier_nom
        ELSE
            CASE WHEN architecte_lc.personne_morale_nom IS NOT NULL
                THEN architecte_lc.personne_morale_nom
                ELSE ''''
            END
    END as nom_qualite_part_ou_pm_architecte_lc,
    CASE WHEN architecte_lc.qualite=''particulier''
        THEN architecte_lc.particulier_prenom
        ELSE
            CASE WHEN architecte_lc.personne_morale_prenom IS NOT NULL
                THEN architecte_lc.personne_morale_prenom
                ELSE ''''
            END
    END as prenom_qualite_part_ou_pm_architecte_lc,
    CASE WHEN architecte_lc.qualite=''particulier''
        THEN TRIM(CONCAT_WS('' '', architecte_lc_civilite.libelle, architecte_lc.particulier_nom, architecte_lc.particulier_prenom))
        ELSE ''''
    END as nom_complet_qualite_part_architecte_lc,
    CASE WHEN architecte_lc.qualite=''particulier''
        THEN architecte_lc_civilite.libelle
        ELSE ''''
    END as civilite_qualite_part_architecte_lc,
    CASE WHEN architecte_lc.qualite=''particulier''
        THEN architecte_lc.particulier_nom
        ELSE ''''
    END as nom_qualite_part_architecte_lc,
    CASE WHEN architecte_lc.qualite=''particulier''
        THEN architecte_lc.particulier_prenom
        ELSE ''''
    END as prenom_qualite_part_architecte_lc,
    CASE WHEN architecte_lc.personne_morale_nom IS NOT NULL OR architecte_lc.personne_morale_prenom IS NOT NULL
        THEN TRIM(CONCAT_WS('' '', architecte_lc.personne_morale_raison_sociale, architecte_lc.personne_morale_denomination, ''représenté(e) par'', architecte_lc_civilite.libelle, architecte_lc.personne_morale_nom, architecte_lc.personne_morale_prenom))
        ELSE TRIM(CONCAT(architecte_lc.personne_morale_raison_sociale, '' '', architecte_lc.personne_morale_denomination))
    END as nom_complet_qualite_pm_architecte_lc,
    CASE WHEN architecte_lc.personne_morale_nom IS NOT NULL OR architecte_lc.personne_morale_prenom IS NOT NULL
        THEN architecte_lc_civilite.libelle
        ELSE ''''
    END as civilite_qualite_pm_architecte_lc,
    CASE WHEN architecte_lc.personne_morale_nom IS NOT NULL
        THEN architecte_lc.personne_morale_nom
        ELSE ''''
    END as nom_qualite_pm_architecte_lc,
    CASE WHEN architecte_lc.personne_morale_prenom IS NOT NULL
        THEN architecte_lc.personne_morale_prenom
        ELSE ''''
    END as prenom_qualite_pm_architecte_lc,
    CASE WHEN architecte_lc.qualite=''particulier''
        THEN ''''
        ELSE architecte_lc.personne_morale_raison_sociale
    END as raison_sociale_architecte_lc,
    CASE WHEN architecte_lc.qualite=''particulier''
        THEN ''''
        ELSE architecte_lc.personne_morale_denomination
    END as denomination_architecte_lc,
    CASE WHEN architecte_lc.qualite=''particulier''
        THEN ''''
        ELSE architecte_lc.personne_morale_siret
    END as siret_architecte_lc,
    CASE WHEN architecte_lc.qualite=''particulier''
        THEN ''''
        ELSE architecte_lc.personne_morale_categorie_juridique
    END as categorie_juridique_architecte_lc,
    architecte_lc.numero as numero_architecte_lc,
&DB_PREFIXEadresse(architecte_lc.numero::text, architecte_lc.voie::text, architecte_lc.complement::text, architecte_lc.lieu_dit::text, architecte_lc.bp::text, architecte_lc.code_postal::text, architecte_lc.localite::text, architecte_lc.cedex::text, architecte_lc.pays::text) as adresse_architecte_lc_sdl,
&DB_PREFIXEadresse(architecte_lc.numero::text, architecte_lc.voie::text, architecte_lc.complement::text, architecte_lc.lieu_dit::text, architecte_lc.bp::text, architecte_lc.code_postal::text, architecte_lc.localite::text, architecte_lc.cedex::text, architecte_lc.pays::text, '' ''::text) as adresse_architecte_lc,
    architecte_lc.voie as voie_architecte_lc,
    architecte_lc.complement as complement_architecte_lc,
    architecte_lc.lieu_dit as lieu_dit_architecte_lc,
    CASE 
        WHEN architecte_lc.bp IS NULL
        THEN ''''
        ELSE CONCAT(''BP '', architecte_lc.bp)
    END as bp_architecte_lc,
    architecte_lc.code_postal as code_postal_architecte_lc,
    architecte_lc.localite as localite_architecte_lc,
    CASE 
        WHEN architecte_lc.cedex IS NULL
        THEN ''''
        ELSE CONCAT(''CEDEX '', architecte_lc.cedex)
    END as cedex_architecte_lc,
    architecte_lc.pays as pays_architecte_lc,
    architecte_lc.division_territoriale as division_territoriale_architecte_lc,
    CASE WHEN architecte_lc.qualite = ''particulier''
        THEN to_char(architecte_lc.particulier_date_naissance, ''DD/MM/YYYY'')
        ELSE ''''
    END as date_naissance_architecte_lc,
    CASE WHEN architecte_lc.qualite = ''particulier''
        THEN CONCAT_WS('' '', architecte_lc.particulier_commune_naissance, architecte_lc.particulier_departement_naissance, architecte_lc.particulier_pays_naissance)
        ELSE ''''
    END as lieu_naissance_architecte_lc,
    architecte_lc.courriel as email_architecte_lc,
    CONCAT_WS('' '', architecte_lc.indicatif, CONCAT_WS('' / '', architecte_lc.telephone_fixe, architecte_lc.telephone_mobile)) as coordonnees_telephonique_architecte_lc,
    architecte_lc.num_inscription AS num_inscription_architecte_lc,
    architecte_lc.nom_cabinet AS nom_cabinet_architecte_lc,
    architecte_lc.conseil_regional AS conseil_regional_architecte_lc,
    architecte_lc.titre_obt_diplo_spec AS titre_obt_diplo_spec_architecte_lc,
    to_char(architecte_lc.date_obt_diplo_spec, ''DD/MM/YYYY'') AS date_obt_diplo_spec_architecte_lc,
    architecte_lc.lieu_obt_diplo_spec AS lieu_obt_diplo_spec_architecte_lc,

    -- Coordonnées de l''architecte (celui dans les données techniques)
    TRIM(CONCAT_WS('' '', architecte.nom, architecte.prenom)) AS nom_complet_architecte,
&DB_PREFIXEadresse(''''::text, architecte.adresse1::text, architecte.adresse2::text, architecte.lieu_dit::text, architecte.boite_postale::text, architecte.cp::text, architecte.ville::text, architecte.cedex::text, architecte.pays::text) AS adresse_architecte_sdl,
&DB_PREFIXEadresse(''''::text, architecte.adresse1::text, architecte.adresse2::text, architecte.lieu_dit::text, architecte.boite_postale::text, architecte.cp::text, architecte.ville::text, architecte.cedex::text, architecte.pays::text, '' ''::text) AS adresse_architecte,
    architecte.email AS email_architecte,
    architecte.fax AS fax_architecte,
    architecte.telephone AS telephone_architecte,
    architecte.inscription AS num_inscription_architecte,
    architecte.nom_cabinet AS nom_cabinet_architecte,
    architecte.conseil_regional AS conseil_regional_architecte,
    architecte.titre_obt_diplo_spec AS titre_obt_diplo_spec_architecte,
    to_char(architecte.date_obt_diplo_spec, ''DD/MM/YYYY'') AS date_obt_diplo_spec_architecte,
    architecte.lieu_obt_diplo_spec AS lieu_obt_diplo_spec_architecte,

    --Dates importantes du dossier d''instruction
    to_char(dossier.date_depot_mairie, ''DD/MM/YYYY'') as date_depot_mairie,
    to_char(dossier.date_affichage, ''DD/MM/YYYY'') as date_affichage,
    to_char(dossier.date_depot, ''DD/MM/YYYY'') as date_depot_dossier,
    to_char(dossier.date_complet, ''DD/MM/YYYY'') as date_completude,
    to_char(dossier.date_dernier_depot, ''DD/MM/YYYY'') as date_dernier_depot,
    to_char(dossier.date_decision, ''DD/MM/YYYY'') as date_decision_dossier,
    CASE WHEN dossier.incomplet_notifie IS TRUE AND dossier.incompletude IS TRUE 
        THEN to_char(dossier.date_limite_incompletude ,''DD/MM/YYYY'') 
        ELSE to_char(dossier.date_limite ,''DD/MM/YYYY'')
    END as date_limite_dossier,
    to_char(dossier.date_achevement,''DD/MM/YYYY'') as date_achevement_dossier,
    to_char(dossier.date_conformite,''DD/MM/YYYY'') as date_conformite_dossier,
    to_char(dossier.date_notification_delai,''DD/MM/YYYY'') as date_notification_delai_dossier,
    
    --Noms des signataires
    TRIM(CONCAT(signataire_civilite.libelle, '' '',signataire_arrete.prenom, '' '', signataire_arrete.nom)) as arrete_signataire,
    TRIM(CONCAT(signataire_arrete.qualite, '' '', signataire_arrete.signature)) as signature_signataire,
    TRIM(signataire_arrete.signature) as signature_signataire_ss_qualite,
    division.chef as chef_division,
    direction.chef as chef_direction,
    direction.libelle as libelle_direction,
    direction.description as description_direction,
    
    --Données générales des données techniques
    donnees_techniques.co_projet_desc as co_projet_desc_donnees_techniques,
    donnees_techniques.am_projet_desc as am_projet_desc_donnees_techniques,
    donnees_techniques.dm_projet_desc as dm_projet_desc_donnees_techniques,
    donnees_techniques.ope_proj_desc as ope_proj_desc_donnees_techniques,
    TRIM(CONCAT(
        donnees_techniques.co_projet_desc, '' '',
        donnees_techniques.am_projet_desc, '' '',
        donnees_techniques.dm_projet_desc, '' '',
        donnees_techniques.ope_proj_desc
        )) as projet_desc_donnees_techniques,
    donnees_techniques.am_lot_max_nb as am_lot_max_nb_donnees_techniques,
    donnees_techniques.am_lot_max_shon as am_lot_max_shon_donnees_techniques,
    -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_avt_shon21 IS NOT NULL
        OR su2_avt_shon22 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_cstr_shon21 IS NOT NULL
        OR su2_cstr_shon22 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_chge_shon21 IS NOT NULL
        OR su2_chge_shon22 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_demo_shon21 IS NOT NULL
        OR su2_demo_shon22 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        OR su2_sup_shon21 IS NOT NULL
        OR su2_sup_shon22 IS NOT NULL
        THEN donnees_techniques.su2_cstr_shon_tot
        ELSE donnees_techniques.su_cstr_shon_tot
    END as su_cstr_shon_tot_donnees_techniques,
    -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_avt_shon21 IS NOT NULL
        OR su2_avt_shon22 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_cstr_shon21 IS NOT NULL
        OR su2_cstr_shon22 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_chge_shon21 IS NOT NULL
        OR su2_chge_shon22 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_demo_shon21 IS NOT NULL
        OR su2_demo_shon22 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        OR su2_sup_shon21 IS NOT NULL
        OR su2_sup_shon22 IS NOT NULL
        THEN donnees_techniques.su2_demo_shon_tot
        ELSE donnees_techniques.su_demo_shon_tot
    END as su_demo_shon_tot_donnees_techniques,
    -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_avt_shon21 IS NOT NULL
        OR su2_avt_shon22 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_cstr_shon21 IS NOT NULL
        OR su2_cstr_shon22 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_chge_shon21 IS NOT NULL
        OR su2_chge_shon22 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_demo_shon21 IS NOT NULL
        OR su2_demo_shon22 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        OR su2_sup_shon21 IS NOT NULL
        OR su2_sup_shon22 IS NOT NULL
        THEN
            REGEXP_REPLACE(CONCAT(
                CASE WHEN donnees_techniques.su2_cstr_shon1 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Exploitation agricole - '', donnees_techniques.su2_cstr_shon1, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon2 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Exploitation forestière - '', donnees_techniques.su2_cstr_shon2, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon3 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Logement - '', donnees_techniques.su2_cstr_shon3, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon4 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Hébergement - '', donnees_techniques.su2_cstr_shon4, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon5 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Artisanat et commerce de détail - '', donnees_techniques.su2_cstr_shon5, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon6 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Restauration - '', donnees_techniques.su2_cstr_shon6, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon7 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Commerce de gros - '', donnees_techniques.su2_cstr_shon7, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon8 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Activités de services où s''''effectue l''''accueil d''''une clientèle - '', donnees_techniques.su2_cstr_shon8, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon9 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Hébergement hôtelier et touristique - '', donnees_techniques.su2_cstr_shon9, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon10 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Cinéma - '', donnees_techniques.su2_cstr_shon10, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon21 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Hôtels - '', donnees_techniques.su2_cstr_shon21, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon22 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Autres hébergements touristiques - '', donnees_techniques.su2_cstr_shon22, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon11 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Locaux et bureaux accueillant du public des administrations publiques et assimilés - '', donnees_techniques.su2_cstr_shon11, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon12 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Locaux techniques et industriels des administrations publiques et assimilés - '', donnees_techniques.su2_cstr_shon12, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon13 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Établissements d''''enseignement, de santé et d''''action sociale - '', donnees_techniques.su2_cstr_shon13, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon14 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Salles d''''art et de spectacles - '', donnees_techniques.su2_cstr_shon14, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon15 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Équipements sportifs - '', donnees_techniques.su2_cstr_shon15, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon16 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Autres équipements recevant du public - '', donnees_techniques.su2_cstr_shon16, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon17 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Industrie - '', donnees_techniques.su2_cstr_shon17, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon18 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Entrepôt - '', donnees_techniques.su2_cstr_shon18, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon19 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Bureau - '', donnees_techniques.su2_cstr_shon19, '' m² / '')
                END,
                CASE WHEN donnees_techniques.su2_cstr_shon20 IS NULL
                    THEN ''''
                    ELSE CONCAT (''Centre de congrès et d''''exposition - '', donnees_techniques.su2_cstr_shon20, '' m²'')
                END
            ), '' / $'', '''')
        ELSE
            REGEXP_REPLACE(CONCAT(
                CASE
                    WHEN donnees_techniques.su_cstr_shon1 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Habitation - '', donnees_techniques.su_cstr_shon1, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon2 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Hébergement hôtelier - '', donnees_techniques.su_cstr_shon2, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon3 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Bureaux - '', donnees_techniques.su_cstr_shon3, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon4 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Commerce - '', donnees_techniques.su_cstr_shon4, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon5 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Artisanat - '', donnees_techniques.su_cstr_shon5, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon6 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Industrie - '', donnees_techniques.su_cstr_shon6, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon7 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Exploitation agricole ou forestière - '', donnees_techniques.su_cstr_shon7, '' m² / '')
                END,
                CASE
                    WHEN donnees_techniques.su_cstr_shon8 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Entrepôt - '', donnees_techniques.su_cstr_shon8, '' m² / '')
                END, 
                CASE
                    WHEN donnees_techniques.su_cstr_shon9 IS NULL
                    THEN ''''
                    ELSE CONCAT(''Service public ou d''''intérêt collectif - '', donnees_techniques.su_cstr_shon9, '' m²'')
                END
            ), '' / $'', '''')
    END as tab_surface_donnees_techniques,
    donnees_techniques.co_tot_log_nb as co_tot_log_nb_donnees_techniques,
    donnees_techniques.co_statio_place_nb as co_statio_place_nb_donnees_techniques,
    -- Si une valeur est saisie dans la deuxième version du tableau des surfaces
    -- alors on récupère seulement ses valeurs
    CASE WHEN su2_avt_shon1 IS NOT NULL
        OR su2_avt_shon2 IS NOT NULL
        OR su2_avt_shon3 IS NOT NULL
        OR su2_avt_shon4 IS NOT NULL
        OR su2_avt_shon5 IS NOT NULL
        OR su2_avt_shon6 IS NOT NULL
        OR su2_avt_shon7 IS NOT NULL
        OR su2_avt_shon8 IS NOT NULL
        OR su2_avt_shon9 IS NOT NULL
        OR su2_avt_shon10 IS NOT NULL
        OR su2_avt_shon11 IS NOT NULL
        OR su2_avt_shon12 IS NOT NULL
        OR su2_avt_shon13 IS NOT NULL
        OR su2_avt_shon14 IS NOT NULL
        OR su2_avt_shon15 IS NOT NULL
        OR su2_avt_shon16 IS NOT NULL
        OR su2_avt_shon17 IS NOT NULL
        OR su2_avt_shon18 IS NOT NULL
        OR su2_avt_shon19 IS NOT NULL
        OR su2_avt_shon20 IS NOT NULL
        OR su2_avt_shon21 IS NOT NULL
        OR su2_avt_shon22 IS NOT NULL
        OR su2_cstr_shon1 IS NOT NULL
        OR su2_cstr_shon2 IS NOT NULL
        OR su2_cstr_shon3 IS NOT NULL
        OR su2_cstr_shon4 IS NOT NULL
        OR su2_cstr_shon5 IS NOT NULL
        OR su2_cstr_shon6 IS NOT NULL
        OR su2_cstr_shon7 IS NOT NULL
        OR su2_cstr_shon8 IS NOT NULL
        OR su2_cstr_shon9 IS NOT NULL
        OR su2_cstr_shon10 IS NOT NULL
        OR su2_cstr_shon11 IS NOT NULL
        OR su2_cstr_shon12 IS NOT NULL
        OR su2_cstr_shon13 IS NOT NULL
        OR su2_cstr_shon14 IS NOT NULL
        OR su2_cstr_shon15 IS NOT NULL
        OR su2_cstr_shon16 IS NOT NULL
        OR su2_cstr_shon17 IS NOT NULL
        OR su2_cstr_shon18 IS NOT NULL
        OR su2_cstr_shon19 IS NOT NULL
        OR su2_cstr_shon20 IS NOT NULL
        OR su2_cstr_shon21 IS NOT NULL
        OR su2_cstr_shon22 IS NOT NULL
        OR su2_chge_shon1 IS NOT NULL
        OR su2_chge_shon2 IS NOT NULL
        OR su2_chge_shon3 IS NOT NULL
        OR su2_chge_shon4 IS NOT NULL
        OR su2_chge_shon5 IS NOT NULL
        OR su2_chge_shon6 IS NOT NULL
        OR su2_chge_shon7 IS NOT NULL
        OR su2_chge_shon8 IS NOT NULL
        OR su2_chge_shon9 IS NOT NULL
        OR su2_chge_shon10 IS NOT NULL
        OR su2_chge_shon11 IS NOT NULL
        OR su2_chge_shon12 IS NOT NULL
        OR su2_chge_shon13 IS NOT NULL
        OR su2_chge_shon14 IS NOT NULL
        OR su2_chge_shon15 IS NOT NULL
        OR su2_chge_shon16 IS NOT NULL
        OR su2_chge_shon17 IS NOT NULL
        OR su2_chge_shon18 IS NOT NULL
        OR su2_chge_shon19 IS NOT NULL
        OR su2_chge_shon20 IS NOT NULL
        OR su2_chge_shon21 IS NOT NULL
        OR su2_chge_shon22 IS NOT NULL
        OR su2_demo_shon1 IS NOT NULL
        OR su2_demo_shon2 IS NOT NULL
        OR su2_demo_shon3 IS NOT NULL
        OR su2_demo_shon4 IS NOT NULL
        OR su2_demo_shon5 IS NOT NULL
        OR su2_demo_shon6 IS NOT NULL
        OR su2_demo_shon7 IS NOT NULL
        OR su2_demo_shon8 IS NOT NULL
        OR su2_demo_shon9 IS NOT NULL
        OR su2_demo_shon10 IS NOT NULL
        OR su2_demo_shon11 IS NOT NULL
        OR su2_demo_shon12 IS NOT NULL
        OR su2_demo_shon13 IS NOT NULL
        OR su2_demo_shon14 IS NOT NULL
        OR su2_demo_shon15 IS NOT NULL
        OR su2_demo_shon16 IS NOT NULL
        OR su2_demo_shon17 IS NOT NULL
        OR su2_demo_shon18 IS NOT NULL
        OR su2_demo_shon19 IS NOT NULL
        OR su2_demo_shon20 IS NOT NULL
        OR su2_demo_shon21 IS NOT NULL
        OR su2_demo_shon22 IS NOT NULL
        OR su2_sup_shon1 IS NOT NULL
        OR su2_sup_shon2 IS NOT NULL
        OR su2_sup_shon3 IS NOT NULL
        OR su2_sup_shon4 IS NOT NULL
        OR su2_sup_shon5 IS NOT NULL
        OR su2_sup_shon6 IS NOT NULL
        OR su2_sup_shon7 IS NOT NULL
        OR su2_sup_shon8 IS NOT NULL
        OR su2_sup_shon9 IS NOT NULL
        OR su2_sup_shon10 IS NOT NULL
        OR su2_sup_shon11 IS NOT NULL
        OR su2_sup_shon12 IS NOT NULL
        OR su2_sup_shon13 IS NOT NULL
        OR su2_sup_shon14 IS NOT NULL
        OR su2_sup_shon15 IS NOT NULL
        OR su2_sup_shon16 IS NOT NULL
        OR su2_sup_shon17 IS NOT NULL
        OR su2_sup_shon18 IS NOT NULL
        OR su2_sup_shon19 IS NOT NULL
        OR su2_sup_shon20 IS NOT NULL
        OR su2_sup_shon21 IS NOT NULL
        OR su2_sup_shon22 IS NOT NULL
        THEN donnees_techniques.su2_tot_shon_tot
        ELSE donnees_techniques.su_tot_shon_tot
    END as su_tot_shon_tot_donnees_techniques,

    -- Données techniques pour les AT
    CONCAT_WS('', '',
        CASE WHEN donnees_techniques.erp_cstr_neuve IS TRUE THEN ''construction neuve'' END,
        CASE WHEN donnees_techniques.erp_trvx_acc IS TRUE THEN ''travaux de mise en conformité totale aux règles d’accessibilité'' END,
        CASE WHEN donnees_techniques.erp_extension IS TRUE THEN ''extension'' END,
        CASE WHEN donnees_techniques.erp_rehab IS TRUE THEN ''réhabilitation'' END,
        CASE WHEN donnees_techniques.erp_trvx_am IS TRUE THEN ''travaux d’aménagement (remplacement de revêtements, rénovation électrique, création d’une rampe, par exemple)'' END,
        CASE WHEN donnees_techniques.erp_vol_nouv_exist IS TRUE THEN ''création de volumes nouveaux dans des volumes existants (modification du cloisonnement, par exemple)'' END
    ) as at_type_travaux,
    donnees_techniques.erp_public_eff_tot as at_effectif_public_total,
    CONCAT_WS('' - '', erp_categorie.libelle, erp_categorie.description) as at_categorie_etablissement,
    CONCAT_WS('' - '', erp_type.libelle, erp_type.description) as at_type_etablissement,

    -- Données techniques pour une DIA
    COALESCE (donnees_techniques.dia_mod_cess_prix_vente,'''') AS dia_mod_cess_prix_vente,
    donnees_techniques.dia_mod_cess_prix_vente_num AS dia_mod_cess_prix_vente_num,
    CASE WHEN donnees_techniques.dia_mod_cess_prix_vente_mob_num IS NOT NULL
        THEN donnees_techniques.dia_mod_cess_prix_vente_mob_num::text
        ELSE donnees_techniques.dia_mod_cess_prix_vente_mob
    END AS dia_mod_cess_prix_vente_mob,
    CASE WHEN donnees_techniques.dia_mod_cess_prix_vente_cheptel_num IS NOT NULL
        THEN donnees_techniques.dia_mod_cess_prix_vente_cheptel_num::text
        ELSE donnees_techniques.dia_mod_cess_prix_vente_cheptel
    END AS dia_mod_cess_prix_vente_cheptel,
    CASE WHEN donnees_techniques.dia_mod_cess_prix_vente_recol_num IS NOT NULL
        THEN donnees_techniques.dia_mod_cess_prix_vente_recol_num::text
        ELSE donnees_techniques.dia_mod_cess_prix_vente_recol
    END AS dia_mod_cess_prix_vente_recol,
    CASE WHEN donnees_techniques.dia_mod_cess_prix_vente_autre_num IS NOT NULL
        THEN donnees_techniques.dia_mod_cess_prix_vente_autre_num::text
        ELSE donnees_techniques.dia_mod_cess_prix_vente_autre
    END AS dia_mod_cess_prix_vente_autre,
    donnees_techniques.dia_mod_cess_commi_mnt AS dia_mod_cess_commi_mnt,
    COALESCE (donnees_techniques.dia_acquereur_nom_prenom,'''') AS dia_acquereur_nom_prenom,
    &DB_PREFIXEadresse(
        CONCAT_WS('' '', donnees_techniques.dia_acquereur_adr_num_voie::text, donnees_techniques.dia_acquereur_adr_ext::text),
        CONCAT_WS('' '', donnees_techniques.dia_acquereur_adr_type_voie::text, donnees_techniques.dia_acquereur_adr_nom_voie::text),
        ''''::text,
        donnees_techniques.dia_acquereur_adr_lieu_dit_bp::text,
        ''''::text,
        donnees_techniques.dia_acquereur_adr_cp::text,
        donnees_techniques.dia_acquereur_adr_localite::text,
        ''''::text
    ) as dia_acquereur_adresse_sdl,
    &DB_PREFIXEadresse(
        CONCAT_WS('' '', donnees_techniques.dia_acquereur_adr_num_voie::text, donnees_techniques.dia_acquereur_adr_ext::text),
        CONCAT_WS('' '', donnees_techniques.dia_acquereur_adr_type_voie::text, donnees_techniques.dia_acquereur_adr_nom_voie::text),
        ''''::text,
        donnees_techniques.dia_acquereur_adr_lieu_dit_bp::text,
        ''''::text,
        donnees_techniques.dia_acquereur_adr_cp::text,
        donnees_techniques.dia_acquereur_adr_localite::text,
        ''''::text,
        ''''::text,
        '' ''::text
    ) as dia_acquereur_adresse,
    donnees_techniques.dia_esti_prix_france_dom AS dia_esti_prix_france_dom,
    donnees_techniques.dia_prop_collectivite AS dia_prop_collectivite,
    donnees_techniques.dia_entree_jouissance_type AS dia_entree_jouissance_type,
    to_char(donnees_techniques.dia_entree_jouissance_date, ''DD/MM/YYYY'') AS dia_entree_jouissance_date,
    to_char(donnees_techniques.dia_entree_jouissance_date_effet, ''DD/MM/YYYY'') AS dia_entree_jouissance_date_effet,
    donnees_techniques.dia_entree_jouissance_com AS dia_entree_jouissance_com,
    to_char(donnees_techniques.dia_remise_bien_date_effet, ''DD/MM/YYYY'') AS dia_remise_bien_date_effet,
    donnees_techniques.dia_remise_bien_com AS dia_remise_bien_com,
    CASE WHEN donnees_techniques.dia_esti_prix_france_dom IS NOT NULL
        THEN donnees_techniques.dia_esti_prix_france_dom::text
        ELSE donnees_techniques.dia_mod_cess_prix_vente_num::text
    END AS prix_propose_commune_acquisition_bien_preempte,

    -- Données techniques pour le contentieux
    objet_recours.libelle as ctx_objet_recours_libelle,
    donnees_techniques.ctx_reference_sagace as ctx_reference_sagace,
    donnees_techniques.ctx_nature_travaux_infra_om_html as ctx_nature_travaux_infra_om_html,
    donnees_techniques.ctx_synthese_nti as ctx_synthese_nti,
    donnees_techniques.ctx_article_non_resp_om_html as ctx_article_non_resp_om_html,
    donnees_techniques.ctx_synthese_anr as ctx_synthese_anr,
    donnees_techniques.ctx_reference_parquet as ctx_reference_parquet,
    donnees_techniques.ctx_element_taxation as ctx_element_taxation,
    CASE donnees_techniques.ctx_infraction WHEN ''t'' THEN ''Oui'' else ''Non'' end as ctx_infraction,
    CASE donnees_techniques.ctx_regularisable WHEN ''t'' THEN ''Oui'' else ''Non'' end as ctx_regularisable,
    donnees_techniques.ctx_reference_courrier as ctx_reference_courrier,
    to_char(donnees_techniques.ctx_date_audience, ''DD/MM/YYYY'') as date_audience_ctx,
    to_char(donnees_techniques.ctx_date_ajournement, ''DD/MM/YYYY'') as date_ajournement_ctx,

    -- Données techniques pour les DPC
    donnees_techniques.dpc_type as dpc_type,
    donnees_techniques.dpc_moda_cess_prix as dpc_moda_cess_prix,

    -- Données techniques MH
    donnees_techniques.mh_design_appel_denom AS mh_design_appel_denom,
    donnees_techniques.mh_design_type_protect AS mh_design_type_protect,
    donnees_techniques.mh_design_elem_prot AS mh_design_elem_prot,
    donnees_techniques.mh_design_ref_merimee_palissy AS mh_design_ref_merimee_palissy,
    donnees_techniques.mh_loc_denom AS mh_loc_denom,

    --Bordereau d''envoi au maire
    CASE
        WHEN evenement.type = ''arrete''
        THEN CONCAT(''transmission d''''une proposition de décision sur '', evenement.libelle)
        ELSE CONCAT(''transmission d''''un courrier d''''instruction sur '', evenement.libelle)
    END as objet_bordereau_envoi_maire
    
FROM
    &DB_PREFIXEinstruction
LEFT JOIN
    &DB_PREFIXEsignataire_arrete
    ON instruction.signataire_arrete = signataire_arrete.signataire_arrete
LEFT JOIN
&DB_PREFIXEsignataire_habilitation
ON signataire_arrete.signataire_habilitation = signataire_habilitation.signataire_habilitation

LEFT JOIN
    &DB_PREFIXEcivilite as signataire_civilite
    ON signataire_arrete.civilite = signataire_civilite.civilite
LEFT JOIN
    &DB_PREFIXEdossier
    ON
        instruction.dossier=dossier.dossier
LEFT JOIN
 &DB_PREFIXEconsultation_entrante
 ON consultation_entrante.dossier=dossier.dossier
LEFT JOIN (
    SELECT ftc.dossier, string_agg(ftc.libelle::text, '', '') as famille_travaux_libelle
    FROM 
    (SELECT DISTINCT
        dossier,
        famille_travaux.libelle
    FROM 
        &DB_PREFIXElien_dossier_nature_travaux 
    INNER JOIN 
        &DB_PREFIXEnature_travaux 
            ON lien_dossier_nature_travaux.nature_travaux = nature_travaux.nature_travaux
    INNER JOIN
        &DB_PREFIXEfamille_travaux
            ON nature_travaux.famille_travaux = famille_travaux.famille_travaux
    ORDER BY famille_travaux.libelle) as ftc
    GROUP BY dossier) as famille_travaux ON famille_travaux.dossier = dossier.dossier
 LEFT JOIN (
        SELECT ntc.dossier, string_agg(ntc.libelle::text, '', '') as nature_travaux_libelle
        FROM 
        (SELECT DISTINCT
            dossier,
            nature_travaux.libelle
        FROM 
            &DB_PREFIXElien_dossier_nature_travaux 
        INNER JOIN 
            &DB_PREFIXEnature_travaux 
                ON lien_dossier_nature_travaux.nature_travaux = nature_travaux.nature_travaux
        ORDER BY nature_travaux.libelle) as ntc
        GROUP BY dossier) as nature_travaux ON nature_travaux.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEom_lettretype
    ON instruction.lettretype = om_lettretype.id
    AND om_lettretype.actif IS TRUE
    AND (om_lettretype.om_collectivite = dossier.om_collectivite OR om_lettretype.om_collectivite = (SELECT om_collectivite FROM &DB_PREFIXEom_collectivite WHERE niveau::integer = 2))
LEFT JOIN (
        SELECT *
        FROM &DB_PREFIXElien_dossier_demandeur
        INNER JOIN &DB_PREFIXEdemandeur
            ON demandeur.demandeur = lien_dossier_demandeur.demandeur
        WHERE lien_dossier_demandeur.petitionnaire_principal IS TRUE
        AND demandeur.type_demandeur = ''petitionnaire''
    ) as petitionnaire_principal
    ON petitionnaire_principal.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEcivilite as petitionnaire_principal_civilite
    ON
        petitionnaire_principal.particulier_civilite = petitionnaire_principal_civilite.civilite OR petitionnaire_principal.personne_morale_civilite = petitionnaire_principal_civilite.civilite
LEFT JOIN (
        SELECT *
        FROM &DB_PREFIXElien_dossier_demandeur
        INNER JOIN &DB_PREFIXEdemandeur
            ON demandeur.demandeur = lien_dossier_demandeur.demandeur
        WHERE lien_dossier_demandeur.petitionnaire_principal IS TRUE
        AND demandeur.type_demandeur = ''contrevenant''
    ) as contrevenant_principal
    ON contrevenant_principal.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEcivilite as contrevenant_principal_civilite
    ON
        contrevenant_principal.particulier_civilite = contrevenant_principal_civilite.civilite OR contrevenant_principal.personne_morale_civilite = contrevenant_principal_civilite.civilite
LEFT JOIN (
        SELECT *
        FROM &DB_PREFIXElien_dossier_demandeur
        INNER JOIN &DB_PREFIXEdemandeur
            ON demandeur.demandeur = lien_dossier_demandeur.demandeur
        WHERE lien_dossier_demandeur.petitionnaire_principal IS TRUE
        AND demandeur.type_demandeur = ''requerant''
    ) as requerant_principal
    ON requerant_principal.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEcivilite as requerant_principal_civilite
    ON
        requerant_principal.particulier_civilite = requerant_principal_civilite.civilite OR requerant_principal.personne_morale_civilite = requerant_principal_civilite.civilite
LEFT JOIN (
        SELECT *
        FROM &DB_PREFIXElien_dossier_demandeur
        INNER JOIN &DB_PREFIXEdemandeur
            ON demandeur.demandeur = lien_dossier_demandeur.demandeur
        WHERE lien_dossier_demandeur.petitionnaire_principal IS TRUE
        AND demandeur.type_demandeur = ''avocat''
    ) as avocat_principal
    ON avocat_principal.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEcivilite as avocat_principal_civilite
    ON
        avocat_principal.particulier_civilite = avocat_principal_civilite.civilite OR avocat_principal.personne_morale_civilite = avocat_principal_civilite.civilite
LEFT JOIN (
        SELECT *
        FROM &DB_PREFIXElien_dossier_demandeur
        INNER JOIN &DB_PREFIXEdemandeur
            ON demandeur.demandeur = lien_dossier_demandeur.demandeur
        WHERE lien_dossier_demandeur.petitionnaire_principal IS TRUE
        AND demandeur.type_demandeur = ''plaignant''
    ) as plaignant_principal
    ON plaignant_principal.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEcivilite as plaignant_principal_civilite
    ON
        plaignant_principal.particulier_civilite = plaignant_principal_civilite.civilite OR plaignant_principal.personne_morale_civilite = plaignant_principal_civilite.civilite
LEFT JOIN
    &DB_PREFIXElien_dossier_autorisation_demandeur
    ON
        dossier.dossier_autorisation = lien_dossier_autorisation_demandeur.dossier_autorisation AND lien_dossier_autorisation_demandeur.petitionnaire_principal IS TRUE
LEFT JOIN
    &DB_PREFIXEdemandeur as petitionnaire_principal_initial
    ON
        lien_dossier_autorisation_demandeur.demandeur = petitionnaire_principal_initial.demandeur
LEFT JOIN
    &DB_PREFIXEcivilite as petitionnaire_principal_initial_civilite
    ON
        petitionnaire_principal_initial.particulier_civilite = petitionnaire_principal_initial_civilite.civilite OR petitionnaire_principal_initial.personne_morale_civilite = petitionnaire_principal_initial_civilite.civilite
LEFT JOIN
    (
    &DB_PREFIXElien_dossier_demandeur AS lien_dossier_delegataire
        JOIN &DB_PREFIXEdemandeur as delegataire
        ON
            lien_dossier_delegataire.demandeur = delegataire.demandeur AND delegataire.type_demandeur = ''delegataire''
    )
    ON
        instruction.dossier = lien_dossier_delegataire.dossier AND lien_dossier_delegataire.petitionnaire_principal IS FALSE
LEFT JOIN
    &DB_PREFIXEcivilite as delegataire_civilite
    ON
        delegataire.particulier_civilite = delegataire_civilite.civilite OR delegataire.personne_morale_civilite = delegataire_civilite.civilite
LEFT JOIN (
        SELECT *
        FROM &DB_PREFIXElien_dossier_demandeur
        INNER JOIN &DB_PREFIXEdemandeur
            ON demandeur.demandeur = lien_dossier_demandeur.demandeur
        WHERE lien_dossier_demandeur.petitionnaire_principal IS TRUE
        AND demandeur.type_demandeur = ''bailleur''
    ) as bailleur_principal
    ON bailleur_principal.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEcivilite as bailleur_principal_civilite
    ON
        bailleur_principal.particulier_civilite = bailleur_principal_civilite.civilite OR bailleur_principal.personne_morale_civilite = bailleur_principal_civilite.civilite
LEFT JOIN (
        SELECT *
        FROM &DB_PREFIXElien_dossier_demandeur
        INNER JOIN &DB_PREFIXEdemandeur
            ON demandeur.demandeur = lien_dossier_demandeur.demandeur
        WHERE demandeur.type_demandeur = ''proprietaire''
    ) as proprietaire
    ON proprietaire.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEcivilite as proprietaire_civilite
    ON
        proprietaire.particulier_civilite = proprietaire_civilite.civilite OR proprietaire.personne_morale_civilite = proprietaire_civilite.civilite
LEFT JOIN (
        SELECT *
        FROM &DB_PREFIXElien_dossier_demandeur
        INNER JOIN &DB_PREFIXEdemandeur
            ON demandeur.demandeur = lien_dossier_demandeur.demandeur
        WHERE demandeur.type_demandeur = ''paysagiste''
    ) as paysagiste
    ON paysagiste.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEcivilite as paysagiste_civilite
    ON
        paysagiste.particulier_civilite = paysagiste_civilite.civilite OR paysagiste.personne_morale_civilite = paysagiste_civilite.civilite
LEFT JOIN (
        SELECT *
        FROM &DB_PREFIXElien_dossier_demandeur
        INNER JOIN &DB_PREFIXEdemandeur
            ON demandeur.demandeur = lien_dossier_demandeur.demandeur
        WHERE demandeur.type_demandeur = ''architecte_lc''
    ) as architecte_lc
    ON architecte_lc.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEcivilite as architecte_lc_civilite
    ON
        architecte_lc.particulier_civilite = architecte_lc_civilite.civilite OR architecte_lc.personne_morale_civilite = architecte_lc_civilite.civilite
LEFT JOIN (
    SELECT lien_dossier_demandeur.dossier, array_agg(lien_dossier_demandeur.demandeur ORDER BY lien_dossier_demandeur.demandeur) AS petitionnaire_autre
    FROM &DB_PREFIXElien_dossier_demandeur
    LEFT JOIN &DB_PREFIXEdossier
        ON lien_dossier_demandeur.dossier=dossier.dossier
        AND lien_dossier_demandeur.petitionnaire_principal IS FALSE
    LEFT JOIN &DB_PREFIXEinstruction
        ON instruction.dossier = dossier.dossier
    RIGHT JOIN &DB_PREFIXEdemandeur
        ON lien_dossier_demandeur.demandeur=demandeur.demandeur
        AND demandeur.type_demandeur = ''petitionnaire''
    
LEFT JOIN
    &DB_PREFIXEcommune
    ON
        dossier.commune = commune.commune
LEFT JOIN LATERAL (
        SELECT
            dep, libelle
        FROM
            &DB_PREFIXEdepartement
        WHERE
            dep = commune.dep
            AND (
                om_validite_debut IS NULL
                OR om_validite_debut <= CURRENT_DATE
            )
        ORDER BY
            om_validite_fin DESC NULLS FIRST,
            om_validite_debut DESC NULLS FIRST
        LIMIT 1
    ) AS departement
    ON departement.dep = commune.dep
LEFT JOIN LATERAL (
        SELECT
            reg, libelle
        FROM
            &DB_PREFIXEregion
        WHERE
            reg = commune.reg
            AND (
                om_validite_debut IS NULL
                OR om_validite_debut <= CURRENT_DATE
            )
        ORDER BY
            om_validite_fin DESC NULLS FIRST,
            om_validite_debut DESC NULLS FIRST
        LIMIT 1
    ) AS region
    ON region.reg = region.reg

WHERE instruction.instruction = &idx
    GROUP BY lien_dossier_demandeur.dossier
) as sub_petitionnaire_autre
ON instruction.dossier = sub_petitionnaire_autre.dossier
LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_1
    ON
        petitionnaire_1.demandeur = petitionnaire_autre[1] AND petitionnaire_1.type_demandeur = ''petitionnaire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_1_civilite
    ON
        petitionnaire_1.particulier_civilite = petitionnaire_1_civilite.civilite OR petitionnaire_1.personne_morale_civilite = petitionnaire_1_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_2
    ON
        petitionnaire_2.demandeur = petitionnaire_autre[2] AND petitionnaire_2.type_demandeur = ''petitionnaire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_2_civilite
    ON
        petitionnaire_2.particulier_civilite = petitionnaire_2_civilite.civilite OR petitionnaire_2.personne_morale_civilite = petitionnaire_2_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_3
    ON
        petitionnaire_3.demandeur = petitionnaire_autre[3] AND petitionnaire_3.type_demandeur = ''petitionnaire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_3_civilite
    ON
        petitionnaire_3.particulier_civilite = petitionnaire_3_civilite.civilite OR petitionnaire_3.personne_morale_civilite = petitionnaire_3_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_4
    ON
        petitionnaire_4.demandeur = petitionnaire_autre[4] AND petitionnaire_4.type_demandeur = ''petitionnaire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_4_civilite
    ON
        petitionnaire_4.particulier_civilite = petitionnaire_4_civilite.civilite OR petitionnaire_4.personne_morale_civilite = petitionnaire_4_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as petitionnaire_5
    ON
        petitionnaire_5.demandeur = petitionnaire_autre[5] AND petitionnaire_5.type_demandeur = ''petitionnaire''
    LEFT JOIN
        &DB_PREFIXEcivilite as petitionnaire_5_civilite
    ON
        petitionnaire_5.particulier_civilite = petitionnaire_5_civilite.civilite OR petitionnaire_5.personne_morale_civilite = petitionnaire_5_civilite.civilite
LEFT JOIN (
    SELECT lien_dossier_demandeur.dossier, array_agg(lien_dossier_demandeur.demandeur ORDER BY lien_dossier_demandeur.demandeur) AS contrevenant_autre
    FROM &DB_PREFIXElien_dossier_demandeur
    LEFT JOIN &DB_PREFIXEdossier
        ON lien_dossier_demandeur.dossier=dossier.dossier
        AND lien_dossier_demandeur.petitionnaire_principal IS FALSE
    LEFT JOIN &DB_PREFIXEinstruction
        ON instruction.dossier = dossier.dossier
    RIGHT JOIN &DB_PREFIXEdemandeur
        ON lien_dossier_demandeur.demandeur=demandeur.demandeur
        AND demandeur.type_demandeur = ''contrevenant''
    
LEFT JOIN
    &DB_PREFIXEcommune
    ON
        dossier.commune = commune.commune
LEFT JOIN LATERAL (
        SELECT
            dep, libelle
        FROM
            &DB_PREFIXEdepartement
        WHERE
            dep = commune.dep
            AND (
                om_validite_debut IS NULL
                OR om_validite_debut <= CURRENT_DATE
            )
        ORDER BY
            om_validite_fin DESC NULLS FIRST,
            om_validite_debut DESC NULLS FIRST
        LIMIT 1
    ) AS departement
    ON departement.dep = commune.dep
LEFT JOIN LATERAL (
        SELECT
            reg, libelle
        FROM
            &DB_PREFIXEregion
        WHERE
            reg = commune.reg
            AND (
                om_validite_debut IS NULL
                OR om_validite_debut <= CURRENT_DATE
            )
        ORDER BY
            om_validite_fin DESC NULLS FIRST,
            om_validite_debut DESC NULLS FIRST
        LIMIT 1
    ) AS region
    ON region.reg = region.reg

WHERE instruction.instruction = &idx
    GROUP BY lien_dossier_demandeur.dossier
) as sub_contrevenant_autre
ON instruction.dossier = sub_contrevenant_autre.dossier
LEFT JOIN
        &DB_PREFIXEdemandeur as contrevenant_1
    ON
        contrevenant_1.demandeur = contrevenant_autre[1] AND contrevenant_1.type_demandeur = ''contrevenant''
    LEFT JOIN
        &DB_PREFIXEcivilite as contrevenant_1_civilite
    ON
        contrevenant_1.particulier_civilite = contrevenant_1_civilite.civilite OR contrevenant_1.personne_morale_civilite = contrevenant_1_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as contrevenant_2
    ON
        contrevenant_2.demandeur = contrevenant_autre[2] AND contrevenant_2.type_demandeur = ''contrevenant''
    LEFT JOIN
        &DB_PREFIXEcivilite as contrevenant_2_civilite
    ON
        contrevenant_2.particulier_civilite = contrevenant_2_civilite.civilite OR contrevenant_2.personne_morale_civilite = contrevenant_2_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as contrevenant_3
    ON
        contrevenant_3.demandeur = contrevenant_autre[3] AND contrevenant_3.type_demandeur = ''contrevenant''
    LEFT JOIN
        &DB_PREFIXEcivilite as contrevenant_3_civilite
    ON
        contrevenant_3.particulier_civilite = contrevenant_3_civilite.civilite OR contrevenant_3.personne_morale_civilite = contrevenant_3_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as contrevenant_4
    ON
        contrevenant_4.demandeur = contrevenant_autre[4] AND contrevenant_4.type_demandeur = ''contrevenant''
    LEFT JOIN
        &DB_PREFIXEcivilite as contrevenant_4_civilite
    ON
        contrevenant_4.particulier_civilite = contrevenant_4_civilite.civilite OR contrevenant_4.personne_morale_civilite = contrevenant_4_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as contrevenant_5
    ON
        contrevenant_5.demandeur = contrevenant_autre[5] AND contrevenant_5.type_demandeur = ''contrevenant''
    LEFT JOIN
        &DB_PREFIXEcivilite as contrevenant_5_civilite
    ON
        contrevenant_5.particulier_civilite = contrevenant_5_civilite.civilite OR contrevenant_5.personne_morale_civilite = contrevenant_5_civilite.civilite
LEFT JOIN (
    SELECT lien_dossier_demandeur.dossier, array_agg(lien_dossier_demandeur.demandeur ORDER BY lien_dossier_demandeur.demandeur) AS requerant_autre
    FROM &DB_PREFIXElien_dossier_demandeur
    LEFT JOIN &DB_PREFIXEdossier
        ON lien_dossier_demandeur.dossier=dossier.dossier
        AND lien_dossier_demandeur.petitionnaire_principal IS FALSE
    LEFT JOIN &DB_PREFIXEinstruction
        ON instruction.dossier = dossier.dossier
    RIGHT JOIN &DB_PREFIXEdemandeur
        ON lien_dossier_demandeur.demandeur=demandeur.demandeur
        AND demandeur.type_demandeur = ''requerant''
    
LEFT JOIN
    &DB_PREFIXEcommune
    ON
        dossier.commune = commune.commune
LEFT JOIN LATERAL (
        SELECT
            dep, libelle
        FROM
            &DB_PREFIXEdepartement
        WHERE
            dep = commune.dep
            AND (
                om_validite_debut IS NULL
                OR om_validite_debut <= CURRENT_DATE
            )
        ORDER BY
            om_validite_fin DESC NULLS FIRST,
            om_validite_debut DESC NULLS FIRST
        LIMIT 1
    ) AS departement
    ON departement.dep = commune.dep
LEFT JOIN LATERAL (
        SELECT
            reg, libelle
        FROM
            &DB_PREFIXEregion
        WHERE
            reg = commune.reg
            AND (
                om_validite_debut IS NULL
                OR om_validite_debut <= CURRENT_DATE
            )
        ORDER BY
            om_validite_fin DESC NULLS FIRST,
            om_validite_debut DESC NULLS FIRST
        LIMIT 1
    ) AS region
    ON region.reg = region.reg

WHERE instruction.instruction = &idx
    GROUP BY lien_dossier_demandeur.dossier
) as sub_requerant_autre
ON instruction.dossier = sub_requerant_autre.dossier
LEFT JOIN
        &DB_PREFIXEdemandeur as requerant_1
    ON
        requerant_1.demandeur = requerant_autre[1] AND requerant_1.type_demandeur = ''requerant''
    LEFT JOIN
        &DB_PREFIXEcivilite as requerant_1_civilite
    ON
        requerant_1.particulier_civilite = requerant_1_civilite.civilite OR requerant_1.personne_morale_civilite = requerant_1_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as requerant_2
    ON
        requerant_2.demandeur = requerant_autre[2] AND requerant_2.type_demandeur = ''requerant''
    LEFT JOIN
        &DB_PREFIXEcivilite as requerant_2_civilite
    ON
        requerant_2.particulier_civilite = requerant_2_civilite.civilite OR requerant_2.personne_morale_civilite = requerant_2_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as requerant_3
    ON
        requerant_3.demandeur = requerant_autre[3] AND requerant_3.type_demandeur = ''requerant''
    LEFT JOIN
        &DB_PREFIXEcivilite as requerant_3_civilite
    ON
        requerant_3.particulier_civilite = requerant_3_civilite.civilite OR requerant_3.personne_morale_civilite = requerant_3_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as requerant_4
    ON
        requerant_4.demandeur = requerant_autre[4] AND requerant_4.type_demandeur = ''requerant''
    LEFT JOIN
        &DB_PREFIXEcivilite as requerant_4_civilite
    ON
        requerant_4.particulier_civilite = requerant_4_civilite.civilite OR requerant_4.personne_morale_civilite = requerant_4_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as requerant_5
    ON
        requerant_5.demandeur = requerant_autre[5] AND requerant_5.type_demandeur = ''requerant''
    LEFT JOIN
        &DB_PREFIXEcivilite as requerant_5_civilite
    ON
        requerant_5.particulier_civilite = requerant_5_civilite.civilite OR requerant_5.personne_morale_civilite = requerant_5_civilite.civilite
LEFT JOIN (
    SELECT lien_dossier_demandeur.dossier, array_agg(lien_dossier_demandeur.demandeur ORDER BY lien_dossier_demandeur.demandeur) AS avocat_autre
    FROM &DB_PREFIXElien_dossier_demandeur
    LEFT JOIN &DB_PREFIXEdossier
        ON lien_dossier_demandeur.dossier=dossier.dossier
        AND lien_dossier_demandeur.petitionnaire_principal IS FALSE
    LEFT JOIN &DB_PREFIXEinstruction
        ON instruction.dossier = dossier.dossier
    RIGHT JOIN &DB_PREFIXEdemandeur
        ON lien_dossier_demandeur.demandeur=demandeur.demandeur
        AND demandeur.type_demandeur = ''avocat''
    
LEFT JOIN
    &DB_PREFIXEcommune
    ON
        dossier.commune = commune.commune
LEFT JOIN LATERAL (
        SELECT
            dep, libelle
        FROM
            &DB_PREFIXEdepartement
        WHERE
            dep = commune.dep
            AND (
                om_validite_debut IS NULL
                OR om_validite_debut <= CURRENT_DATE
            )
        ORDER BY
            om_validite_fin DESC NULLS FIRST,
            om_validite_debut DESC NULLS FIRST
        LIMIT 1
    ) AS departement
    ON departement.dep = commune.dep
LEFT JOIN LATERAL (
        SELECT
            reg, libelle
        FROM
            &DB_PREFIXEregion
        WHERE
            reg = commune.reg
            AND (
                om_validite_debut IS NULL
                OR om_validite_debut <= CURRENT_DATE
            )
        ORDER BY
            om_validite_fin DESC NULLS FIRST,
            om_validite_debut DESC NULLS FIRST
        LIMIT 1
    ) AS region
    ON region.reg = region.reg

WHERE instruction.instruction = &idx
    GROUP BY lien_dossier_demandeur.dossier
) as sub_avocat_autre
ON instruction.dossier = sub_avocat_autre.dossier
LEFT JOIN
        &DB_PREFIXEdemandeur as avocat_1
    ON
        avocat_1.demandeur = avocat_autre[1] AND avocat_1.type_demandeur = ''avocat''
    LEFT JOIN
        &DB_PREFIXEcivilite as avocat_1_civilite
    ON
        avocat_1.particulier_civilite = avocat_1_civilite.civilite OR avocat_1.personne_morale_civilite = avocat_1_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as avocat_2
    ON
        avocat_2.demandeur = avocat_autre[2] AND avocat_2.type_demandeur = ''avocat''
    LEFT JOIN
        &DB_PREFIXEcivilite as avocat_2_civilite
    ON
        avocat_2.particulier_civilite = avocat_2_civilite.civilite OR avocat_2.personne_morale_civilite = avocat_2_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as avocat_3
    ON
        avocat_3.demandeur = avocat_autre[3] AND avocat_3.type_demandeur = ''avocat''
    LEFT JOIN
        &DB_PREFIXEcivilite as avocat_3_civilite
    ON
        avocat_3.particulier_civilite = avocat_3_civilite.civilite OR avocat_3.personne_morale_civilite = avocat_3_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as avocat_4
    ON
        avocat_4.demandeur = avocat_autre[4] AND avocat_4.type_demandeur = ''avocat''
    LEFT JOIN
        &DB_PREFIXEcivilite as avocat_4_civilite
    ON
        avocat_4.particulier_civilite = avocat_4_civilite.civilite OR avocat_4.personne_morale_civilite = avocat_4_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as avocat_5
    ON
        avocat_5.demandeur = avocat_autre[5] AND avocat_5.type_demandeur = ''avocat''
    LEFT JOIN
        &DB_PREFIXEcivilite as avocat_5_civilite
    ON
        avocat_5.particulier_civilite = avocat_5_civilite.civilite OR avocat_5.personne_morale_civilite = avocat_5_civilite.civilite
LEFT JOIN (
    SELECT lien_dossier_demandeur.dossier, array_agg(lien_dossier_demandeur.demandeur ORDER BY lien_dossier_demandeur.demandeur) AS plaignant_autre
    FROM &DB_PREFIXElien_dossier_demandeur
    LEFT JOIN &DB_PREFIXEdossier
        ON lien_dossier_demandeur.dossier=dossier.dossier
        AND lien_dossier_demandeur.petitionnaire_principal IS FALSE
    LEFT JOIN &DB_PREFIXEinstruction
        ON instruction.dossier = dossier.dossier
    RIGHT JOIN &DB_PREFIXEdemandeur
        ON lien_dossier_demandeur.demandeur=demandeur.demandeur
        AND demandeur.type_demandeur = ''plaignant''
    
LEFT JOIN
    &DB_PREFIXEcommune
    ON
        dossier.commune = commune.commune
LEFT JOIN LATERAL (
        SELECT
            dep, libelle
        FROM
            &DB_PREFIXEdepartement
        WHERE
            dep = commune.dep
            AND (
                om_validite_debut IS NULL
                OR om_validite_debut <= CURRENT_DATE
            )
        ORDER BY
            om_validite_fin DESC NULLS FIRST,
            om_validite_debut DESC NULLS FIRST
        LIMIT 1
    ) AS departement
    ON departement.dep = commune.dep
LEFT JOIN LATERAL (
        SELECT
            reg, libelle
        FROM
            &DB_PREFIXEregion
        WHERE
            reg = commune.reg
            AND (
                om_validite_debut IS NULL
                OR om_validite_debut <= CURRENT_DATE
            )
        ORDER BY
            om_validite_fin DESC NULLS FIRST,
            om_validite_debut DESC NULLS FIRST
        LIMIT 1
    ) AS region
    ON region.reg = region.reg

WHERE instruction.instruction = &idx
    GROUP BY lien_dossier_demandeur.dossier
) as sub_plaignant_autre
ON instruction.dossier = sub_plaignant_autre.dossier
LEFT JOIN
        &DB_PREFIXEdemandeur as plaignant_1
    ON
        plaignant_1.demandeur = plaignant_autre[1] AND plaignant_1.type_demandeur = ''plaignant''
    LEFT JOIN
        &DB_PREFIXEcivilite as plaignant_1_civilite
    ON
        plaignant_1.particulier_civilite = plaignant_1_civilite.civilite OR plaignant_1.personne_morale_civilite = plaignant_1_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as plaignant_2
    ON
        plaignant_2.demandeur = plaignant_autre[2] AND plaignant_2.type_demandeur = ''plaignant''
    LEFT JOIN
        &DB_PREFIXEcivilite as plaignant_2_civilite
    ON
        plaignant_2.particulier_civilite = plaignant_2_civilite.civilite OR plaignant_2.personne_morale_civilite = plaignant_2_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as plaignant_3
    ON
        plaignant_3.demandeur = plaignant_autre[3] AND plaignant_3.type_demandeur = ''plaignant''
    LEFT JOIN
        &DB_PREFIXEcivilite as plaignant_3_civilite
    ON
        plaignant_3.particulier_civilite = plaignant_3_civilite.civilite OR plaignant_3.personne_morale_civilite = plaignant_3_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as plaignant_4
    ON
        plaignant_4.demandeur = plaignant_autre[4] AND plaignant_4.type_demandeur = ''plaignant''
    LEFT JOIN
        &DB_PREFIXEcivilite as plaignant_4_civilite
    ON
        plaignant_4.particulier_civilite = plaignant_4_civilite.civilite OR plaignant_4.personne_morale_civilite = plaignant_4_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as plaignant_5
    ON
        plaignant_5.demandeur = plaignant_autre[5] AND plaignant_5.type_demandeur = ''plaignant''
    LEFT JOIN
        &DB_PREFIXEcivilite as plaignant_5_civilite
    ON
        plaignant_5.particulier_civilite = plaignant_5_civilite.civilite OR plaignant_5.personne_morale_civilite = plaignant_5_civilite.civilite
LEFT JOIN (
    SELECT lien_dossier_demandeur.dossier, array_agg(lien_dossier_demandeur.demandeur ORDER BY lien_dossier_demandeur.demandeur) AS bailleur_autre
    FROM &DB_PREFIXElien_dossier_demandeur
    LEFT JOIN &DB_PREFIXEdossier
        ON lien_dossier_demandeur.dossier=dossier.dossier
        AND lien_dossier_demandeur.petitionnaire_principal IS FALSE
    LEFT JOIN &DB_PREFIXEinstruction
        ON instruction.dossier = dossier.dossier
    RIGHT JOIN &DB_PREFIXEdemandeur
        ON lien_dossier_demandeur.demandeur=demandeur.demandeur
        AND demandeur.type_demandeur = ''bailleur''
    
LEFT JOIN
    &DB_PREFIXEcommune
    ON
        dossier.commune = commune.commune
LEFT JOIN LATERAL (
        SELECT
            dep, libelle
        FROM
            &DB_PREFIXEdepartement
        WHERE
            dep = commune.dep
            AND (
                om_validite_debut IS NULL
                OR om_validite_debut <= CURRENT_DATE
            )
        ORDER BY
            om_validite_fin DESC NULLS FIRST,
            om_validite_debut DESC NULLS FIRST
        LIMIT 1
    ) AS departement
    ON departement.dep = commune.dep
LEFT JOIN LATERAL (
        SELECT
            reg, libelle
        FROM
            &DB_PREFIXEregion
        WHERE
            reg = commune.reg
            AND (
                om_validite_debut IS NULL
                OR om_validite_debut <= CURRENT_DATE
            )
        ORDER BY
            om_validite_fin DESC NULLS FIRST,
            om_validite_debut DESC NULLS FIRST
        LIMIT 1
    ) AS region
    ON region.reg = region.reg

WHERE instruction.instruction = &idx
    GROUP BY lien_dossier_demandeur.dossier
) as sub_bailleur_autre
ON instruction.dossier = sub_bailleur_autre.dossier
LEFT JOIN
        &DB_PREFIXEdemandeur as bailleur_1
    ON
        bailleur_1.demandeur = bailleur_autre[1] AND bailleur_1.type_demandeur = ''bailleur''
    LEFT JOIN
        &DB_PREFIXEcivilite as bailleur_1_civilite
    ON
        bailleur_1.particulier_civilite = bailleur_1_civilite.civilite OR bailleur_1.personne_morale_civilite = bailleur_1_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as bailleur_2
    ON
        bailleur_2.demandeur = bailleur_autre[2] AND bailleur_2.type_demandeur = ''bailleur''
    LEFT JOIN
        &DB_PREFIXEcivilite as bailleur_2_civilite
    ON
        bailleur_2.particulier_civilite = bailleur_2_civilite.civilite OR bailleur_2.personne_morale_civilite = bailleur_2_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as bailleur_3
    ON
        bailleur_3.demandeur = bailleur_autre[3] AND bailleur_3.type_demandeur = ''bailleur''
    LEFT JOIN
        &DB_PREFIXEcivilite as bailleur_3_civilite
    ON
        bailleur_3.particulier_civilite = bailleur_3_civilite.civilite OR bailleur_3.personne_morale_civilite = bailleur_3_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as bailleur_4
    ON
        bailleur_4.demandeur = bailleur_autre[4] AND bailleur_4.type_demandeur = ''bailleur''
    LEFT JOIN
        &DB_PREFIXEcivilite as bailleur_4_civilite
    ON
        bailleur_4.particulier_civilite = bailleur_4_civilite.civilite OR bailleur_4.personne_morale_civilite = bailleur_4_civilite.civilite
    LEFT JOIN
        &DB_PREFIXEdemandeur as bailleur_5
    ON
        bailleur_5.demandeur = bailleur_autre[5] AND bailleur_5.type_demandeur = ''bailleur''
    LEFT JOIN
        &DB_PREFIXEcivilite as bailleur_5_civilite
    ON
        bailleur_5.particulier_civilite = bailleur_5_civilite.civilite OR bailleur_5.personne_morale_civilite = bailleur_5_civilite.civilite
LEFT JOIN
    &DB_PREFIXEdossier_instruction_type
    ON
        dossier.dossier_instruction_type = dossier_instruction_type.dossier_instruction_type
LEFT JOIN
    &DB_PREFIXEdossier_autorisation
    ON
        dossier.dossier_autorisation = dossier_autorisation.dossier_autorisation
LEFT JOIN
    &DB_PREFIXEdossier_autorisation_type_detaille
    ON
        dossier_autorisation.dossier_autorisation_type_detaille = dossier_autorisation_type_detaille.dossier_autorisation_type_detaille
LEFT JOIN
    &DB_PREFIXEdossier_autorisation_type
    ON
        dossier_autorisation_type_detaille.dossier_autorisation_type = dossier_autorisation_type.dossier_autorisation_type
LEFT JOIN
    &DB_PREFIXEinstructeur
    ON
        dossier.instructeur = instructeur.instructeur
LEFT JOIN
    &DB_PREFIXEinstructeur as instructeur_2
    ON
        dossier.instructeur_2 = instructeur_2.instructeur
LEFT JOIN
    &DB_PREFIXEom_utilisateur
    ON
        om_utilisateur.om_utilisateur = instructeur.om_utilisateur
LEFT JOIN
    &DB_PREFIXEom_utilisateur as om_utilisateur_2
    ON
        om_utilisateur_2.om_utilisateur = instructeur_2.om_utilisateur
LEFT JOIN
    &DB_PREFIXEdivision
    ON
        instructeur.division = division.division
LEFT JOIN
    &DB_PREFIXEdivision as division_2
    ON
        instructeur_2.division = division_2.division
LEFT JOIN 
    &DB_PREFIXEdirection
    ON division.direction = direction.direction
LEFT JOIN
    &DB_PREFIXEarrondissement
    ON
        dossier.terrain_adresse_code_postal = arrondissement.code_postal
LEFT JOIN
    &DB_PREFIXEavis_decision
    ON
        dossier.avis_decision = avis_decision.avis_decision
LEFT JOIN
    &DB_PREFIXEetat
    ON
        dossier.etat = etat.etat
LEFT JOIN
    &DB_PREFIXEdonnees_techniques
    ON
    dossier.dossier = donnees_techniques.dossier_instruction
LEFT JOIN
    &DB_PREFIXEarchitecte
    ON
    donnees_techniques.architecte = architecte.architecte
LEFT JOIN 
    &DB_PREFIXEevenement
    ON
        instruction.evenement = evenement.evenement
LEFT JOIN 
    &DB_PREFIXEquartier
    ON
        dossier.quartier = quartier.quartier
LEFT JOIN
    &DB_PREFIXEtaxe_amenagement
    ON
        dossier.om_collectivite = taxe_amenagement.om_collectivite
LEFT JOIN
    &DB_PREFIXEerp_categorie
    ON
        donnees_techniques.erp_class_cat = erp_categorie.erp_categorie
LEFT JOIN
    &DB_PREFIXEerp_type
    ON
        donnees_techniques.erp_class_type = erp_type.erp_type
LEFT JOIN
    &DB_PREFIXEobjet_recours
    ON
        donnees_techniques.ctx_objet_recours = objet_recours.objet_recours

LEFT JOIN
    &DB_PREFIXEcommune
    ON
        dossier.commune = commune.commune
LEFT JOIN LATERAL (
        SELECT
            dep, libelle
        FROM
            &DB_PREFIXEdepartement
        WHERE
            dep = commune.dep
            AND (
                om_validite_debut IS NULL
                OR om_validite_debut <= CURRENT_DATE
            )
        ORDER BY
            om_validite_fin DESC NULLS FIRST,
            om_validite_debut DESC NULLS FIRST
        LIMIT 1
    ) AS departement
    ON departement.dep = commune.dep
LEFT JOIN LATERAL (
        SELECT
            reg, libelle
        FROM
            &DB_PREFIXEregion
        WHERE
            reg = commune.reg
            AND (
                om_validite_debut IS NULL
                OR om_validite_debut <= CURRENT_DATE
            )
        ORDER BY
            om_validite_fin DESC NULLS FIRST,
            om_validite_debut DESC NULLS FIRST
        LIMIT 1
    ) AS region
    ON region.reg = region.reg

WHERE instruction.instruction = &idx', '--Données générales de l''événement d''instruction
[complement1_instruction]
[complement2_instruction]
[complement3_instruction]
[complement4_instruction]
[code_barres_instruction]
[date_evenement_instruction]
[libelle_om_lettretype]
[archive_delai_instruction]
[agrement_signataire]
[visa_signataire]
[visa_signataire_2]
[visa_signataire_3]
[visa_signataire_4]
[service_consultant_libelle]

--Données générales du dossier d''instruction
[libelle_dossier]    [code_barres_dossier]    [delai_dossier]    [terrain_references_cadastrales_dossier]
[terrain_superficie_dossier]
[libelle_quartier]
[libelle_da]
[code_datd]    [libelle_datd]
[code_dat]    [libelle_dat]
[code_dit]    [libelle_dit]
[famille_travaux] [nature_travaux]
[libelle_avis_decision]
[mention_depot_electronique_recepisse]
[complete_le]

-- Données contentieux du dossier d''instruction
[autorisation_contestee]
[date_cloture_instruction_dossier]
[date_premiere_visite_dossier]
[date_derniere_visite_dossier]
[date_contradictoire_dossier]
[date_retour_contradictoire_dossier]
[date_ait_dossier]
[date_transmission_parquet_dossier]

--Données générales du paramétrage de l''événement
[libelle_evenement]
[etat_evenement]
[delai_evenement]
[accord_tacite_evenement]
[delai_notification_evenement]
[avis_decision_evenement]
[autorite_competente_evenement]
[cle_acces_citoyen]

--Coordonnées de l''instructeur
[nom_instructeur]
[telephone_instructeur]
[division_instructeur]
[email_instructeur]

-- Coordonnées de l''instructeur 2
[nom_instructeur_2]
[telephone_instructeur_2]
[division_instructeur_2]
[email_instructeur_2]

--Adresse du terrain du dossier d''instruction 
[terrain_adresse_voie_numero_dossier]
[adresse_terrain_sdl]
[adresse_terrain]    [terrain_adresse_voie_dossier]
[terrain_adresse_lieu_dit_dossier]    [terrain_adresse_bp_dossier]
[terrain_adresse_code_postal_dossier]    [terrain_adresse_localite_dossier]    [terrain_adresse_cedex_dossier]

[libelle_arrondissement]

--Taxe d''aménagement du dossier d''instruction
[tax_taux_secteur](à utiliser si l''option de simulation des taxes est activée et que le taxe du secteur est définit sur le dossier)
[tax_taux_secteur_1](jusqu''à 20)  [tax_numero_secteur]    [tax_montant_part_communale]    [tax_montant_part_departementale]
[tax_montant_part_regionale]    [tax_montant_total] [tax_secteur]   [tax_en_ile_de_france]
[tax_val_forf_surf_cstr]    [tax_val_forf_empl_tente_carav_rml] [tax_val_forf_empl_hll] [tax_val_forf_surf_piscine]
[tax_val_forf_nb_eolienne]  [tax_val_forf_surf_pann_photo]  [tax_val_forf_nb_parking_ext]   [tax_tx_depart] [tax_tx_reg]
[tax_tx_exo_facul_1_reg] [tax_tx_exo_facul_2_reg]   [tax_tx_exo_facul_3_reg]    [tax_tx_exo_facul_4_reg]    [tax_tx_exo_facul_5_reg]
[tax_tx_exo_facul_6_reg] [tax_tx_exo_facul_7_reg] [tax_tx_exo_facul_8_reg] [tax_tx_exo_facul_9_reg] [tax_tx_exo_facul_1_depart]
[tax_tx_exo_facul_2_depart] [tax_tx_exo_facul_3_depart] [tax_tx_exo_facul_4_depart] [tax_tx_exo_facul_5_depart]
[tax_tx_exo_facul_6_depart] [tax_tx_exo_facul_7_depart] [tax_tx_exo_facul_8_depart] [tax_tx_exo_facul_9_depart]
[tax_tx_exo_facul_1_comm]   [tax_tx_exo_facul_2_comm]   [tax_tx_exo_facul_3_comm] [tax_tx_exo_facul_4_comm]
[tax_tx_exo_facul_5_comm] [tax_tx_exo_facul_6_comm] [tax_tx_exo_facul_7_comm] [tax_tx_exo_facul_8_comm] [tax_tx_exo_facul_9_comm]
[tax_tx_rap]

--Coordonnées du pétitionnaire principal
[nom_qualite_part_petitionnaire_principal] [prenom_qualite_part_petitionnaire_principal]
[civilite_qualite_part_petitionnaire_principal] [nom_complet_qualite_part_petitionnaire_principal]
[nom_qualite_pm_petitionnaire_principal] [prenom_qualite_pm_petitionnaire_principal]
[civilite_qualite_pm_petitionnaire_principal] [nom_complet_qualite_pm_petitionnaire_principal]
[nom_qualite_part_ou_pm_petitionnaire_principal] [prenom_qualite_part_ou_pm_petitionnaire_principal]
[civilite_qualite_part_ou_pm_petitionnaire_principal] [nom_complet_qualite_part_ou_pm_petitionnaire_principal]
[nom_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[civilite_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[nom_particulier_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[prenom_particulier_petitionnaire_principal] (Déprécié, à ne plus utiliser)
[raison_sociale_petitionnaire_principal]
[denomination_petitionnaire_principal]
[siret_petitionnaire_principal]
[categorie_juridique_petitionnaire_principal]
[numero_petitionnaire_principal]
[adresse_petitionnaire_principal_sdl]
[adresse_petitionnaire_principal]    [voie_petitionnaire_principal]    [complement_petitionnaire_principal]
[lieu_dit_petitionnaire_principal]    [bp_petitionnaire_principal]
[code_postal_petitionnaire_principal]    [localite_petitionnaire_principal]    [cedex_petitionnaire_principal]
[pays_petitionnaire_principal] [division_territoriale_petitionnaire_principal]
[date_naissance_petitionnaire_principal]
[lieu_naissance_petitionnaire_principal]
[email_petitionnaire_principal]
[coordonnees_telephonique_petitionnaire_principal]
[notification_petitionnaire_principal]

--Coordonnées du pétitionnaire principal initial
[nom_qualite_part_petitionnaire_principal_initial] [prenom_qualite_part_petitionnaire_principal_initial]
[civilite_qualite_part_petitionnaire_principal_initial] [nom_complet_qualite_part_petitionnaire_principal_initial]
[nom_qualite_pm_petitionnaire_principal_initial] [prenom_qualite_pm_petitionnaire_principal_initial]
[civilite_qualite_pm_petitionnaire_principal_initial] [nom_complet_qualite_pm_petitionnaire_principal_initial]
[nom_qualite_part_ou_pm_petitionnaire_principal_initial] [prenom_qualite_part_ou_pm_petitionnaire_principal_initial]
[civilite_qualite_part_ou_pm_petitionnaire_principal_initial] [nom_complet_qualite_part_ou_pm_petitionnaire_principal_initial]
[nom_petitionnaire_principal_initial] (Déprécié, à ne plus utiliser)
[raison_sociale_petitionnaire_principal_initial]
[denomination_petitionnaire_principal_initial]
[siret_petitionnaire_principal_initial]
[categorie_juridique_petitionnaire_principal_initial]
[numero_petitionnaire_principal_initial]
[adresse_petitionnaire_principal_initial_sdl]
[adresse_petitionnaire_principal_initial]    [voie_petitionnaire_principal_initial]    [complement_petitionnaire_principal_initial]
[lieu_dit_petitionnaire_principal_initial]    [bp_petitionnaire_principal_initial]
[code_postal_petitionnaire_principal_initial]    [localite_petitionnaire_principal_initial]    [cedex_petitionnaire_principal_initial]
[pays_petitionnaire_principal_initial] [division_territoriale_petitionnaire_principal_initial]
[date_naissance_petitionnaire_principal_initial]
[lieu_naissance_petitionnaire_principal_initial]
[email_petitionnaire_principal_initial]
[coordonnees_telephonique_petitionnaire_principal_initial]
[notification_petitionnaire_principal_initial]

--Coordonnées des autres pétitionnaires
[nom_qualite_part_petitionnaire_1](jusqu''à 5)    [prenom_qualite_part_petitionnaire_1](jusqu''à 5)
[civilite_qualite_part_petitionnaire_1](jusqu''à 5)    [nom_complet_qualite_part_petitionnaire_1](jusqu''à 5)
[nom_qualite_pm_petitionnaire_1](jusqu''à 5)    [prenom_qualite_pm_petitionnaire_1](jusqu''à 5)
[civilite_qualite_pm_petitionnaire_1](jusqu''à 5)    [nom_complet_qualite_pm_petitionnaire_1](jusqu''à 5)
[nom_qualite_part_ou_pm_petitionnaire_1](jusqu''à 5)    [prenom_qualite_part_ou_pm_petitionnaire_1](jusqu''à 5)
[civilite_qualite_part_ou_pm_petitionnaire_1](jusqu''à 5)    [nom_complet_qualite_part_ou_pm_petitionnaire_1](jusqu''à 5)
[nom_petitionnaire_1](jusqu''à 5) (Déprécié, à ne plus utiliser)
[raison_sociale_petitionnaire_1](jusqu''à 5)
[denomination_petitionnaire_1](jusqu''à 5)
[siret_petitionnaire_1](jusqu''à 5)
[categorie_juridique_petitionnaire_1](jusqu''à 5)
[numero_petitionnaire_1](jusqu''à 5)
[adresse_petitionnaire_1_sdl](jusqu''à 5)
[adresse_petitionnaire_1](jusqu''à 5)    [voie_petitionnaire_1](jusqu''à 5)
[complement_petitionnaire_1](jusqu''à 5)
[lieu_dit_petitionnaire_1](jusqu''à 5)    [bp_petitionnaire_1](jusqu''à 5)
[code_postal_petitionnaire_1](jusqu''à 5)    [localite_petitionnaire_1](jusqu''à 5)
[cedex_petitionnaire_1](jusqu''à 5)
[pays_petitionnaire_1](jusqu''à 5) [division_territoriale_petitionnaire_1](jusqu''à 5)
[date_naissance_petitionnaire_1]
[lieu_naissance_petitionnaire_1]
[email_petitionnaire_1]
[coordonnees_telephonique_petitionnaire_1]

--Coordonnées du contrevenant principal
[nom_qualite_part_contrevenant_principal] [prenom_qualite_part_contrevenant_principal]
[civilite_qualite_part_contrevenant_principal] [nom_complet_qualite_part_contrevenant_principal]
[nom_qualite_pm_contrevenant_principal] [prenom_qualite_pm_contrevenant_principal]
[civilite_qualite_pm_contrevenant_principal] [nom_complet_qualite_pm_contrevenant_principal]
[nom_qualite_part_ou_pm_contrevenant_principal] [prenom_qualite_part_ou_pm_contrevenant_principal]
[civilite_qualite_part_ou_pm_contrevenant_principal] [nom_complet_qualite_part_ou_pm_contrevenant_principal]
[raison_sociale_contrevenant_principal]
[denomination_contrevenant_principal]
[siret_contrevenant_principal]
[categorie_juridique_contrevenant_principal]
[numero_contrevenant_principal]
[adresse_contrevenant_principal_sdl]
[adresse_contrevenant_principal]    [voie_contrevenant_principal]    [complement_contrevenant_principal]
[lieu_dit_contrevenant_principal]    [bp_contrevenant_principal]
[code_postal_contrevenant_principal]    [localite_contrevenant_principal]    [cedex_contrevenant_principal]
[pays_contrevenant_principal] [division_territoriale_contrevenant_principal]
[date_naissance_contrevenant_principal]
[lieu_naissance_contrevenant_principal]
[email_contrevenant_principal]
[coordonnees_telephonique_contrevenant_principal]

--Coordonnées des autres contrevenants
[nom_qualite_part_contrevenant_1](jusqu''à 5) [prenom_qualite_part_contrevenant_1](jusqu''à 5)
[civilite_qualite_part_contrevenant_1](jusqu''à 5) [nom_complet_qualite_part_contrevenant_1](jusqu''à 5)
[nom_qualite_pm_contrevenant_1](jusqu''à 5) [prenom_qualite_pm_contrevenant_1](jusqu''à 5)
[civilite_qualite_pm_contrevenant_1](jusqu''à 5) [nom_complet_qualite_pm_contrevenant_1](jusqu''à 5)
[nom_qualite_part_ou_pm_contrevenant_1](jusqu''à 5) [prenom_qualite_part_ou_pm_contrevenant_1](jusqu''à 5)
[civilite_qualite_part_ou_pm_contrevenant_1](jusqu''à 5) [nom_complet_qualite_part_ou_pm_contrevenant_1](jusqu''à 5)
[raison_sociale_contrevenant_1](jusqu''à 5)
[denomination_contrevenant_1](jusqu''à 5)
[siret_contrevenant_1](jusqu''à 5)
[categorie_juridique_contrevenant_1](jusqu''à 5)
[numero_contrevenant_1](jusqu''à 5)
[adresse_contrevenant_1_sdl](jusqu''à 5)
[adresse_contrevenant_1](jusqu''à 5)    [voie_contrevenant_1](jusqu''à 5)
[complement_contrevenant_1](jusqu''à 5)
[lieu_dit_contrevenant_1](jusqu''à 5)    [bp_contrevenant_1](jusqu''à 5)
[code_postal_contrevenant_1](jusqu''à 5)    [localite_contrevenant_1](jusqu''à 5)
[cedex_contrevenant_1](jusqu''à 5)
[pays_contrevenant_1](jusqu''à 5) [division_territoriale_contrevenant_1](jusqu''à 5)
[date_naissance_contrevenant_1]
[lieu_naissance_contrevenant_1]
[email_contrevenant_1]
[coordonnees_telephonique_contrevenant_1]

--Coordonnées du requérant principal
[nom_qualite_part_requerant_principal] [prenom_qualite_part_requerant_principal]
[civilite_qualite_part_requerant_principal] [nom_complet_qualite_part_requerant_principal]
[nom_qualite_pm_requerant_principal] [prenom_qualite_pm_requerant_principal]
[civilite_qualite_pm_requerant_principal] [nom_complet_qualite_pm_requerant_principal]
[nom_qualite_part_ou_pm_requerant_principal] [prenom_qualite_part_ou_pm_requerant_principal]
[civilite_qualite_part_ou_pm_requerant_principal] [nom_complet_qualite_part_ou_pm_requerant_principal]
[raison_sociale_requerant_principal]
[denomination_requerant_principal]
[siret_requerant_principal]
[categorie_juridique_requerant_principal]
[numero_requerant_principal]
[adresse_requerant_principal_sdl]
[adresse_requerant_principal]    [voie_requerant_principal]    [complement_requerant_principal]
[lieu_dit_requerant_principal]    [bp_requerant_principal]
[code_postal_requerant_principal]    [localite_requerant_principal]    [cedex_requerant_principal]
[pays_requerant_principal] [division_territoriale_requerant_principal]
[date_naissance_requerant_principal]
[lieu_naissance_requerant_principal]
[email_requerant_principal]
[coordonnees_telephonique_requerant_principal]

--Coordonnées des autres requérants
[nom_qualite_part_requerant_1](jusqu''à 5) [prenom_qualite_part_requerant_1](jusqu''à 5)
[civilite_qualite_part_requerant_1](jusqu''à 5) [nom_complet_qualite_part_requerant_1](jusqu''à 5)
[nom_qualite_pm_requerant_1](jusqu''à 5) [prenom_qualite_pm_requerant_1](jusqu''à 5)
[civilite_qualite_pm_requerant_1](jusqu''à 5) [nom_complet_qualite_pm_requerant_1](jusqu''à 5)
[nom_qualite_part_ou_pm_requerant_1](jusqu''à 5) [prenom_qualite_part_ou_pm_requerant_1](jusqu''à 5)
[civilite_qualite_part_ou_pm_requerant_1](jusqu''à 5) [nom_complet_qualite_part_ou_pm_requerant_1](jusqu''à 5)
[raison_sociale_requerant_1](jusqu''à 5)
[denomination_requerant_1](jusqu''à 5)
[siret_requerant_1](jusqu''à 5)
[categorie_juridique_requerant_1](jusqu''à 5)
[numero_requerant_1](jusqu''à 5)
[adresse_requerant_1_sdl](jusqu''à 5)
[adresse_requerant_1](jusqu''à 5)    [voie_requerant_1](jusqu''à 5)
[complement_requerant_1](jusqu''à 5)
[lieu_dit_requerant_1](jusqu''à 5)    [bp_requerant_1](jusqu''à 5)
[code_postal_requerant_1](jusqu''à 5)    [localite_requerant_1](jusqu''à 5)
[cedex_requerant_1](jusqu''à 5)
[pays_requerant_1](jusqu''à 5) [division_territoriale_requerant_1](jusqu''à 5)
[date_naissance_requerant_1]
[lieu_naissance_requerant_1]
[email_requerant_1]
[coordonnees_telephonique_requerant_1]

--Coordonnées de l''avocat principal
[nom_qualite_part_avocat_principal] [prenom_qualite_part_avocat_principal]
[civilite_qualite_part_avocat_principal] [nom_complet_qualite_part_avocat_principal]
[nom_qualite_pm_avocat_principal] [prenom_qualite_pm_avocat_principal]
[civilite_qualite_pm_avocat_principal] [nom_complet_qualite_pm_avocat_principal]
[nom_qualite_part_ou_pm_avocat_principal] [prenom_qualite_part_ou_pm_avocat_principal]
[civilite_qualite_part_ou_pm_avocat_principal] [nom_complet_qualite_part_ou_pm_avocat_principal]
[raison_sociale_avocat_principal]
[denomination_avocat_principal]
[siret_avocat_principal]
[categorie_juridique_avocat_principal]
[numero_avocat_principal]
[adresse_avocat_principal_sdl]
[adresse_avocat_principal]    [voie_avocat_principal]    [complement_avocat_principal]
[lieu_dit_avocat_principal]    [bp_avocat_principal]
[code_postal_avocat_principal]    [localite_avocat_principal]    [cedex_avocat_principal]
[pays_avocat_principal] [division_territoriale_avocat_principal]
[date_naissance_avocat_principal]
[lieu_naissance_avocat_principal]
[email_avocat_principal]
[coordonnees_telephonique_avocat_principal]

--Coordonnées des autres avocats
[nom_qualite_part_avocat_1](jusqu''à 5) [prenom_qualite_part_avocat_1](jusqu''à 5)
[civilite_qualite_part_avocat_1](jusqu''à 5) [nom_complet_qualite_part_avocat_1](jusqu''à 5)
[nom_qualite_pm_avocat_1](jusqu''à 5) [prenom_qualite_pm_avocat_1](jusqu''à 5)
[civilite_qualite_pm_avocat_1](jusqu''à 5) [nom_complet_qualite_pm_avocat_1](jusqu''à 5)
[nom_qualite_part_ou_pm_avocat_1](jusqu''à 5) [prenom_qualite_part_ou_pm_avocat_1](jusqu''à 5)
[civilite_qualite_part_ou_pm_avocat_1](jusqu''à 5) [nom_complet_qualite_part_ou_pm_avocat_1](jusqu''à 5)
[raison_sociale_avocat_1](jusqu''à 5)
[denomination_avocat_1](jusqu''à 5)
[siret_avocat_1](jusqu''à 5)
[categorie_juridique_avocat_1](jusqu''à 5)
[numero_avocat_1](jusqu''à 5)
[adresse_avocat_1_sdl](jusqu''à 5)
[adresse_avocat_1](jusqu''à 5)    [voie_avocat_1](jusqu''à 5)
[complement_avocat_1](jusqu''à 5)
[lieu_dit_avocat_1](jusqu''à 5)    [bp_avocat_1](jusqu''à 5)
[code_postal_avocat_1](jusqu''à 5)    [localite_avocat_1](jusqu''à 5)
[cedex_avocat_1](jusqu''à 5)
[pays_avocat_1](jusqu''à 5) [division_territoriale_avocat_1](jusqu''à 5)
[date_naissance_avocat_1]
[lieu_naissance_avocat_1]
[email_avocat_1]
[coordonnees_telephonique_avocat_1]

--Coordonnées du plaignant principal
[nom_qualite_part_plaignant_principal] [prenom_qualite_part_plaignant_principal]
[civilite_qualite_part_plaignant_principal] [nom_complet_qualite_part_plaignant_principal]
[nom_qualite_pm_plaignant_principal] [prenom_qualite_pm_plaignant_principal]
[civilite_qualite_pm_plaignant_principal] [nom_complet_qualite_pm_plaignant_principal]
[nom_qualite_part_ou_pm_plaignant_principal] [prenom_qualite_part_ou_pm_plaignant_principal]
[civilite_qualite_part_ou_pm_plaignant_principal] [nom_complet_qualite_part_ou_pm_plaignant_principal]
[raison_sociale_plaignant_principal]
[denomination_plaignant_principal]
[siret_plaignant_principal]
[categorie_juridique_plaignant_principal]
[numero_plaignant_principal]
[adresse_plaignant_principal_sdl]
[adresse_plaignant_principal]    [voie_plaignant_principal]    [complement_plaignant_principal]
[lieu_dit_plaignant_principal]    [bp_plaignant_principal]
[code_postal_plaignant_principal]    [localite_plaignant_principal]    [cedex_plaignant_principal]
[pays_plaignant_principal] [division_territoriale_plaignant_principal]
[date_naissance_plaignant_principal]
[lieu_naissance_plaignant_principal]
[email_plaignant_principal]
[coordonnees_telephonique_plaignant_principal]

--Coordonnées des autres plaignants
[nom_qualite_part_plaignant_1](jusqu''à 5) [prenom_qualite_part_plaignant_1](jusqu''à 5)
[civilite_qualite_part_plaignant_1](jusqu''à 5) [nom_complet_qualite_part_plaignant_1](jusqu''à 5)
[nom_qualite_pm_plaignant_1](jusqu''à 5) [prenom_qualite_pm_plaignant_1](jusqu''à 5)
[civilite_qualite_pm_plaignant_1](jusqu''à 5) [nom_complet_qualite_pm_plaignant_1](jusqu''à 5)
[nom_qualite_part_ou_pm_plaignant_1](jusqu''à 5) [prenom_qualite_part_ou_pm_plaignant_1](jusqu''à 5)
[civilite_qualite_part_ou_pm_plaignant_1](jusqu''à 5) [nom_complet_qualite_part_ou_pm_plaignant_1](jusqu''à 5)
[raison_sociale_plaignant_1](jusqu''à 5)
[denomination_plaignant_1](jusqu''à 5)
[siret_plaignant_1](jusqu''à 5)
[categorie_juridique_plaignant_1](jusqu''à 5)
[numero_plaignant_1](jusqu''à 5)
[adresse_plaignant_1_sdl](jusqu''à 5)
[adresse_plaignant_1](jusqu''à 5)    [voie_plaignant_1](jusqu''à 5)
[complement_plaignant_1](jusqu''à 5)
[lieu_dit_plaignant_1](jusqu''à 5)    [bp_plaignant_1](jusqu''à 5)
[code_postal_plaignant_1](jusqu''à 5)    [localite_plaignant_1](jusqu''à 5)
[cedex_plaignant_1](jusqu''à 5)
[pays_plaignant_1](jusqu''à 5) [division_territoriale_plaignant_1](jusqu''à 5)
[date_naissance_plaignant_1]
[lieu_naissance_plaignant_1]
[email_plaignant_1]
[coordonnees_telephonique_plaignant_1]

--Coordonnées du délégataire
[nom_qualite_part_delegataire] [prenom_qualite_part_delegataire]
[civilite_qualite_part_delegataire] [nom_complet_qualite_part_delegataire]
[nom_qualite_pm_delegataire] [prenom_qualite_pm_delegataire]
[civilite_qualite_pm_delegataire] [nom_complet_qualite_pm_delegataire]
[nom_qualite_part_ou_pm_delegataire] [prenom_qualite_part_ou_pm_delegataire]
[civilite_qualite_part_ou_pm_delegataire] [nom_complet_qualite_part_ou_pm_delegataire]
[raison_sociale_delegataire]
[denomination_delegataire]
[siret_delegataire]
[categorie_juridique_delegataire]
[numero_delegataire]
[adresse_delegataire_sdl]
[adresse_delegataire]    [voie_delegataire]    [complement_delegataire]
[lieu_dit_delegataire]    [bp_delegataire]
[code_postal_delegataire]    [ville_delegataire]    [cedex_delegataire]
[pays_delegataire] [division_territoriale_delegataire]
[date_naissance_delegataire]
[lieu_naissance_delegataire]
[email_delegataire]
[coordonnees_telephonique_delegataire]

--Coordonnées du bailleur principal
[nom_qualite_part_bailleur_principal] [prenom_qualite_part_bailleur_principal]
[civilite_qualite_part_bailleur_principal] [nom_complet_qualite_part_bailleur_principal]
[nom_qualite_pm_bailleur_principal] [prenom_qualite_pm_bailleur_principal]
[civilite_qualite_pm_bailleur_principal] [nom_complet_qualite_pm_bailleur_principal]
[nom_qualite_part_ou_pm_bailleur_principal] [prenom_qualite_part_ou_pm_bailleur_principal]
[civilite_qualite_part_ou_pm_bailleur_principal] [nom_complet_qualite_part_ou_pm_bailleur_principal]
[raison_sociale_bailleur_principal]
[denomination_bailleur_principal]
[siret_bailleur_principal]
[categorie_juridique_bailleur_principal]
[numero_bailleur_principal]
[adresse_bailleur_principal_sdl]
[adresse_bailleur_principal]    [voie_bailleur_principal]    [complement_bailleur_principal]
[lieu_dit_bailleur_principal]    [bp_bailleur_principal]
[code_postal_bailleur_principal]    [localite_bailleur_principal]    [cedex_bailleur_principal]
[pays_bailleur_principal] [division_territoriale_bailleur_principal]
[date_naissance_bailleur_principal]
[lieu_naissance_bailleur_principal]
[email_bailleur_principal]
[coordonnees_telephonique_bailleur_principal]

--Coordonnées des autres bailleurs
[nom_qualite_part_bailleur_1](jusqu''à 5) [prenom_qualite_part_bailleur_1](jusqu''à 5)
[civilite_qualite_part_bailleur_1](jusqu''à 5) [nom_complet_qualite_part_bailleur_1](jusqu''à 5)
[nom_qualite_pm_bailleur_1](jusqu''à 5) [prenom_qualite_pm_bailleur_1](jusqu''à 5)
[civilite_qualite_pm_bailleur_1](jusqu''à 5) [nom_complet_qualite_pm_bailleur_1](jusqu''à 5)
[nom_qualite_part_ou_pm_bailleur_1](jusqu''à 5) [prenom_qualite_part_ou_pm_bailleur_1](jusqu''à 5)
[civilite_qualite_part_ou_pm_bailleur_1](jusqu''à 5) [nom_complet_qualite_part_ou_pm_bailleur_1](jusqu''à 5)
[raison_sociale_bailleur_1](jusqu''à 5)
[denomination_bailleur_1](jusqu''à 5)
[siret_bailleur_1](jusqu''à 5)
[categorie_juridique_bailleur_1](jusqu''à 5)
[numero_bailleur_1](jusqu''à 5)
[adresse_bailleur_1_sdl](jusqu''à 5)
[adresse_bailleur_1](jusqu''à 5)    [voie_bailleur_1](jusqu''à 5)
[complement_bailleur_1](jusqu''à 5)
[lieu_dit_bailleur_1](jusqu''à 5)    [bp_bailleur_1](jusqu''à 5)
[code_postal_bailleur_1](jusqu''à 5)    [localite_bailleur_1](jusqu''à 5)
[cedex_bailleur_1](jusqu''à 5)
[pays_bailleur_1](jusqu''à 5) [division_territoriale_bailleur_1](jusqu''à 5)
[date_naissance_bailleur_1]
[lieu_naissance_bailleur_1]
[email_bailleur_1]
[coordonnees_telephonique_bailleur_1]

-- CORRESPONDANT : destinataire du courrier. Il est le délégataire ou le pétitionnaire principal
[nom_qualite_part_correspondant] [prenom_qualite_part_correspondant]
[civilite_qualite_part_correspondant] [nom_complet_qualite_part_correspondant]
[nom_qualite_pm_correspondant] [prenom_qualite_pm_correspondant]
[civilite_qualite_pm_correspondant] [nom_complet_qualite_pm_correspondant]
[nom_qualite_part_ou_pm_correspondant] [prenom_qualite_part_ou_pm_correspondant]
[civilite_qualite_part_ou_pm_correspondant] [nom_complet_qualite_part_ou_pm_correspondant]
[nom_correspondant] (Déprécié, à ne plus utiliser)
[raison_sociale_correspondant]
[denomination_correspondant]
[siret_correspondant]
[categorie_juridique_correspondant]
[numero_correspondant]
[adresse_correspondant_sdl]
[adresse_correspondant]    [voie_correspondant]    [complement_correspondant]
[lieu_dit_correspondant]    [bp_correspondant]
[code_postal_correspondant]    [ville_correspondant]    [cedex_correspondant]
[pays_correspondant] [division_territoriale_correspondant] 
[date_naissance_correspondant]
[lieu_naissance_correspondant]
[email_correspondant]
[coordonnees_telephonique_correspondant]
[notification_correspondant]

-- Coordonnées du propriétaire
[nom_qualite_part_proprietaire] [prenom_qualite_part_proprietaire]
[civilite_qualite_part_proprietaire] [nom_complet_qualite_part_proprietaire]
[nom_qualite_pm_proprietaire] [prenom_qualite_pm_proprietaire]
[civilite_qualite_pm_proprietaire] [nom_complet_qualite_pm_proprietaire]
[nom_qualite_part_ou_pm_proprietaire] [prenom_qualite_part_ou_pm_proprietaire]
[civilite_qualite_part_ou_pm_proprietaire] [nom_complet_qualite_part_ou_pm_proprietaire]
[raison_sociale_proprietaire]
[denomination_proprietaire]
[siret_proprietaire]
[categorie_juridique_proprietaire]
[numero_proprietaire]
[adresse_proprietaire_sdl]
[adresse_proprietaire]    [voie_proprietaire]    [complement_proprietaire]
[lieu_dit_proprietaire]    [bp_proprietaire]
[code_postal_proprietaire]    [localite_proprietaire]    [cedex_proprietaire]
[pays_proprietaire] [division_territoriale_proprietaire]
[date_naissance_proprietaire]
[lieu_naissance_proprietaire]
[email_proprietaire]
[coordonnees_telephonique_proprietaire]
[notification_proprietaire]

-- Coordonnées du concepteur-paysagiste
[nom_qualite_part_paysagiste] [prenom_qualite_part_paysagiste]
[civilite_qualite_part_paysagiste] [nom_complet_qualite_part_paysagiste]
[nom_qualite_pm_paysagiste] [prenom_qualite_pm_paysagiste]
[civilite_qualite_pm_paysagiste] [nom_complet_qualite_pm_paysagiste]
[nom_qualite_part_ou_pm_paysagiste] [prenom_qualite_part_ou_pm_paysagiste]
[civilite_qualite_part_ou_pm_paysagiste] [nom_complet_qualite_part_ou_pm_paysagiste]
[raison_sociale_paysagiste]
[denomination_paysagiste]
[siret_paysagiste]
[categorie_juridique_paysagiste]
[numero_paysagiste]
[adresse_paysagiste_sdl]
[adresse_paysagiste]    [voie_paysagiste]    [complement_paysagiste]
[lieu_dit_paysagiste]    [bp_paysagiste]
[code_postal_paysagiste]    [localite_paysagiste]    [cedex_paysagiste]
[pays_paysagiste] [division_territoriale_paysagiste]
[date_naissance_paysagiste]
[lieu_naissance_paysagiste]
[email_paysagiste]
[coordonnees_telephonique_paysagiste]

-- Coordonnées de l''architecte législation connexe
[nom_qualite_part_architecte_lc] [prenom_qualite_part_architecte_lc]
[civilite_qualite_part_architecte_lc] [nom_complet_qualite_part_architecte_lc]
[nom_qualite_pm_architecte_lc] [prenom_qualite_pm_architecte_lc]
[civilite_qualite_pm_architecte_lc] [nom_complet_qualite_pm_architecte_lc]
[nom_qualite_part_ou_pm_architecte_lc] [prenom_qualite_part_ou_pm_architecte_lc]
[civilite_qualite_part_ou_pm_architecte_lc] [nom_complet_qualite_part_ou_pm_architecte_lc]
[raison_sociale_architecte_lc]
[denomination_architecte_lc]
[siret_architecte_lc]
[categorie_juridique_architecte_lc]
[numero_architecte_lc]
[adresse_architecte_lc_sdl]
[adresse_architecte_lc]    [voie_architecte_lc]    [complement_architecte_lc]
[lieu_dit_architecte_lc]    [bp_architecte_lc]
[code_postal_architecte_lc]    [localite_architecte_lc]    [cedex_architecte_lc]
[pays_architecte_lc] [division_territoriale_architecte_lc]
[date_naissance_architecte_lc]
[lieu_naissance_architecte_lc]
[email_architecte_lc]
[coordonnees_telephonique_architecte_lc]
[num_inscription_architecte_lc]
[nom_cabinet_architecte_lc]
[conseil_regional_architecte_lc]
[titre_obt_diplo_spec_architecte_lc]
[date_obt_diplo_spec_architecte_lc]
[lieu_obt_diplo_spec_architecte_lc]

-- Coordonnées de l''architecte (celui dans les données techniques)
[nom_complet_architecte]
[adresse_architecte_sdl]
[adresse_architecte]
[email_architecte]
[fax_architecte]
[telephone_architecte]
[num_inscription_architecte]
[nom_cabinet_architecte]
[conseil_regional_architecte]
[titre_obt_diplo_spec_architecte]
[date_obt_diplo_spec_architecte]
[lieu_obt_diplo_spec_architecte]

--Dates importantes du dossier d''instruction
[date_affichage]
[date_depot_dossier]
[date_completude]
[date_dernier_depot]
[date_decision_dossier]
[date_limite_dossier]
[date_achevement_dossier]
[date_conformite_dossier]
[date_notification_delai_dossier]
[date_decision_da]
[date_notification_incompletude]

--Noms des signataires
[agrement_signataire],
[visa_signataire],
[visa_signataire_2]
[visa_signataire_3]
[visa_signataire_4]
[arrete_signataire]
[signature_signataire]
[signature_signataire_ss_qualite]
[chef_division]
[chef_direction]
[libelle_direction]
[description_direction]

--Données générales des données techniques
[co_projet_desc_donnees_techniques]    [am_projet_desc_donnees_techniques]
[dm_projet_desc_donnees_techniques]    [ope_proj_desc_donnees_techniques]
[projet_desc_donnees_techniques]
[co_tot_log_nb_donnees_techniques]    [co_statio_place_nb_donnees_techniques]
[am_lot_max_nb_donnees_techniques]    [am_lot_max_shon_donnees_techniques]
-- Les données techniques suivantes concernent le tableau des surfaces
-- Elles récupèrent les valeurs du tableau composé des sous-destinations si au
-- moins une valeur de celui-ci est saisie
[su_cstr_shon_tot_donnees_techniques]    [su_demo_shon_tot_donnees_techniques]
[tab_surface_donnees_techniques]
[su_tot_shon_tot_donnees_techniques]

--Données techniques des AT
[at_type_travaux]
[at_effectif_public_total]
[at_categorie_etablissement]
[at_type_etablissement]

-- Données techniques pour les DPC
[dpc_type]
[dpc_moda_cess_prix]

-- Données techniques pour une DIA
[dia_mod_cess_prix_vente] (Prix de vente en lettres et chiffres)
[dia_mod_cess_prix_vente_num] (Prix de vente en chiffres)
[dia_mod_cess_prix_vente_mob] (Prix de vente mobilier)
[dia_mod_cess_prix_vente_cheptel] (Prix de vente cheptel)
[dia_mod_cess_prix_vente_recol] (Prix de vente récultes)
[dia_mod_cess_prix_vente_autre] (Prix de vente autres)
[dia_mod_cess_commi_mnt] (Montant de la commmission)
[dia_acquereur_nom_prenom] (Nom et prénom de l''acquéreur)
[dia_acquereur_adresse_sdl] (Adresse de l''acquéreur avec saut de ligne)
[dia_acquereur_adresse] (Adresse de l''acquéreur sans saut de ligne)
[dia_esti_prix_france_dom] (Estimation du prix de vente par France Domaine)
[dia_prop_collectivite] (Proposition d''acquisition de la collectivité)
[dia_entree_jouissance_type] (Type de l''entrée en jouissance)
[dia_entree_jouissance_date] (Date de l''entrée en jouissance)
[dia_entree_jouissance_date_effet] (Date d''effet de l''entrée en jouissance)
[dia_entree_jouissance_com] (Commentaire de l''entrée en jouissance)
[dia_remise_bien_date_effet] (Date d''effet de la remise du bien)
[dia_remise_bien_com] (Commentaire de la remise du bien)
[prix_propose_commune_acquisition_bien_preempte] (Estimation du prix de vente par France Domaine si renseigné sinon Prix de vente en chiffres)

-- Données techniques pour les MH
[mh_design_appel_denom] : Appellation / dénomination
[mh_design_type_protect] : Type de protection
[mh_design_elem_prot] : Élément(s) protégé(s)
[mh_design_ref_merimee_palissy] : Référence Mérimée ou Palissy
[mh_loc_denom] : Dénomination de l’immeuble

--Bordereau envoi au maire
[objet_bordereau_envoi_maire]

--Données techniques du contentieux
[ctx_objet_recours_libelle]
[ctx_reference_sagace]
[ctx_nature_travaux_infra_om_html]
[ctx_synthese_nti]
[ctx_article_non_resp_om_html]
[ctx_synthese_anr]
[ctx_reference_parquet]
[ctx_element_taxation]
[ctx_infraction]
[ctx_regularisable]
[ctx_reference_courrier]
[date_audience_ctx]
[date_ajournement_ctx]', 'sql', NULL, NULL);


--
-- Data for Name: om_etat; Type: TABLE DATA; Schema: openads; Owner: postgres
--

INSERT INTO om_etat (om_etat, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, se_font, se_couleurtexte, margeleft, margetop, margeright, margebottom, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (15, 1, 'bordereau_decisions', 'Bordereau d''envoi des décisions', true, 'L', 'A4', 'pixel.png', 58, 7, '<p style="text-align: left;"><span style="font-size: 15px;"><span style="font-family: helvetica;"><span style="font-weight: bold;">Bordereau&nbsp;d''envoi&nbsp;des&nbsp;décisions</span></span></span></p>', 5, 7, 100, 10, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: helvetica;">No&nbsp;commune&nbsp;:&nbsp;&departement&nbsp;&commune&nbsp;&ville</span></span></p><br /><span class="mce_sousetat" id="bordereau_decisions">bordereau_decisions</span><br />', 18, 'helvetica', '0-0-0', 10, 10, 10, 10, NULL, 12, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_etat (om_etat, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, se_font, se_couleurtexte, margeleft, margetop, margeright, margebottom, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (17, 1, 'bordereau_controle_legalite', 'Bordereau d''envoi des contrôles de légalité', true, 'L', 'A4', 'pixel.png', 58, 7, '<p style="text-align: left;"><span style="font-size: 15px;"><span style="font-family: helvetica;"><span style="font-weight: bold;">Bordereau&nbsp;d''envoi&nbsp;des&nbsp;contrôles&nbsp;de&nbsp;légalité</span></span></span></p>', 5, 7, 125, 10, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: helvetica;">No&nbsp;commune&nbsp;:&nbsp;&departement&nbsp;&commune&nbsp;&ville</span></span></p><br /><span class="mce_sousetat" id="bordereau_controle_legalite">bordereau_controle_legalite</span><br />', 18, 'helvetica', '0-0-0', 10, 10, 10, 10, NULL, 12, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_etat (om_etat, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, se_font, se_couleurtexte, margeleft, margetop, margeright, margebottom, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (21, 1, 'commission_ordre_jour', 'Commission - Ordre du jour', true, 'L', 'A4', 'pixel.png', 58, 7, '<p style="text-align: right;"><span style="font-size: 8px;"><span style="font-family: helvetica;"><span style="font-weight: bold;">&ville&nbsp;le&nbsp;&jourSemaine</span></span></span></p>', 5, 7, 279, 10, '0', '<p style="text-align: center;"><span style="font-size: 12px;"><span style="font-family: helvetica;">Direction&nbsp;de&nbsp;l''Aménagement&nbsp;Durable&nbsp;et&nbsp;de&nbsp;l''Urbanisme<br/>ORDRE&nbsp;DU&nbsp;JOUR&nbsp;DE&nbsp;LA&nbsp;[libelle_commission]&nbsp;DU&nbsp;[date_commission]<br/>[lieu_salle_commission]&nbsp;à&nbsp;[heure_commission]<br/>[lieu_adresse_ligne1_commission]&nbsp;[lieu_adresse_ligne2_commission]</span></span></p><br /><span class="mce_sousetat" id="commission_ordre_jour">commission_ordre_jour</span><br />', 27, 'helvetica', '0-0-0', 10, 10, 10, 10, NULL, 12, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_etat (om_etat, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, se_font, se_couleurtexte, margeleft, margetop, margeright, margebottom, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (16, 1, 'bordereau_avis_maire_prefet', 'Bordereau d''envoi des avis du Maire au Préfet', true, 'L', 'A4', 'pixel.png', 58, 7, '<p style="text-align: left;"><span style="font-size: 15px;"><span style="font-family: helvetica;"><span style="font-weight: bold;">Bordereau&nbsp;d''envoi&nbsp;des&nbsp;avis&nbsp;du&nbsp;Maire&nbsp;au&nbsp;Préfet</span></span></span></p>', 5, 7, 125, 10, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: helvetica;">No&nbsp;commune&nbsp;:&nbsp;&departement&nbsp;&commune&nbsp;&ville</span></span></p><br /><span class="mce_sousetat" id="bordereau_avis_maire_prefet">bordereau_avis_maire_prefet</span><br />', 18, 'helvetica', '0-0-0', 10, 10, 10, 10, NULL, 12, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_etat (om_etat, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, se_font, se_couleurtexte, margeleft, margetop, margeright, margebottom, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (23, 1, 'registre_dossiers_affichage_reglementaire', 'Registre des dossiers - Affichage règlementaire', true, 'L', 'A4', 'pixel.png', 58, 7, '<p style="text-align: left;"><span style="font-size: 15px;"><span style="font-family: helvetica;"><span style="font-weight: bold;">Registre&nbsp;des&nbsp;dossiers&nbsp;en&nbsp;cours</span></span></span></p>', 10, 10, 138, 10, '0', '<p style="text-align: right;"><span style="font-size: 10px;"><span style="font-family: helvetica;"><span style="font-weight: bold;">&departement&nbsp;&commune&nbsp;-&nbsp;Ville&nbsp;&delaville</span></span></span></p><br /><span class="mce_sousetat" id="registre_dossiers_affichage_reglementaire">registre_dossiers_affichage_reglementaire</span><br />', 18, 'helvetica', '0-0-0', 10, 10, 10, 10, NULL, 12, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_etat (om_etat, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, se_font, se_couleurtexte, margeleft, margetop, margeright, margebottom, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (20, 1, 'commission_proposition_ordre_jour', 'Commission - Proposition d''ordre du jour', true, 'L', 'A4', 'pixel.png', 58, 7, '<p style="text-align: right;"><span style="font-size: 8px;"><span style="font-family: helvetica;"><span style="font-weight: bold;">&ville&nbsp;le&nbsp;&jourSemaine</span></span></span></p>', 5, 7, 279, 10, '0', '<p style="text-align: center;"><span style="font-size: 12px;"><span style="font-family: helvetica;">Direction&nbsp;de&nbsp;l''Aménagement&nbsp;Durable&nbsp;et&nbsp;de&nbsp;l''Urbanisme<br/>ORDRE&nbsp;DU&nbsp;JOUR&nbsp;DE&nbsp;LA&nbsp;[libelle_commission]&nbsp;DU&nbsp;[date_commission]<br/>[lieu_salle_commission]&nbsp;à&nbsp;[heure_commission]<br/>[lieu_adresse_ligne1_commission]&nbsp;[lieu_adresse_ligne2_commission]</span></span></p><br /><span class="mce_sousetat" id="commission_proposition_ordre_jour">commission_proposition_ordre_jour</span><br />', 27, 'helvetica', '0-0-0', 10, 10, 10, 10, NULL, 12, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_etat (om_etat, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, se_font, se_couleurtexte, margeleft, margetop, margeright, margebottom, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (18, 1, 'bordereau_courriers_signature_maire', 'Bordereau d''envoi de courriers signature Maire', true, 'L', 'A4', 'pixel.png', 58, 7, '<p style="text-align: left;"><span style="font-size: 15px;"><span style="font-family: helvetica;"><span style="font-weight: bold;">Bordereau&nbsp;d''envoi&nbsp;des&nbsp;courriers&nbsp;à&nbsp;la&nbsp;signature&nbsp;du&nbsp;Maire</span></span></span></p>', 5, 7, 155, 10, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: helvetica;">No&nbsp;commune&nbsp;:&nbsp;&departement&nbsp;&commune&nbsp;&ville</span></span></p><br /><span class="mce_sousetat" id="bordereau_courriers_signature_maire">bordereau_courriers_signature_maire</span><br />', 18, 'helvetica', '0-0-0', 10, 10, 10, 10, NULL, 12, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_etat (om_etat, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, se_font, se_couleurtexte, margeleft, margetop, margeright, margebottom, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (22, 1, 'commission_compte_rendu', 'Commission - Compte-rendu', true, 'L', 'A4', 'pixel.png', 58, 7, '<p style="text-align: right;"><span style="font-size: 8px;"><span style="font-family: helvetica;"><span style="font-weight: bold;">&ville&nbsp;le&nbsp;&jourSemaine</span></span></span></p>', 5, 7, 279, 10, '0', '
<p style=''text-align: center;''><span style=''font-size: 12px;''><span style=''font-family: helvetica;''>Direction de l''Aménagement Durable et de l''Urbanisme<br />COMPTE RENDU DE LA [libelle_commission] DU [date_commission]<br />[lieu_salle_commission] à [heure_commission]<br />[lieu_adresse_ligne1_commission] [lieu_adresse_ligne2_commission]</span></span></p>
<p><br /><span id=''commission_compte_rendu'' class=''mce_sousetat''>commission_compte_rendu</span></p>
', 27, 'helvetica', '0-0-0', 10, 10, 10, 10, NULL, 12, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_etat (om_etat, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, se_font, se_couleurtexte, margeleft, margetop, margeright, margebottom, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (7, 1, 'dossier', 'Récapitulatif Dossier d''instruction', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>RECAPITULATIF&nbsp;AU&nbsp;&aujourdhui<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-style: italic;">Surface hors- oeuvre      brute : <span style="font-weight: bold;">[shob] m2</span>     nette : <span style="font-weight: bold;">[shon] m2</span>   hauteur :   <span style="font-weight: bold;">[hauteur] m </span><br />Nb de logements : <span style="font-weight: bold;">[co_tot_log_nb_donnees_techniques]</span>     Nb de bâtiments : <span style="font-weight: bold;">[batiment_nombre]</span><br /><br />Travaux       : <span style="font-weight: bold;">[travaux]</span><br /><br />Date de dépot : <span style="font-weight: bold;">[date_depot_dossier]</span><br />Date limite de notification : <span style="font-weight: bold;">[date_notification_delai]</span><br />Date limite d''instruction: <span style="font-weight: bold;">[date_limite_dossier]</span></span></span></span></p>
<p><br /><span id="instruction" class="mce_sousetat">instruction</span><br /><span id="consultation" class="mce_sousetat">consultation</span></p>
<p><span id="commission" class="mce_sousetat">Liste des commissions / dossier</span></p>
<p> </p>
 Surface totale : [su_tot_shon_tot_donnees_techniques] ', 7, 'helvetica', '0-0-0', 10, 10, 10, 10, NULL, 12, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_etat (om_etat, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, se_font, se_couleurtexte, margeleft, margetop, margeright, margebottom, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (26, 1, 'communaute_bordereau_envoi_maire', 'Bordereau d''envoi au maire', true, 'P', 'A4', 'logo_communaute.png', 10, 10, '<table border=''1'' cellspacing=''0'' cellpadding=''10''><tbody><tr><td style=''text-align: center;''><span style=''font-family: helvetica; font-size: 24pt;''>bordereau d''envoi</span></td></tr><tr><td><p style=''text-align: center;''><span style=''font-family: times new roman,times; font-size: 12pt; font-weight: bold;''>dossier n° [libelle_dossier]</span></p></td></tr><tr><td><p><span style=''font-family: times new roman,times; font-size: 12pt;''>date de dépôt : <span style=''font-weight: bold;''>[date_depot_dossier]</span></span><br /><span style=''font-family: times new roman,times; font-size: 12pt;''>demandeur : <span style=''font-weight: bold;''>[nom_petitionnaire_principal]</span></span><br /><span style=''font-family: times new roman,times; font-size: 12pt;''>pour : <span style=''font-weight: bold;''>[libelle_datd]</span></span></p></td></tr><tr><td><p><span style=''font-family: times new roman,times; font-size: 12pt;''>Monsieur le Maire de &ville</span><br /><span style=''font-family: times new roman,times; font-size: 12pt;''>&adresse_direction_urbanisme</span></p></td></tr></tbody></table>', 70, 15, 130, 5, '0', '<p style=''text-align: justify;''><span style=''font-size: 12pt; font-family: times new roman,times;''>Le &amp;jourSemaine</span><br /></p><p style=''text-align: justify;''><span style=''font-size: 12pt; font-family: times new roman,times;''><span style=''font-weight: bold;''>Objet :</span> [objet_bordereau_envoi_maire]</span></p><table><tbody><tr><td style=''width: 120px;''><span style=''font-weight: bold; font-size: 12pt; font-family: times new roman,times;''>affaire suivie par :</span></td><td><span style=''font-size: 12pt; font-family: times new roman,times;''>[nom_instructeur]</span></td></tr><tr><td style=''width: 120px;''> </td><td><span style=''font-size: 12pt; font-family: times new roman,times;''>[telephone_instructeur]</span></td></tr><tr><td style=''width: 120px;''> </td><td><span style=''font-size: 12pt; font-family: times new roman,times;''>[email_instructeur]</span></td></tr></tbody></table><p> </p><p><span style=''font-family: times new roman,times; font-size: 12pt;''><span style=''font-weight: bold;''>Date limite d''instruction :</span> [date_limite_dossier]</span><br /><span style=''font-family: times new roman,times; font-size: 12pt;''><span style=''font-weight: bold;''>Date limite avant laquelle le courrier doit être notifié au demandeur :</span> [date_notification_delai_dossier]</span></p><p> </p><p style=''text-align: justify;''><span style=''font-size: 12pt; font-family: times new roman,times;''>Description des travaux : [projet_desc_donnees_techniques] [projet_desc_donnees_techniques] [projet_desc_donnees_techniques]</span></p><p> </p><p style=''text-align: left;''><span style=''font-size: 12pt; font-family: times new roman,times;''>Sur un(des) terrain(s) situé(s) à :<br />[terrain_adresse_voie_numero_dossier] [terrain_adresse_voie_dossier]<br />[terrain_adresse_lieu_dit_dossier] [terrain_adresse_bp_dossier] [terrain_adresse_code_postal_dossier] [terrain_adresse_localite_dossier] [terrain_adresse_cedex_dossier]</span></p><p> </p><p style=''text-align: center;''><span style=''font-size: 12pt; font-family: times new roman,times;''>Le Chef de [libelle_direction]<br />[chef_direction]</span></p><p> </p><p style=''text-align: center;''><span style=''font-size: 12pt; font-family: times new roman,times;''><em>N.B. : merci de nous informer rapidement de la date de signature de la décision<br />et de la date de sa notification au demandeur.</em></span></p>', 29, 'helvetica', '0-0-0', 10, 10, 10, 10, NULL, 12, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_etat (om_etat, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, se_font, se_couleurtexte, margeleft, margetop, margeright, margebottom, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (9, 1, 'consultation_avec_avis_attendu', 'Consultation - Demande d''avis', true, 'P', 'A4', 'logopdf.png', 8, 9, '<p style="text-align: left;"><span style="font-size: 11px;"><span style="font-family: helvetica;"><span style="font-weight: bold;">[libelle_service]<br/>[adresse_service]<br/>[adresse2_service]<br/>[cp_service]&nbsp;[ville_service]</span></span></span></p>', 95, 31, 100, 7, '0', '<p style="text-align: justify;"><span style="font-size: 9px;"><span style="font-family: helvetica;"><span style="font-weight: bold;">[libelle_datd]</span><br/>Avis&nbsp;sollicité<br/>____________________________________________________________________________________________________________<br/>&nbsp;&nbsp;Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-weight: bold;">&departement&nbsp;&commune&nbsp;&nbsp;[libelle_dossier]</span>&nbsp;&nbsp;déposé&nbsp;le&nbsp;<span style="font-weight: bold;">[date_depot_dossier]</span><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-weight: bold;">[civilite_demandeur]&nbsp;[nom_demandeur]</span><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;demeurant&nbsp;à&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[adresse_demandeur]&nbsp;&nbsp;&nbsp;[code_postal_demandeur]&nbsp;-&nbsp;[ville_demandeur]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;société&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[societe_demandeur]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-weight: bold;">[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;-&nbsp;&nbsp;[terrain_adresse_localite_dossier]</span><br/>____________________________________________________________________________________________________________<br/>&nbsp;&nbsp;PJ&nbsp;en&nbsp;communication&nbsp;:&nbsp;1&nbsp;exemplaire&nbsp;du&nbsp;dossier<br/><br/><br/><br/><br/><br/>Le&nbsp;respect&nbsp;de&nbsp;la&nbsp;réglementation&nbsp;en&nbsp;vigueur,&nbsp;notamment&nbsp;en&nbsp;matière&nbsp;de&nbsp;délai&nbsp;de&nbsp;réponse&nbsp;ou&nbsp;de&nbsp;décision&nbsp;de&nbsp;l''administration,&nbsp;me&nbsp;conduit&nbsp;à&nbsp;attirer&nbsp;votre&nbsp;attention&nbsp;sur&nbsp;le&nbsp;fait&nbsp;qu''en&nbsp;l&nbsp;absence&nbsp;de&nbsp;réponse&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;1&nbsp;mois&nbsp;à&nbsp;dater&nbsp;de&nbsp;la&nbsp;réception&nbsp;de&nbsp;la&nbsp;demande&nbsp;jointe,&nbsp;votre&nbsp;service&nbsp;est&nbsp;reputé&nbsp;émettre&nbsp;un&nbsp;avis&nbsp;favorable&nbsp;sur&nbsp;ladite&nbsp;demande.<br/><br/>Il&nbsp;conviendra&nbsp;cependant,&nbsp;même&nbsp;dans&nbsp;cette&nbsp;éventualité,&nbsp;de&nbsp;me&nbsp;faire&nbsp;retour&nbsp;de&nbsp;l''exemplaire&nbsp;communiqué,&nbsp;dans&nbsp;les&nbsp;meilleurs&nbsp;délais.<br/>&nbsp;<br/>Je&nbsp;vous&nbsp;prie&nbsp;d''agréer,&nbsp;Monsieur,&nbsp;l''expression&nbsp;de&nbsp;ma&nbsp;considération&nbsp;distinguée.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville,&nbsp;le&nbsp;[date_envoi_dossier]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;le&nbsp;Maire&nbsp;&delaville<br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nom<br/><br/><br/><br/>RÉFÉRENCES<br/>PJ&nbsp;EN&nbsp;RETOUR&nbsp;:&nbsp;l''exemplaire&nbsp;du&nbsp;dossier&nbsp;communiqué</span></span></p><br />', 26, 'helvetica', '9-164-183', 10, 10, 10, 10, NULL, 12, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_etat (om_etat, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, se_font, se_couleurtexte, margeleft, margetop, margeright, margebottom, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (10, 1, 'consultation_pour_information', 'Consultation - Pour information', true, 'P', 'A4', 'logopdf.png', 8, 9, '<p style="text-align: left;"><span style="font-size: 11px;"><span style="font-family: helvetica;"><span style="font-weight: bold;">[libelle_service]<br/>[adresse_service]<br/>[adresse2_service]<br/>[cp_service]&nbsp;[ville_service]</span></span></span></p>', 95, 31, 100, 7, '0', '<p style="text-align: justify;"><span style="font-size: 9px;"><span style="font-family: helvetica;"><span style="font-weight: bold;">[libelle_datd]</span><br/>Pour&nbsp;information<br/>____________________________________________________________________________________________________________<br/>&nbsp;&nbsp;Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-weight: bold;">&departement&nbsp;&commune&nbsp;&nbsp;[libelle_dossier]</span>&nbsp;&nbsp;déposé&nbsp;le&nbsp;<span style="font-weight: bold;">[date_depot_dossier]</span><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-weight: bold;">[civilite_demandeur]&nbsp;[nom_demandeur]</span><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;demeurant&nbsp;à&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[adresse_demandeur]&nbsp;&nbsp;&nbsp;[code_postal_demandeur]&nbsp;-&nbsp;[ville_demandeur]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;société&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[societe_demandeur]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-weight: bold;">[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;-&nbsp;&nbsp;[terrain_adresse_localite_dossier]</span><br/>____________________________________________________________________________________________________________<br/>&nbsp;&nbsp;PJ&nbsp;en&nbsp;communication&nbsp;:&nbsp;1&nbsp;exemplaire&nbsp;du&nbsp;dossier<br/><br/><br/><br/><br/><br/>Le&nbsp;respect&nbsp;de&nbsp;la&nbsp;réglementation&nbsp;en&nbsp;vigueur,&nbsp;notamment&nbsp;en&nbsp;matière&nbsp;de&nbsp;délai&nbsp;de&nbsp;réponse&nbsp;ou&nbsp;de&nbsp;décision&nbsp;de&nbsp;l''administration,&nbsp;me&nbsp;conduit&nbsp;à&nbsp;attirer&nbsp;votre&nbsp;attention&nbsp;sur&nbsp;le&nbsp;fait&nbsp;qu''en&nbsp;l&nbsp;absence&nbsp;de&nbsp;réponse&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;1&nbsp;mois&nbsp;à&nbsp;dater&nbsp;de&nbsp;la&nbsp;réception&nbsp;de&nbsp;la&nbsp;demande&nbsp;jointe,&nbsp;votre&nbsp;service&nbsp;est&nbsp;reputé&nbsp;émettre&nbsp;un&nbsp;avis&nbsp;favorable&nbsp;sur&nbsp;ladite&nbsp;demande.<br/><br/>Il&nbsp;conviendra&nbsp;cependant,&nbsp;même&nbsp;dans&nbsp;cette&nbsp;éventualité,&nbsp;de&nbsp;me&nbsp;faire&nbsp;retour&nbsp;de&nbsp;l''exemplaire&nbsp;communiqué,&nbsp;dans&nbsp;les&nbsp;meilleurs&nbsp;délais.<br/><br/>Je&nbsp;vous&nbsp;prie&nbsp;d''agréer,&nbsp;[civilite_demandeur]&nbsp;[nom_demandeur],&nbsp;l''expression&nbsp;de&nbsp;ma&nbsp;considération&nbsp;distinguée.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br/><br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville,&nbsp;le&nbsp;[date_envoi_dossier]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;le&nbsp;Maire&nbsp;&delaville<br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nom<br/><br/><br/><br/>RÉFÉRENCES<br/>PJ&nbsp;EN&nbsp;RETOUR&nbsp;:&nbsp;l''exemplaire&nbsp;du&nbsp;dossier&nbsp;communiqué</span></span></p><br />', 26, 'helvetica', '9-164-183', 10, 10, 10, 10, NULL, 12, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_etat (om_etat, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, se_font, se_couleurtexte, margeleft, margetop, margeright, margebottom, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (11, 1, 'consultation_pour_conformite', 'Consultation - Pour conformité', true, 'P', 'A4', 'logopdf.png', 8, 9, '<p style="text-align: left;"><span style="font-size: 11px;"><span style="font-family: helvetica;"><span style="font-weight: bold;">[libelle_service]<br/>[adresse_service]<br/>[adresse2_service]<br/>[cp_service]&nbsp;[ville_service]</span></span></span></p>', 95, 31, 100, 7, '0', '
<p><span class=''mce_maj'' style=''font-family: helvetica; font-size: 10pt; font-weight: bold;''>[libelle_datd]</span><br /><span style=''text-decoration: underline;''><span style=''font-family: helvetica; font-size: 10pt;''>pour Avis demandé - pour conformité                                                                                                                                    </span></span></p>
<p> </p>
<p><span style=''font-family: helvetica; font-size: 10pt;''><span style=''text-decoration: underline;''>Objet</span> : Demande d''avis sur DOSSIER N° : <span style=''font-weight: bold;''>[libelle_dossier]</span></span></p>
<p><br /><span style=''font-family: helvetica; font-size: 10pt;''><span style=''text-decoration: underline;''>P.J</span> : 1 dossier (<span class=''mce_maj'' style=''font-weight: bold;''>à retourner, accompagné du présent document</span> <span class=''mce_min''>DANS UN DéLAI DE [delai_service]</span> [delai_type_service])</span></p>
<p> </p>
<p><span style=''font-family: helvetica; font-size: 10pt;''>Date limite de <span style=''font-weight: bold;''>réponse : [delai_service]</span> [delai_type_service] à dater de la réception de ce courrier.</span></p>
<p><span style=''font-family: helvetica; font-size: 10pt;''>Date limite d''instruction du dossier : [date_limite_dossier].</span></p>
<p> </p>
<p> </p>
<p><span class=''mce_maj'' style=''font-family: helvetica; font-size: 10pt;''><span style=''text-decoration: underline;''><span style=''font-weight: bold;''>Observations</span></span> :</span></p>
<p><span style=''font-family: helvetica; font-size: 10pt;''>Veuillez nous faire parvenir vos observations sur ce projet dans le délai visé ci-dessus.</span></p>
<p> </p>
<table border=''1'' cellpadding=''5''>
<tbody>
<tr>
<td style=''text-align: center;'' colspan=''2''><span style=''font-size: 12pt; font-family: helvetica;''>Avis de<span class=''mce_maj'' style=''font-weight: bold;''> [libelle_service]</span></span></td>
</tr>
<tr>
<td>
<p style=''text-align: center;''><span style=''font-family: helvetica;''> </span></p>
<p style=''text-align: center;''><span class=''mce_maj'' style=''font-size: 12pt; font-family: helvetica;''>favorable               défavorable</span></p>
<p style=''margin-bottom: 0cm; text-align: center;''><span style=''font-size: xx-small; font-family: helvetica;''><em><span style=''font-size: xx-small;''>(rayer la mention inutile)</span></em></span></p>
<br />
<p style=''text-align: center;''><span style=''font-family: helvetica;''><span style=''font-size: 10pt;''>est donné au projet de : <span class=''mce_maj''><span class=''field_value pre mce_min''><span class=''field_value pre''><span class=''field_value pre''><span class=''field_value pre''><span class=''field_value pre''><span class=''field_value pre''><span class=''field_value pre''> [projet_desc_donnees_techniques] </span></span></span></span></span></span></span></span></span></span></p>
<p style=''text-align: center;''><span style=''font-family: helvetica;''>     </span></p>
</td>
<td rowspan=''2''>
<p><span style=''font-family: helvetica; font-size: 10pt;''><span class=''mce_maj'' style=''text-decoration: underline;''>Observations éventuelles</span> :</span><br /><br /></p>
<p><span style=''font-family: helvetica;''> </span></p>
<p><span style=''font-family: helvetica;''> </span></p>
<p><span style=''font-family: helvetica;''> </span></p>
<p><span style=''font-family: helvetica;''> </span></p>
<p><span style=''font-family: helvetica;''> </span></p>
<p><span style=''font-family: helvetica;''> </span></p>
<p><span style=''font-family: helvetica;''> </span></p>
<p><span style=''font-family: helvetica;''> </span></p>
</td>
</tr>
<tr>
<td>
<p><span style=''font-family: helvetica;''> </span></p>
<p><span style=''font-size: 10pt; font-family: helvetica;''>Date de réception par le service : .................................</span></p>
<p><span style=''font-size: 10pt; font-family: helvetica;''>Signature :</span></p>
<p><span style=''font-family: helvetica;''> </span></p>
<p><span style=''font-family: helvetica;''> </span></p>
</td>
</tr>
</tbody>
</table>

 Pétitionnaire : [nom_petitionnaire_principal] 
 Surface totale : [su_tot_shon_tot_donnees_techniques] ', 26, 'helvetica', '9-164-183', 10, 10, 10, 10, NULL, 12, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_etat (om_etat, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, se_font, se_couleurtexte, margeleft, margetop, margeright, margebottom, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (13, 1, 'rapport_instruction', 'Rapport d''instruction', true, 'P', 'A4', 'pixel.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 20px;"><span style="font-family: arial;"><span style="font-weight: bold;">&ville<br/>[libelle_datd]&nbsp;:&nbsp;[etat_dossier]</span></span></span></p>', 109, 16, 0, 10, '0', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">DOSSIER&nbsp;N&nbsp;[dossier_instruction_rapport_instruction]<br/>NOM&nbsp;du&nbsp;DEMANDEUR&nbsp;TITULAIRE<br/>[code_civilite]&nbsp;[particulier_nom_demandeur]&nbsp;[particulier_prenom_demandeur]&nbsp;[personne_morale_nom_demandeur]&nbsp;[personne_morale_nom_demandeur]<br/>[personne_morale_denomination_demandeur]&nbsp;[personne_morale_raison_sociale_demandeur]&nbsp;[personne_morale_siret_demandeur]<br/><br/>ADRESSE&nbsp;DU&nbsp;DEMANDEUR&nbsp;TITULAIRE:&nbsp;[numero_demandeur]&nbsp;[voie_demandeur]&nbsp;[complement_demandeur]&nbsp;[lieu_dit_demandeur]&nbsp;-&nbsp;[code_postal_demandeur]&nbsp;[localite_demandeur]&nbsp;[cedex_demandeur]&nbsp;[bp_demandeur]<br/><br/>NATURE&nbsp;DES&nbsp;TRAVAUX:&nbsp;[libelle_datd]<br/><br/><br/>ADRESSE&nbsp;DES&nbsp;TRAVAUX:&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;-&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]&nbsp;[terrain_adresse_bp_dossier]<br/><br/>DESTIONATION&nbsp;en&nbsp;m2&nbsp;:&nbsp;[terrain_superficie_dossier]<br/><br/>[description_projet_rapport_instruction]<br/><br/>[analyse_reglementaire_rapport_instruction]<br/><br/>&rapport_instruction_consultation<br/><br/>[complement_rapport_instruction]<br/><br/>En&nbsp;CONSÉQUENCE,&nbsp;il&nbsp;est&nbsp;propose&nbsp;:&nbsp;[proposition_decision_rapport_instruction]<br/><br/>Fait&nbsp;le:&nbsp;&aujourdhui&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Vu&nbsp;le:<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Le&nbsp;technicien&nbsp;instructeur&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Le&nbsp;chef&nbsp;de&nbsp;subdivision<br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[chef_division]</span></span></p><br />
 Pétitionnaire : [nom_petitionnaire_principal] 
 Surface totale : [su_tot_shon_tot_donnees_techniques] ', 17, 'helvetica', '0-0-0', 10, 10, 10, 10, NULL, 12, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_etat (om_etat, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, se_font, se_couleurtexte, margeleft, margetop, margeright, margebottom, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (28, 1, 'ERP_ADS__PC__AR_CONSULTATION_OFFICIELLE', 'ACCUSE DE RECEPTION DE CONSULTATION OFFICIELLE', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_om_lettretype]<br/>Pour le dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">Accusé de réception automatique.<br/>______________________________________________________________________<br/></span>Le message ci-dessous a bien été reçu par le logiciel openARIA:<br/>Consultation&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[service_libelle]&nbsp;&nbsp;envoyé&nbsp;le&nbsp;[dossier_message_date_emission]<br/>La consultation originel est [dossier_message_originel_consultation]<br/></span></span></p>', 30, 'helvetica', '0-0-0', 10, 10, 10, 10, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);


--
-- Data for Name: om_lettretype; Type: TABLE DATA; Schema: openads; Owner: postgres
--

INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (20, 1, 'majoration_IGH', 'MAJORATION DE DELAI ET DEMANDE DE PIECES COMPLEMENTAIRES', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Madame,&nbsp;Monsieur,<br/><br/><br/>Vous&nbsp;avez&nbsp;déposé&nbsp;une&nbsp;demande&nbsp;de&nbsp;[libelle_datd],&nbsp;le&nbsp;[date_depot_dossier]&nbsp;pour&nbsp;un&nbsp;projet&nbsp;de&nbsp;[libelle_dat],&nbsp;situé&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;-&nbsp;&nbsp;[terrain_adresse_localite_dossier].<br/><br/>Le&nbsp;récépissé&nbsp;de&nbsp;dépôt&nbsp;de&nbsp;votre&nbsp;dossier&nbsp;indiquait&nbsp;qu''en&nbsp;cas&nbsp;de&nbsp;silence&nbsp;de&nbsp;l''Administration&nbsp;à&nbsp;l''expiration&nbsp;du&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;droit&nbsp;commun&nbsp;de&nbsp;trois&nbsp;mois,&nbsp;&nbsp;vous&nbsp;bénéficieriez&nbsp;d''un&nbsp;permis&nbsp;tacite.<br/><br/>Toutefois&nbsp;ce&nbsp;même&nbsp;récépissé&nbsp;vous&nbsp;informait&nbsp;également&nbsp;que,&nbsp;dans&nbsp;le&nbsp;mois&nbsp;suivant&nbsp;le&nbsp;dépôt&nbsp;&nbsp;de&nbsp;votre&nbsp;dossier,&nbsp;l''Administration&nbsp;pouvait&nbsp;vous&nbsp;écrire&nbsp;:<br/><br/>-soit&nbsp;pour&nbsp;vous&nbsp;avertir&nbsp;qu''un&nbsp;autre&nbsp;délai&nbsp;d''instruction&nbsp;est&nbsp;applicable,&nbsp;en&nbsp;vertu&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme<br/>-soit&nbsp;pour&nbsp;vous&nbsp;indiquer&nbsp;qu''il&nbsp;manque&nbsp;une&nbsp;ou&nbsp;plusieurs&nbsp;pièces&nbsp;à&nbsp;votre&nbsp;dossier<br/>-soit&nbsp;pour&nbsp;vous&nbsp;informer&nbsp;que&nbsp;votre&nbsp;projet&nbsp;correspond&nbsp;à&nbsp;un&nbsp;des&nbsp;cas&nbsp;où&nbsp;un&nbsp;permis&nbsp;tacite&nbsp;n''est&nbsp;pas&nbsp;possible.<br/><br/>Je&nbsp;vous&nbsp;informe&nbsp;que&nbsp;le&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;votre&nbsp;projet&nbsp;doit&nbsp;effectivement&nbsp;être&nbsp;modifié&nbsp;:<br/><br/>MODIFICATION&nbsp;DU&nbsp;DELAI&nbsp;D''INSTRUCTION&nbsp;DE&nbsp;LA&nbsp;DEMANDE&nbsp;DE&nbsp;PERMIS&nbsp;DE&nbsp;CONSTRUIRE&nbsp;:<br/><br/>Votre&nbsp;projet&nbsp;porte&nbsp;sur&nbsp;la&nbsp;construction&nbsp;d''un&nbsp;immeuble&nbsp;de&nbsp;grande&nbsp;hauteur&nbsp;tel&nbsp;que&nbsp;défini&nbsp;aux&nbsp;articles&nbsp;R122-2&nbsp;et&nbsp;R122-3&nbsp;du&nbsp;code&nbsp;de&nbsp;la&nbsp;Construction&nbsp;et&nbsp;de&nbsp;l''Habitation.<br/><br/>Conformément&nbsp;aux&nbsp;articles&nbsp;L123-1&nbsp;et&nbsp;R123-1&nbsp;du&nbsp;code&nbsp;de&nbsp;l''environnement,&nbsp;la&nbsp;construction&nbsp;d''un&nbsp;immeuble&nbsp;de&nbsp;grande&nbsp;hauteur&nbsp;est&nbsp;soumise&nbsp;à&nbsp;enquête&nbsp;publique.<br/><br/>Conformément&nbsp;&nbsp;à&nbsp;l''article&nbsp;R423-20&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;par&nbsp;exception&nbsp;à&nbsp;l''article&nbsp;R423-19&nbsp;du&nbsp;même&nbsp;code,&nbsp;le&nbsp;délai&nbsp;d''instruction&nbsp;d''un&nbsp;dossier&nbsp;complet&nbsp;part&nbsp;de&nbsp;la&nbsp;réception&nbsp;par&nbsp;l''autorité&nbsp;compétente&nbsp;du&nbsp;rapport&nbsp;du&nbsp;commissaire&nbsp;enquêteur&nbsp;ou&nbsp;de&nbsp;la&nbsp;commission&nbsp;d''enquête.<br/><br/>Conformément&nbsp;à&nbsp;l''article&nbsp;R423-32&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;le&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;votre&nbsp;demande&nbsp;de&nbsp;permis&nbsp;de&nbsp;construire&nbsp;est&nbsp;porté&nbsp;à&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;réception&nbsp;par&nbsp;la&nbsp;Ville&nbsp;du&nbsp;rapport&nbsp;du&nbsp;commissaire&nbsp;enquêteur&nbsp;ou&nbsp;de&nbsp;la&nbsp;commission&nbsp;d''enquête<br/><br/>Ce&nbsp;délai&nbsp;annule&nbsp;et&nbsp;remplace&nbsp;le&nbsp;délai&nbsp;de&nbsp;droit&nbsp;commun&nbsp;de&nbsp;3&nbsp;mois,&nbsp;qui&nbsp;figure&nbsp;sur&nbsp;le&nbsp;récépissé&nbsp;de&nbsp;dépôt&nbsp;de&nbsp;votre&nbsp;demande&nbsp;de&nbsp;permis&nbsp;de&nbsp;construire.<br/><br/>Conformément&nbsp;&nbsp;aux&nbsp;articles&nbsp;R423-34&nbsp;à&nbsp;R423-37&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;votre&nbsp;délai&nbsp;d''instruction&nbsp;pourra&nbsp;faire&nbsp;l''objet&nbsp;d''une&nbsp;prorogation&nbsp;exceptionnelle.&nbsp;Cette&nbsp;dernière&nbsp;vous&nbsp;sera&nbsp;notifiée&nbsp;avant&nbsp;l''expiration&nbsp;du&nbsp;délai&nbsp;d''instruction.<br/><br/>Je&nbsp;vous&nbsp;informe&nbsp;également&nbsp;que&nbsp;votre&nbsp;dossier&nbsp;n''est&nbsp;pas&nbsp;complet&nbsp;:<br/><br/><br/>DEMANDE&nbsp;DE&nbsp;PIECES&nbsp;MANQUANTES&nbsp;DANS&nbsp;LE&nbsp;DOSSIER&nbsp;DE&nbsp;DEMANDE&nbsp;DE&nbsp;PERMIS&nbsp;DE&nbsp;CONSTRUIRE&nbsp;:<br/><br/>Conformément&nbsp;à&nbsp;l''article&nbsp;R423-38&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;je&nbsp;vous&nbsp;informe&nbsp;que,&nbsp;après&nbsp;examen&nbsp;des&nbsp;pièces&nbsp;jointes&nbsp;à&nbsp;votre&nbsp;demande&nbsp;de&nbsp;permis&nbsp;de&nbsp;construire&nbsp;les&nbsp;pièces&nbsp;suivantes&nbsp;sont&nbsp;manquantes&nbsp;ou&nbsp;insuffisantes.&nbsp;Il&nbsp;convient&nbsp;donc&nbsp;que&nbsp;vous&nbsp;me&nbsp;fassiez&nbsp;parvenir&nbsp;les&nbsp;pièces&nbsp;suivantes&nbsp;:<br/><br/>[complement_instruction]<br/><br/><br/>Conformément&nbsp;à&nbsp;l''article&nbsp;R423-39&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;je&nbsp;vous&nbsp;informe&nbsp;que&nbsp;:<br/><br/>-&nbsp;les&nbsp;pièces&nbsp;manquantes&nbsp;doivent&nbsp;être&nbsp;adressées&nbsp;à&nbsp;la&nbsp;mairie&nbsp;dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;3&nbsp;mois&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;réception&nbsp;du&nbsp;présent&nbsp;courrier&nbsp;(Hôtel&nbsp;de&nbsp;ville&nbsp;service&nbsp;permis&nbsp;de&nbsp;construire&nbsp;BP&nbsp;90196&nbsp;13637&nbsp;Arles&nbsp;cedex).<br/>-&nbsp;A&nbsp;défaut&nbsp;de&nbsp;production&nbsp;de&nbsp;l''ensemble&nbsp;des&nbsp;pièces&nbsp;manquantes&nbsp;dans&nbsp;ce&nbsp;délai,&nbsp;votre&nbsp;demande&nbsp;de&nbsp;permis&nbsp;de&nbsp;construire&nbsp;fera&nbsp;l''objet&nbsp;d''une&nbsp;décision&nbsp;tacite&nbsp;de&nbsp;rejet<br/><br/><br/><br/>CAS&nbsp;OU&nbsp;UN&nbsp;PERMIS&nbsp;TACITE&nbsp;N''EST&nbsp;PAS&nbsp;POSSIBLE<br/><br/>Enfin,&nbsp;conformément&nbsp;&nbsp;à&nbsp;l''article&nbsp;R424-2&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;le&nbsp;défaut&nbsp;de&nbsp;notification&nbsp;d''une&nbsp;décision&nbsp;expresse&nbsp;dans&nbsp;le&nbsp;délai&nbsp;d''instruction&nbsp;vaut&nbsp;décision&nbsp;implicite&nbsp;de&nbsp;rejet<br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville&nbsp;,&nbsp;le&nbsp;&nbsp;&datecourrier<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;David&nbsp;GRZYB<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Maire&nbsp;Adjoint&nbsp;de&nbsp;la&nbsp;ville&nbsp;d''&ville<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Délégué&nbsp;à&nbsp;l''Urbanisme,&nbsp;l''Habitat<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;la&nbsp;Politique&nbsp;Foncière<br/><br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFORMATIONS&nbsp;A&nbsp;LIRE&nbsp;ATTENTIVEMENT:<br/><br/>DELAIS&nbsp;ET&nbsp;VOIES&nbsp;DE&nbsp;RECOURS&nbsp;:<br/>La&nbsp;déclaration&nbsp;préalable&nbsp;ou&nbsp;le&nbsp;permis&nbsp;peut&nbsp;faire&nbsp;l''objet&nbsp;d''&nbsp;un&nbsp;recours&nbsp;contentieux&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;du&nbsp;premier&nbsp;jour&nbsp;d''une&nbsp;période&nbsp;continue&nbsp;de&nbsp;2&nbsp;mois&nbsp;d''affichage&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;d''un&nbsp;panneau&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;et&nbsp;visible&nbsp;de&nbsp;la&nbsp;voie&nbsp;publique&nbsp;(art&nbsp;R&nbsp;600-2&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/>L''auteur&nbsp;du&nbsp;recours&nbsp;est&nbsp;tenu,&nbsp;à&nbsp;peine&nbsp;d''irrecevabilité,&nbsp;de&nbsp;notifier&nbsp;copie&nbsp;de&nbsp;celui-ci&nbsp;à&nbsp;l''auteur&nbsp;de&nbsp;la&nbsp;décision&nbsp;et&nbsp;au&nbsp;titulaire&nbsp;de&nbsp;l''autorisation&nbsp;(art&nbsp;R&nbsp;600-1&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/><br/>DUREE&nbsp;DE&nbsp;VALIDITE&nbsp;DU&nbsp;PERMIS&nbsp;:&nbsp;conformément&nbsp;à&nbsp;l''article&nbsp;R.424-17&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;l''autorisation&nbsp;est&nbsp;périmée&nbsp;si&nbsp;les&nbsp;travaux&nbsp;ne&nbsp;sont&nbsp;pas&nbsp;entrepris&nbsp;dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;deux&nbsp;ans&nbsp;à&nbsp;compter&nbsp;de&nbsp;sa&nbsp;notification&nbsp;au(x)&nbsp;bénéficiaire(s).&nbsp;IL&nbsp;en&nbsp;est&nbsp;de&nbsp;même&nbsp;si,&nbsp;passé&nbsp;ce&nbsp;délai,&nbsp;les&nbsp;travaux&nbsp;sont&nbsp;interrompus&nbsp;pendant&nbsp;un&nbsp;délai&nbsp;supérieur&nbsp;à&nbsp;une&nbsp;année.&nbsp;En&nbsp;cas&nbsp;de&nbsp;recours&nbsp;le&nbsp;délai&nbsp;de&nbsp;validité&nbsp;du&nbsp;permis&nbsp;et&nbsp;suspendu&nbsp;jusqu''au&nbsp;prononcé&nbsp;d''une&nbsp;décision&nbsp;juridictionnelle&nbsp;irrévocable.&nbsp;L''autorisation&nbsp;peut&nbsp;être&nbsp;prorogée&nbsp;par&nbsp;périodes&nbsp;d''une&nbsp;année&nbsp;si&nbsp;les&nbsp;prescriptions&nbsp;d''urbanisme,&nbsp;les&nbsp;servitudes&nbsp;d''urbanisme&nbsp;de&nbsp;tous&nbsp;ordres&nbsp;et&nbsp;le&nbsp;régime&nbsp;des&nbsp;taxes&nbsp;et&nbsp;participations&nbsp;n''ont&nbsp;pas&nbsp;évolué.&nbsp;Vous&nbsp;pouvez&nbsp;présenter&nbsp;une&nbsp;demande&nbsp;de&nbsp;prorogation&nbsp;sur&nbsp;papier&nbsp;libre,&nbsp;accompagnée&nbsp;de&nbsp;l''autorisation&nbsp;pour&nbsp;laquelle&nbsp;vous&nbsp;demandez&nbsp;la&nbsp;prorogation,&nbsp;au&nbsp;moins&nbsp;deux&nbsp;mois&nbsp;avant&nbsp;l''expiration&nbsp;du&nbsp;délai&nbsp;de&nbsp;validité.<br/><br/>L''autorisation&nbsp;est&nbsp;délivrée&nbsp;sous&nbsp;réserve&nbsp;du&nbsp;DROIT&nbsp;DES&nbsp;TIERS&nbsp;:&nbsp;elle&nbsp;a&nbsp;pour&nbsp;objet&nbsp;de&nbsp;vérifier&nbsp;la&nbsp;conformité&nbsp;du&nbsp;projet&nbsp;aux&nbsp;règles&nbsp;et&nbsp;servitudes&nbsp;d''urbanisme.&nbsp;Elle&nbsp;n''a&nbsp;pas&nbsp;pour&nbsp;objet&nbsp;de&nbsp;vérifier&nbsp;que&nbsp;le&nbsp;projet&nbsp;respecte&nbsp;les&nbsp;autres&nbsp;réglementations&nbsp;et&nbsp;les&nbsp;règles&nbsp;de&nbsp;droit&nbsp;privé.&nbsp;Toute&nbsp;personne&nbsp;s''estimant&nbsp;lésée&nbsp;par&nbsp;la&nbsp;méconnaissance&nbsp;du&nbsp;droit&nbsp;de&nbsp;propriété&nbsp;ou&nbsp;d''autres&nbsp;dispositions&nbsp;de&nbsp;droit&nbsp;privé&nbsp;peut&nbsp;donc&nbsp;faire&nbsp;valoir&nbsp;ses&nbsp;droits&nbsp;en&nbsp;saisissant&nbsp;les&nbsp;tribunaux&nbsp;civils,&nbsp;même&nbsp;si&nbsp;l''autorisation&nbsp;respecte&nbsp;les&nbsp;règles&nbsp;d''urbanisme.<br/><br/>Les&nbsp;obligations&nbsp;du&nbsp;(ou&nbsp;des)&nbsp;bénéficiaire(s)&nbsp;de&nbsp;l''autorisation&nbsp;:&nbsp;il&nbsp;doit&nbsp;souscrire&nbsp;l''assurance&nbsp;de&nbsp;dommages&nbsp;prévue&nbsp;par&nbsp;l''article&nbsp;L242-1&nbsp;du&nbsp;code&nbsp;des&nbsp;assurances.</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (22, 1, 'majoration_DPC_hors_SS', 'MAJORATION DE DELAI ET DEMANDE DE PIECES COMPLEMENTAIRES', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Madame,&nbsp;Monsieur,<br/><br/><br/>Vous&nbsp;avez&nbsp;déposé&nbsp;une&nbsp;demande&nbsp;de&nbsp;[libelle_datd],&nbsp;le&nbsp;[date_depot_dossier]&nbsp;pour&nbsp;un&nbsp;projet&nbsp;de&nbsp;[libelle_dat],&nbsp;situé&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;-&nbsp;&nbsp;[terrain_adresse_localite_dossier].<br/><br/>Le&nbsp;récépissé&nbsp;de&nbsp;dépôt&nbsp;de&nbsp;votre&nbsp;dossier&nbsp;indiquait&nbsp;qu''en&nbsp;cas&nbsp;de&nbsp;silence&nbsp;de&nbsp;l''Administration&nbsp;à&nbsp;l''expiration&nbsp;du&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;droit&nbsp;commun&nbsp;de&nbsp;3&nbsp;mois,&nbsp;&nbsp;vous&nbsp;bénéficieriez&nbsp;d''un&nbsp;permis&nbsp;tacite.<br/><br/>Toutefois&nbsp;ce&nbsp;même&nbsp;récépissé&nbsp;vous&nbsp;informait&nbsp;également&nbsp;que,&nbsp;dans&nbsp;le&nbsp;mois&nbsp;suivant&nbsp;le&nbsp;dépôt&nbsp;&nbsp;de&nbsp;votre&nbsp;dossier,&nbsp;l''Administration&nbsp;pouvait&nbsp;vous&nbsp;écrire&nbsp;:<br/><br/>-soit&nbsp;pour&nbsp;vous&nbsp;avertir&nbsp;qu''un&nbsp;autre&nbsp;délai&nbsp;d''instruction&nbsp;est&nbsp;applicable,&nbsp;en&nbsp;vertu&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme<br/>-soit&nbsp;pour&nbsp;vous&nbsp;indiquer&nbsp;qu''il&nbsp;manque&nbsp;une&nbsp;ou&nbsp;plusieurs&nbsp;pièces&nbsp;à&nbsp;votre&nbsp;dossier<br/>-soit&nbsp;pour&nbsp;vous&nbsp;informer&nbsp;que&nbsp;votre&nbsp;projet&nbsp;correspond&nbsp;à&nbsp;un&nbsp;des&nbsp;cas&nbsp;où&nbsp;un&nbsp;permis&nbsp;tacite&nbsp;n''est&nbsp;pas&nbsp;possible.<br/><br/>Je&nbsp;vous&nbsp;informe&nbsp;que&nbsp;le&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;votre&nbsp;projet&nbsp;doit&nbsp;effectivement&nbsp;être&nbsp;modifié&nbsp;:<br/><br/>MODIFICATION&nbsp;DU&nbsp;DELAI&nbsp;D''INSTRUCTION&nbsp;DE&nbsp;LA&nbsp;DEMANDE&nbsp;DE&nbsp;PERMIS&nbsp;DE&nbsp;CONSTRUIRE&nbsp;:<br/><br/>Votre&nbsp;demande&nbsp;de&nbsp;permis&nbsp;de&nbsp;construire&nbsp;porte&nbsp;sur&nbsp;un&nbsp;projet&nbsp;situé&nbsp;dans&nbsp;le&nbsp;périmètre&nbsp;de&nbsp;protection&nbsp;des&nbsp;immeubles&nbsp;classés&nbsp;ou&nbsp;inscrits&nbsp;au&nbsp;titre&nbsp;des&nbsp;Monuments&nbsp;Historiques.<br/><br/>Conformément&nbsp;à&nbsp;l''article&nbsp;R423-28&nbsp;b&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;le&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;votre&nbsp;permis&nbsp;de&nbsp;construire&nbsp;est&nbsp;donc&nbsp;porté&nbsp;à&nbsp;6&nbsp;mois&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;réception&nbsp;en&nbsp;mairie&nbsp;d''un&nbsp;dossier&nbsp;complet&nbsp;suivant&nbsp;l''article&nbsp;R423-19&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme.<br/><br/>Ce&nbsp;délai&nbsp;annule&nbsp;et&nbsp;remplace&nbsp;le&nbsp;délai&nbsp;de&nbsp;droit&nbsp;commun&nbsp;de&nbsp;3&nbsp;mois,&nbsp;qui&nbsp;figure&nbsp;sur&nbsp;le&nbsp;récépissé&nbsp;de&nbsp;dépôt&nbsp;de&nbsp;votre&nbsp;demande&nbsp;de&nbsp;permis&nbsp;de&nbsp;construire.<br/><br/>Conformément&nbsp;aux&nbsp;articles&nbsp;R423-34&nbsp;à&nbsp;R423-37&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;votre&nbsp;délai&nbsp;d''instruction&nbsp;pourra&nbsp;faire&nbsp;l''objet&nbsp;d''une&nbsp;prorogation&nbsp;exceptionnelle.&nbsp;Cette&nbsp;dernière&nbsp;vous&nbsp;sera&nbsp;notifiée&nbsp;avant&nbsp;l''expiration&nbsp;du&nbsp;délai&nbsp;d''instruction.<br/>Je&nbsp;vous&nbsp;informe&nbsp;également&nbsp;que&nbsp;votre&nbsp;dossier&nbsp;n''est&nbsp;pas&nbsp;complet.<br/><br/><br/>DEMANDE&nbsp;DE&nbsp;PIECES&nbsp;MANQUANTES&nbsp;DANS&nbsp;LE&nbsp;DOSSIER&nbsp;DE&nbsp;DEMANDE&nbsp;DE&nbsp;PERMIS&nbsp;DE&nbsp;CONSTRUIRE&nbsp;:<br/><br/>Conformément&nbsp;à&nbsp;l''article&nbsp;R423-38&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;je&nbsp;vous&nbsp;informe&nbsp;que,&nbsp;après&nbsp;examen&nbsp;des&nbsp;pièces&nbsp;jointes&nbsp;à&nbsp;votre&nbsp;demande&nbsp;de&nbsp;permis&nbsp;de&nbsp;construire&nbsp;les&nbsp;pièces&nbsp;suivantes&nbsp;sont&nbsp;manquantes&nbsp;ou&nbsp;insuffisantes.&nbsp;Il&nbsp;convient&nbsp;donc&nbsp;que&nbsp;vous&nbsp;me&nbsp;fassiez&nbsp;parvenir&nbsp;les&nbsp;pièces&nbsp;suivantes&nbsp;:<br/><br/>[complement_instruction]<br/><br/><br/>Conformément&nbsp;à&nbsp;l''article&nbsp;R423-39&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;je&nbsp;vous&nbsp;informe&nbsp;que&nbsp;:<br/><br/>*Les&nbsp;pièces&nbsp;manquantes&nbsp;doivent&nbsp;être&nbsp;adressées&nbsp;à&nbsp;la&nbsp;mairie&nbsp;dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;3&nbsp;mois&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;réception&nbsp;du&nbsp;présent&nbsp;courrier&nbsp;(Hôtel&nbsp;de&nbsp;ville&nbsp;service&nbsp;permis&nbsp;de&nbsp;construire&nbsp;BP&nbsp;90196&nbsp;13637&nbsp;Arles&nbsp;cedex).<br/>*A&nbsp;défaut&nbsp;de&nbsp;production&nbsp;de&nbsp;l''ensemble&nbsp;des&nbsp;pièces&nbsp;manquantes&nbsp;dans&nbsp;ce&nbsp;délai,&nbsp;votre&nbsp;demande&nbsp;de&nbsp;permis&nbsp;de&nbsp;construire&nbsp;fera&nbsp;l''objet&nbsp;d''une&nbsp;décision&nbsp;tacite&nbsp;de&nbsp;rejet<br/>*Le&nbsp;délai&nbsp;d''instruction&nbsp;commencera&nbsp;à&nbsp;courir&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;réception&nbsp;des&nbsp;pièces&nbsp;manquantes&nbsp;par&nbsp;la&nbsp;mairie<br/><br/><br/>CAS&nbsp;OU&nbsp;UN&nbsp;PERMIS&nbsp;TACITE&nbsp;N''EST&nbsp;PAS&nbsp;POSSIBLE<br/><br/>L''article&nbsp;R424-3&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme&nbsp;prévoit&nbsp;que,&nbsp;par&nbsp;exception&nbsp;au&nbsp;b&nbsp;de&nbsp;l''article&nbsp;R424-1,&nbsp;dans&nbsp;les&nbsp;cas&nbsp;où&nbsp;la&nbsp;décision&nbsp;est&nbsp;soumise&nbsp;à&nbsp;l''accord&nbsp;de&nbsp;l''Architecte&nbsp;des&nbsp;Bâtiments&nbsp;de&nbsp;France&nbsp;(ABF),&nbsp;le&nbsp;défaut&nbsp;de&nbsp;notification&nbsp;d''une&nbsp;décision&nbsp;expresse&nbsp;dans&nbsp;le&nbsp;délai&nbsp;d''instruction&nbsp;vaut&nbsp;décision&nbsp;implicite&nbsp;de&nbsp;rejet&nbsp;&nbsp;lorsque,&nbsp;dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;4&nbsp;mois&nbsp;suivant&nbsp;la&nbsp;réception&nbsp;de&nbsp;la&nbsp;demande&nbsp;d''avis,&nbsp;l''Architecte&nbsp;des&nbsp;Bâtiments&nbsp;de&nbsp;France&nbsp;notifie&nbsp;un&nbsp;avis&nbsp;défavorable&nbsp;ou&nbsp;un&nbsp;avis&nbsp;favorable&nbsp;assorti&nbsp;de&nbsp;prescriptions&nbsp;sur&nbsp;le&nbsp;projet.&nbsp;Par&nbsp;conséquent&nbsp;si&nbsp;vous&nbsp;recevez&nbsp;un&nbsp;courrier&nbsp;de&nbsp;l''ABF&nbsp;vous&nbsp;informant&nbsp;qu''il&nbsp;a&nbsp;émis&nbsp;un&nbsp;avis&nbsp;défavorable&nbsp;ou&nbsp;un&nbsp;avis&nbsp;favorable&nbsp;assorti&nbsp;de&nbsp;prescriptions&nbsp;sur&nbsp;votre&nbsp;projet,&nbsp;un&nbsp;permis&nbsp;de&nbsp;construire&nbsp;tacite&nbsp;n''est&nbsp;pas&nbsp;possible.&nbsp;Si&nbsp;alors&nbsp;aucune&nbsp;décision&nbsp;ne&nbsp;vous&nbsp;est&nbsp;envoyée&nbsp;dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;6&nbsp;mois&nbsp;à&nbsp;compter&nbsp;du&nbsp;dépôt&nbsp;de&nbsp;toutes&nbsp;les&nbsp;pièces&nbsp;manquantes&nbsp;en&nbsp;mairie,&nbsp;vous&nbsp;pourrez&nbsp;considérer&nbsp;que&nbsp;votre&nbsp;demande&nbsp;est&nbsp;refusée,&nbsp;en&nbsp;application&nbsp;de&nbsp;l''article&nbsp;R424-3&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme.<br/><br/>Si&nbsp;vous&nbsp;ne&nbsp;recevez&nbsp;pas&nbsp;un&nbsp;tel&nbsp;courrier&nbsp;de&nbsp;l''ABF&nbsp;et&nbsp;qu''aucune&nbsp;décision&nbsp;ne&nbsp;vous&nbsp;est&nbsp;envoyée&nbsp;dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;6&nbsp;mois&nbsp;à&nbsp;compter&nbsp;du&nbsp;dépôt&nbsp;de&nbsp;toutes&nbsp;les&nbsp;pièces&nbsp;manquantes&nbsp;en&nbsp;mairie,&nbsp;votre&nbsp;projet&nbsp;fera&nbsp;l''objet&nbsp;d''un&nbsp;permis&nbsp;de&nbsp;construire&nbsp;tacite.<br/><br/><br/>En&nbsp;cas&nbsp;d''obtention&nbsp;d''un&nbsp;permis&nbsp;tacite&nbsp;(1),&nbsp;vous&nbsp;pourrez&nbsp;alors&nbsp;commencer&nbsp;les&nbsp;travaux&nbsp;(2)&nbsp;après&nbsp;avoir&nbsp;:<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;adressé&nbsp;au&nbsp;maire&nbsp;en&nbsp;trois&nbsp;exemplaires,&nbsp;une&nbsp;déclaration&nbsp;d''ouverture&nbsp;de&nbsp;chantier(vous&nbsp;trouverez&nbsp;un&nbsp;modèle&nbsp;de&nbsp;déclaration&nbsp;CERFA&nbsp;n°13407*01&nbsp;à&nbsp;la&nbsp;mairie&nbsp;ou&nbsp;sur&nbsp;le&nbsp;site&nbsp;internet&nbsp;:&nbsp;http://developpement-durable.gouv.fr/<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;affiché&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;le&nbsp;présent&nbsp;courrier&nbsp;;<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;installé&nbsp;sur&nbsp;le&nbsp;terrain,&nbsp;pendant&nbsp;toute&nbsp;la&nbsp;durée&nbsp;du&nbsp;chantier,&nbsp;un&nbsp;panneau&nbsp;visible&nbsp;de&nbsp;la&nbsp;voie&nbsp;publique&nbsp;décrivant&nbsp;le&nbsp;projet.&nbsp;Vous&nbsp;trouverez&nbsp;le&nbsp;modèle&nbsp;de&nbsp;panneau&nbsp;à&nbsp;la&nbsp;mairie,&nbsp;sur&nbsp;le&nbsp;site&nbsp;internet&nbsp;urbanisme&nbsp;du&nbsp;gouvernement,&nbsp;ainsi&nbsp;que&nbsp;dans&nbsp;la&nbsp;plupart&nbsp;des&nbsp;magasins&nbsp;de&nbsp;matériaux)<br/>ATTENTION&nbsp;&nbsp;:&nbsp;LE&nbsp;PERMIS&nbsp;N''EST&nbsp;DEFINITIF&nbsp;QU''EN&nbsp;L''ABSENCE&nbsp;DE&nbsp;RECOURS&nbsp;OU&nbsp;DE&nbsp;RETRAIT&nbsp;:<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;Dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;de&nbsp;son&nbsp;affichage&nbsp;sur&nbsp;le&nbsp;terrain,&nbsp;sa&nbsp;légalité&nbsp;peut&nbsp;être&nbsp;contestée&nbsp;par&nbsp;un&nbsp;tiers.&nbsp;Dans&nbsp;ce&nbsp;cas,&nbsp;l''auteur&nbsp;du&nbsp;recours&nbsp;est&nbsp;tenu&nbsp;de&nbsp;vous&nbsp;en&nbsp;informer&nbsp;au&nbsp;plus&nbsp;tard&nbsp;quinze&nbsp;jours&nbsp;après&nbsp;le&nbsp;dépôt&nbsp;du&nbsp;recours.<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;trois&nbsp;mois&nbsp;après&nbsp;la&nbsp;date&nbsp;du&nbsp;permis,&nbsp;l''autorité&nbsp;compétente&nbsp;peut&nbsp;le&nbsp;retirer&nbsp;,&nbsp;si&nbsp;elle&nbsp;l''estime&nbsp;illégal.&nbsp;Elle&nbsp;est&nbsp;tenue&nbsp;de&nbsp;vous&nbsp;en&nbsp;informer&nbsp;préalablement&nbsp;et&nbsp;de&nbsp;vous&nbsp;permettre&nbsp;de&nbsp;répondre&nbsp;à&nbsp;ses&nbsp;observations.<br/><br/>Je&nbsp;vous&nbsp;prie&nbsp;d''agréer,&nbsp;Madame,&nbsp;Monsieur,&nbsp;l''expression&nbsp;de&nbsp;ma&nbsp;considération&nbsp;distinguée<br/><br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville&nbsp;,&nbsp;le&nbsp;&nbsp;&datecourrier<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;David&nbsp;GRZYB<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Maire&nbsp;Adjoint&nbsp;de&nbsp;la&nbsp;ville&nbsp;d''&ville<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Délégué&nbsp;à&nbsp;l''Urbanisme,&nbsp;l''Habitat<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;la&nbsp;Politique&nbsp;Foncière<br/><br/><br/><br/>(1)&nbsp;Le&nbsp;maire&nbsp;en&nbsp;délivre&nbsp;certificat&nbsp;sur&nbsp;simple&nbsp;demande.<br/>(2)&nbsp;Certains&nbsp;travaux&nbsp;ne&nbsp;peuvent&nbsp;pas&nbsp;être&nbsp;commencés&nbsp;dès&nbsp;la&nbsp;délivrance&nbsp;du&nbsp;permis&nbsp;et&nbsp;doivent&nbsp;être&nbsp;différés&nbsp;:&nbsp;c''est&nbsp;le&nbsp;cas&nbsp;du&nbsp;permis&nbsp;de&nbsp;démolir,&nbsp;ou&nbsp;des&nbsp;travaux&nbsp;en&nbsp;site&nbsp;inscrit,&nbsp;ainsi&nbsp;que&nbsp;des&nbsp;travaux&nbsp;faisant&nbsp;l''objet&nbsp;de&nbsp;prescriptions&nbsp;au&nbsp;titre&nbsp;de&nbsp;l''archéologie&nbsp;préventive.<br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFORMATIONS&nbsp;A&nbsp;LIRE&nbsp;ATTENTIVEMENT:<br/><br/>DELAIS&nbsp;ET&nbsp;VOIES&nbsp;DE&nbsp;RECOURS&nbsp;:<br/>La&nbsp;déclaration&nbsp;préalable&nbsp;ou&nbsp;le&nbsp;permis&nbsp;peut&nbsp;faire&nbsp;l''objet&nbsp;d''&nbsp;un&nbsp;recours&nbsp;contentieux&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;du&nbsp;premier&nbsp;jour&nbsp;d''une&nbsp;période&nbsp;continue&nbsp;de&nbsp;2&nbsp;mois&nbsp;d''affichage&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;d''un&nbsp;panneau&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;et&nbsp;visible&nbsp;de&nbsp;la&nbsp;voie&nbsp;publique&nbsp;(art&nbsp;R&nbsp;600-2&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/>L''auteur&nbsp;du&nbsp;recours&nbsp;est&nbsp;tenu,&nbsp;à&nbsp;peine&nbsp;d''irrecevabilité,&nbsp;de&nbsp;notifier&nbsp;copie&nbsp;de&nbsp;celui-ci&nbsp;à&nbsp;l''auteur&nbsp;de&nbsp;la&nbsp;décision&nbsp;et&nbsp;au&nbsp;titulaire&nbsp;de&nbsp;l''autorisation&nbsp;(art&nbsp;R&nbsp;600-1&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/><br/>DUREE&nbsp;DE&nbsp;VALIDITE&nbsp;DU&nbsp;PERMIS&nbsp;:&nbsp;conformément&nbsp;à&nbsp;l''article&nbsp;R.424-17&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;l''autorisation&nbsp;est&nbsp;périmée&nbsp;si&nbsp;les&nbsp;travaux&nbsp;ne&nbsp;sont&nbsp;pas&nbsp;entrepris&nbsp;dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;deux&nbsp;ans&nbsp;à&nbsp;compter&nbsp;de&nbsp;sa&nbsp;notification&nbsp;au(x)&nbsp;bénéficiaire(s).&nbsp;IL&nbsp;en&nbsp;est&nbsp;de&nbsp;même&nbsp;si,&nbsp;passé&nbsp;ce&nbsp;délai,&nbsp;les&nbsp;travaux&nbsp;sont&nbsp;interrompus&nbsp;pendant&nbsp;un&nbsp;délai&nbsp;supérieur&nbsp;à&nbsp;une&nbsp;année.&nbsp;En&nbsp;cas&nbsp;de&nbsp;recours&nbsp;le&nbsp;délai&nbsp;de&nbsp;validité&nbsp;du&nbsp;permis&nbsp;et&nbsp;suspendu&nbsp;jusqu''au&nbsp;prononcé&nbsp;d''une&nbsp;décision&nbsp;juridictionnelle&nbsp;irrévocable.&nbsp;L''autorisation&nbsp;peut&nbsp;être&nbsp;prorogée&nbsp;par&nbsp;périodes&nbsp;d''une&nbsp;année&nbsp;si&nbsp;les&nbsp;prescriptions&nbsp;d''urbanisme,&nbsp;les&nbsp;servitudes&nbsp;d''urbanisme&nbsp;de&nbsp;tous&nbsp;ordres&nbsp;et&nbsp;le&nbsp;régime&nbsp;des&nbsp;taxes&nbsp;et&nbsp;participations&nbsp;n''ont&nbsp;pas&nbsp;évolué.&nbsp;Vous&nbsp;pouvez&nbsp;présenter&nbsp;une&nbsp;demande&nbsp;de&nbsp;prorogation&nbsp;sur&nbsp;papier&nbsp;libre,&nbsp;accompagnée&nbsp;de&nbsp;l''autorisation&nbsp;pour&nbsp;laquelle&nbsp;vous&nbsp;demandez&nbsp;la&nbsp;prorogation,&nbsp;au&nbsp;moins&nbsp;deux&nbsp;mois&nbsp;avant&nbsp;l''expiration&nbsp;du&nbsp;délai&nbsp;de&nbsp;validité.<br/><br/>L''autorisation&nbsp;est&nbsp;délivrée&nbsp;sous&nbsp;réserve&nbsp;du&nbsp;DROIT&nbsp;DES&nbsp;TIERS&nbsp;:&nbsp;elle&nbsp;a&nbsp;pour&nbsp;objet&nbsp;de&nbsp;vérifier&nbsp;la&nbsp;conformité&nbsp;du&nbsp;projet&nbsp;aux&nbsp;règles&nbsp;et&nbsp;servitudes&nbsp;d''urbanisme.&nbsp;Elle&nbsp;n''a&nbsp;pas&nbsp;pour&nbsp;objet&nbsp;de&nbsp;vérifier&nbsp;que&nbsp;le&nbsp;projet&nbsp;respecte&nbsp;les&nbsp;autres&nbsp;réglementations&nbsp;et&nbsp;les&nbsp;règles&nbsp;de&nbsp;droit&nbsp;privé.&nbsp;Toute&nbsp;personne&nbsp;s''estimant&nbsp;lésée&nbsp;par&nbsp;la&nbsp;méconnaissance&nbsp;du&nbsp;droit&nbsp;de&nbsp;propriété&nbsp;ou&nbsp;d''autres&nbsp;dispositions&nbsp;de&nbsp;droit&nbsp;privé&nbsp;peut&nbsp;donc&nbsp;faire&nbsp;valoir&nbsp;ses&nbsp;droits&nbsp;en&nbsp;saisissant&nbsp;les&nbsp;tribunaux&nbsp;civils,&nbsp;même&nbsp;si&nbsp;l''autorisation&nbsp;respecte&nbsp;les&nbsp;règles&nbsp;d''urbanisme.<br/><br/>Les&nbsp;obligations&nbsp;du&nbsp;(ou&nbsp;des)&nbsp;bénéficiaire(s)&nbsp;de&nbsp;l''autorisation&nbsp;:&nbsp;il&nbsp;doit&nbsp;souscrire&nbsp;l''assurance&nbsp;de&nbsp;dommages&nbsp;prévue&nbsp;par&nbsp;l''article&nbsp;L242-1&nbsp;du&nbsp;code&nbsp;des&nbsp;assurances.</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (43, 3, 'recepisse_1', 'RECEPISSE DE DEPOT ALLAUCH', true, 'P', 'A4', NULL, 10, 10, '<p style=''text-align: left;''><span style=''font-size: 10px;''><span style=''font-family: times;''><span style=''font-weight: bold;''>[libelle_datd]<br />[libelle_om_lettretype]<br />Commune : Allauch<br />______________________________________________________________________<br />Dossier numéro         [libelle_dossier]  déposé le [date_depot_dossier]<br />par                              [nom_petitionnaire_principal]<br /><br />Correspondant :        [nom_correspondant]<br />                                    [numero_correspondant] [voie_correspondant]<br />                                    [complement_correspondant] [lieu_dit_correspondant] [bp_correspondant]<br />                                    [code_postal_correspondant] [ville_correspondant] [cedex_correspondant] [pays_correspondant]<br /><br />sur le terrain              [terrain_adresse_voie_numero_dossier] [terrain_adresse_voie_dossier] [terrain_adresse_lieu_dit_dossier] [terrain_adresse_bp_dossier] [terrain_adresse_code_postal_dossier] [terrain_adresse_localite_dossier] [terrain_adresse_cedex_dossier]<br />arrondissement          [libelle_arrondissement]<br />______________________________________________________________________<br />Dossier suivi par  [nom_instructeur] - [telephone_instructeur] - [division_instructeur] - [email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style=''text-align: justify;''><span style=''font-size: 10px;''><span style=''font-family: times;''>Madame, Monsieur,<br /><br />Vous avez déposé ce jour une demande de [libelle_datd]. Le délai d''instruction de votre dossier est de [delai_dossier] mois. en l''absence de courrier de la part de l''administration dans ce délai, vous bénéficierez d''un [libelle_datd] tacite(1).<br /><br />* Toutefois, dans le mois qui suit le dépôt de votre dossier, l''administration peut vous écrire :<br />   - soit pour vous avertir qu''un autre délai est applicable, lorsque le code de l''urbanisme l''a prévu pour permettre les consultations nécessaires (si votre projet nécessite la consultation d''autres services ...)<br />   - soit pour vous indiquer qu''il manque une ou plusieurs pièces à votre dossier,<br />   - soit pour vous informer que votre projet  correspond à un des cas où un accord tacite n''est pas possible.<br /><br />* Si vous recevez une telle lettre avant la fin du premier mois, celle-ci remplacera le premier récépissé.<br /><br />* Si vous n''avez rien reçu à la fin du premier mois suivant le dépôt, le délai de [delai_dossier] mois ne pourra être modifié. Si aucun courrier de l''administration ne vous est parvenu à l''issu de ce délai de [delai_dossier] mois, vous pourrez commencer les travaux (2) après avoir :<br />   - adresser au maire, en 3 exemplaires, une déclaration d''ouverture de chantier (vous trouverez un modèle de déclaration CERFA n° 13407 01 à la mairie ou sur le site internet urbanisme du gouvernement)<br />   - afficher sur le terrain ce recepissé sur lequel la mairie a mis son cachet pour attester la date de dépôt ;<br />   - installer sur le terrain, pendant toute la durée du chantier, un panneau visible de la voie publique décrivant le projet (vous trouverez le modèle de panneau à la mairie, sur le site internet urbanisme du gouvernement, ainsi que dans la plupart des magasins de matériaux).<br /><br />* ATTENTION : le permis n''est définitif qu''en l''absence de recours ou de retrait :<br />   - dans un délai de 2 mois à compter de l''affichage sur le terrain, sa légalité peut être contestée par un tiers. Dans ce cas l''auteur du recours est tenu de vous en informer au plus tard quinze jours après le dépôt du recours.<br />    - dans un délai de 3 mois après la date de [libelle_datd], l''autorité compétente peut le retirer, si elle l''estime illégal. Elle est tenue de vous en informer préalablement et de vous permettre de répondre à ses observations.<br /><br pagebreak=''true'' /><br />Le projet ayant fait l''objet de la demande de [libelle_datd] dont les références sont indiquées dans le cadre ci-dessus déposé à la mairie le [date_depot_dossier] fera l''objet d''un permis tacite (1) à défaut de réponse de l''administration [delai_dossier] mois après cette date. Les travaux (2) pourront alors être exécutés après affichage sur le terrain du présent récépissé et d''un panneau décrivant le projet conforme au modèle réglementaire.<br /><br /><br /><br /><br /><br />                                                                                                              &amp;ville , le  &amp;datecourrier<br /><br />                                                                                            Cachet de la mairie et signature du receveur<br /><br /><br /><br /><br /><br /><br /><br /><br />(1) Permis tacite : afin de vous éviter d''être en infraction, il vous est recommandé, dans le cas d''un permis tacite, de vous assurer auprès de l''administration de la légalité dudit permis avant tout commencement de travaux. Sur simple demande de votre part,le maire pourra alors vous délivrer une attestation certifiant qu''aucune décision de refus n''a été prise à votre insu. En effet, si le premis tacite était irrégulier, il serait retiré et les tribunaux pourraient vous astreindre à remettre les lieux en leur état initial.<br />(2) Certains travaux ne peuvent pas être commencés dès la délivrance de [libelle_datd] et doivent être différés : c''est le cas des travaux situés dans un site classé. Vous pouvez vérifier auprès de la mairie que votre projet ne rentre pas dans ce cas<br /><br /><br /><br /><br /><br /><br /><br />                                          INFORMATIONS A LIRE ATTENTIVEMENT:<br /><br />DELAIS ET VOIES DE RECOURS :<br />Le permis tacite peut faire l''objet d''un recours gracieux ou d''un recours contentieux dans un délai de deux mois à compter du premier jour d''une période continue de deux mois d''affichage sur le terrain d''un panneau décrivant le projet et visible de la voie publique (art R 600-2 du code de l''urbanisme)<br />L''auteur du recours est tenu, à peine d''irrecevabilité, de notifier copie de celui-ci à l''auteur de la décision et au titulaire de l''autorisation (art R 600-1 du code de l''urbanisme)<br /><br />DUREE DE VALIDITE DU PERMIS : conformément à l''article R.424-17 du code de l''urbanisme et en application du décret n°2008-1353 du 19 décembre 2008, l''autorisation est périmée si les travaux ne sont pas entrepris dans le délais de trois ans à compter de sa notification au(x) bénéficiaire(s). IL en est de même si, passé ce délai, les travaux sont interrompus pendant un délai supérieur à une année. En cas de recours le délai de validité du permis et suspendu jusqu''au prononcé d''une décision juridictionnelle irrévocable. L''autorisation peut être prorogée par périodes d''une année si les prescriptions d''urbanisme, les servitudes d''urbanisme de tous ordres et le régime des taxes et participations n''ont pas évolué. Vous pouvez présenter une demande de prorogation sur papier libre, accompagnée de l''autorisation pour laquelle vous demandez la prorogation, au moins deux mois avant l''expiration du délai de validité.<br /><br />L''autorisation est délivrée sous réserve du DROIT DES TIERS : elle a pour objet de vérifier la conformité du projet aux règles et servitudes d''urbanisme. Elle n''a pas pour objet de vérifier que le projet respecte les autres réglementations et les règles de droit privé. Toute personne s''estimant lésée par la méconnaissance du droit de propriété ou d''autres dispositions de droit privé peut donc faire valoir ses droits en saisissant les tribunaux civils, même si l''autorisation respecte les règles d''urbanisme.<br /><br />Les obligations du (ou des) bénéficiaire(s) de l''autorisation : il doit souscrire l''assurance de dommages prévue par l''article L242-1 du code des assurances.</span></span></p>
<p>Surface totale : [su_tot_shon_tot_donnees_techniques]</p>', 29, 10, 10, 10, 10, 'helvetica', '0-0-0', NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (26, 1, 'recepisse_DPC_DP', 'import du 17/11/2011', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Madame,&nbsp;Monsieur,<br/><br/>Vous&nbsp;avez&nbsp;déposé&nbsp;(1)&nbsp;ce&nbsp;jour&nbsp;des&nbsp;pièces&nbsp;complémentaires&nbsp;concernant&nbsp;le&nbsp;dossier&nbsp;de&nbsp;[libelle_datd]&nbsp;dont&nbsp;les&nbsp;références&nbsp;sont&nbsp;indiqués&nbsp;dans&nbsp;les&nbsp;cadre&nbsp;ci-dessus.<br/><br/>Le&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;votre&nbsp;dossier&nbsp;est&nbsp;de&nbsp;1&nbsp;mois.&nbsp;En&nbsp;l''absence&nbsp;de&nbsp;courrier&nbsp;de&nbsp;la&nbsp;part&nbsp;de&nbsp;l''administration&nbsp;dans&nbsp;ce&nbsp;délai,&nbsp;vous&nbsp;bénéficierez&nbsp;d''une&nbsp;décision&nbsp;de&nbsp;non-opposition&nbsp;aux&nbsp;travaux&nbsp;ou&nbsp;aménagements&nbsp;décrits&nbsp;dans&nbsp;la&nbsp;déclaration&nbsp;préalable&nbsp;(2).<br/><br/>*&nbsp;Toutefois,&nbsp;dans&nbsp;le&nbsp;mois&nbsp;qui&nbsp;suit&nbsp;le&nbsp;dépôt&nbsp;de&nbsp;pièces&nbsp;complémentaires,&nbsp;l''administration&nbsp;peut&nbsp;vous&nbsp;écrire&nbsp;:<br/>&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;soit&nbsp;pour&nbsp;vous&nbsp;avertir&nbsp;qu''un&nbsp;autre&nbsp;délai&nbsp;est&nbsp;applicable,&nbsp;lorsque&nbsp;le&nbsp;code&nbsp;de&nbsp;l''ubanisme&nbsp;l''a&nbsp;prévu&nbsp;pour&nbsp;permettre&nbsp;les&nbsp;consultations&nbsp;nécessaires&nbsp;(si&nbsp;votre&nbsp;projet&nbsp;nécessite&nbsp;la&nbsp;consultation&nbsp;s''autres&nbsp;services&nbsp;...)<br/>&nbsp;&nbsp;&nbsp;-&nbsp;soit&nbsp;pour&nbsp;vous&nbsp;indiquer&nbsp;qu''il&nbsp;manque&nbsp;encore&nbsp;une&nbsp;ou&nbsp;plusieurs&nbsp;pièces&nbsp;à&nbsp;votre&nbsp;dossier&nbsp;(1)<br/>&nbsp;&nbsp;&nbsp;-&nbsp;soit&nbsp;pour&nbsp;vous&nbsp;informer&nbsp;que&nbsp;votre&nbsp;projet&nbsp;correspond&nbsp;à&nbsp;un&nbsp;des&nbsp;cas&nbsp;où&nbsp;un&nbsp;permis&nbsp;tacite&nbsp;n''est&nbsp;pas&nbsp;possible.<br/>Si&nbsp;vous&nbsp;recevez&nbsp;une&nbsp;telle&nbsp;lettre&nbsp;&nbsp;avant&nbsp;la&nbsp;fin&nbsp;du&nbsp;premier&nbsp;mois,&nbsp;celle-ci&nbsp;remplacera&nbsp;et&nbsp;annulera&nbsp;le&nbsp;présent&nbsp;récépissé.<br/><br/>*&nbsp;Si&nbsp;vous&nbsp;n''avez&nbsp;rien&nbsp;reçu&nbsp;à&nbsp;la&nbsp;fin&nbsp;du&nbsp;premier&nbsp;mois&nbsp;suivant&nbsp;le&nbsp;dépôt&nbsp;des&nbsp;pièces&nbsp;complémentaires,&nbsp;le&nbsp;délai&nbsp;de&nbsp;1&nbsp;mois&nbsp;ne&nbsp;pourra&nbsp;plus&nbsp;être&nbsp;modifié.&nbsp;Si&nbsp;aucun&nbsp;courrier&nbsp;de&nbsp;l''administration&nbsp;ne&nbsp;vous&nbsp;est&nbsp;parvenu&nbsp;à&nbsp;l''issu&nbsp;du&nbsp;délai&nbsp;de&nbsp;1&nbsp;mois,&nbsp;vous&nbsp;pourrez&nbsp;commencer&nbsp;les&nbsp;travaux&nbsp;(3)&nbsp;après&nbsp;avoir&nbsp;respecté&nbsp;les&nbsp;consignes&nbsp;suivantes&nbsp;:<br/>-&nbsp;adresser&nbsp;au&nbsp;maire,&nbsp;en&nbsp;3&nbsp;exemplaires,&nbsp;une&nbsp;déclaration&nbsp;d''ouverture&nbsp;de&nbsp;chantier&nbsp;(vous&nbsp;trouverez&nbsp;un&nbsp;modèle&nbsp;de&nbsp;déclaration&nbsp;CERFA&nbsp;n°&nbsp;13407&nbsp;01&nbsp;à&nbsp;la&nbsp;mairie&nbsp;ou&nbsp;sur&nbsp;le&nbsp;site&nbsp;internet&nbsp;urbanisme&nbsp;du&nbsp;gouvernement)<br/>&nbsp;&nbsp;&nbsp;-&nbsp;afficher&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;ce&nbsp;récépissé&nbsp;sur&nbsp;lequel&nbsp;la&nbsp;mairie&nbsp;a&nbsp;mis&nbsp;son&nbsp;cachet&nbsp;pour&nbsp;attester&nbsp;la&nbsp;date&nbsp;de&nbsp;dépôt&nbsp;;<br/>&nbsp;&nbsp;&nbsp;-&nbsp;installer&nbsp;sur&nbsp;le&nbsp;terrain,&nbsp;pendant&nbsp;toute&nbsp;la&nbsp;durée&nbsp;du&nbsp;chantier,&nbsp;un&nbsp;panneau&nbsp;visible&nbsp;de&nbsp;la&nbsp;voie&nbsp;publique&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;(vous&nbsp;trouverez&nbsp;le&nbsp;modèle&nbsp;de&nbsp;panneau&nbsp;à&nbsp;la&nbsp;mairie,&nbsp;sur&nbsp;le&nbsp;site&nbsp;internet&nbsp;urbanisme&nbsp;du&nbsp;gouvernement,&nbsp;ainsi&nbsp;que&nbsp;dans&nbsp;la&nbsp;plupart&nbsp;des&nbsp;magasins&nbsp;de&nbsp;matériaux).<br/><br/>ATTENTION&nbsp;:&nbsp;le&nbsp;permis&nbsp;n''est&nbsp;définitif&nbsp;qu''en&nbsp;l''absence&nbsp;de&nbsp;recours&nbsp;ou&nbsp;de&nbsp;retrait&nbsp;:<br/>&nbsp;&nbsp;&nbsp;-&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;2&nbsp;mois&nbsp;à&nbsp;compter&nbsp;de&nbsp;l''affichage&nbsp;sur&nbsp;le&nbsp;terrain,&nbsp;sa&nbsp;légalité&nbsp;peut&nbsp;être&nbsp;contestée&nbsp;par&nbsp;un&nbsp;tiers.&nbsp;Dans&nbsp;ce&nbsp;cas&nbsp;l''auteur&nbsp;du&nbsp;recours&nbsp;est&nbsp;tenu&nbsp;de&nbsp;vous&nbsp;en&nbsp;informer&nbsp;au&nbsp;plus&nbsp;tard&nbsp;quinze&nbsp;jours&nbsp;après&nbsp;le&nbsp;dépôt&nbsp;du&nbsp;recours.<br/>&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;3&nbsp;mois&nbsp;après&nbsp;la&nbsp;date&nbsp;de&nbsp;[libelle_datd],&nbsp;l''autorité&nbsp;compétente&nbsp;peut&nbsp;la&nbsp;retirer,&nbsp;si&nbsp;elle&nbsp;l''estime&nbsp;illégal.&nbsp;Elle&nbsp;est&nbsp;tenue&nbsp;de&nbsp;vous&nbsp;en&nbsp;informer&nbsp;préalablement&nbsp;et&nbsp;de&nbsp;vous&nbsp;permettre&nbsp;de&nbsp;répondre&nbsp;à&nbsp;ses&nbsp;observations.<br/><br/>Le&nbsp;projet&nbsp;ayant&nbsp;fait&nbsp;l''objet&nbsp;de&nbsp;la&nbsp;demande&nbsp;de&nbsp;[libelle_datd]&nbsp;dont&nbsp;les&nbsp;références&nbsp;sont&nbsp;indiquées&nbsp;dans&nbsp;le&nbsp;cadre&nbsp;ci-dessus&nbsp;déposé&nbsp;à&nbsp;la&nbsp;mairie&nbsp;le&nbsp;[date_depot_dossier]&nbsp;fera&nbsp;l''objet&nbsp;d''un&nbsp;permis&nbsp;tacite&nbsp;(3)&nbsp;à&nbsp;défaut&nbsp;de&nbsp;réponse&nbsp;de&nbsp;l''administration&nbsp;[delai_dossier]&nbsp;mois&nbsp;après&nbsp;cette&nbsp;date.&nbsp;Les&nbsp;travaux&nbsp;pourront&nbsp;alors&nbsp;être&nbsp;exécutés&nbsp;après&nbsp;affichage&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;du&nbsp;présent&nbsp;récépissé&nbsp;et&nbsp;d''un&nbsp;panneau&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;conforme&nbsp;au&nbsp;modèle&nbsp;réglementaire.<br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville&nbsp;,&nbsp;le&nbsp;&nbsp;&datecourrier<br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cachet&nbsp;de&nbsp;la&nbsp;mairie<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Et&nbsp;signature&nbsp;du&nbsp;receveur<br/><br/><br/><br/><br/>(2)&nbsp;Les&nbsp;travaux&nbsp;ne&nbsp;peuvent&nbsp;&nbsp;être&nbsp;entrepris,&nbsp;conformément&nbsp;au&nbsp;projet&nbsp;décrit&nbsp;dans&nbsp;la&nbsp;demande,&nbsp;qu''à&nbsp;compter&nbsp;de&nbsp;la&nbsp;décision.<br/><br/>Afin&nbsp;de&nbsp;vous&nbsp;évitez&nbsp;d''être&nbsp;en&nbsp;infraction,&nbsp;il&nbsp;vous&nbsp;est&nbsp;recommandé,&nbsp;dans&nbsp;le&nbsp;cas&nbsp;d''une&nbsp;décision&nbsp;&nbsp;tacite&nbsp;de&nbsp;non-opposition,&nbsp;de&nbsp;vous&nbsp;assurer&nbsp;auprès&nbsp;des&nbsp;services&nbsp;municipaux&nbsp;que&nbsp;&nbsp;ladite&nbsp;déclaration&nbsp;préalable&nbsp;n''a&nbsp;pas&nbsp;fait&nbsp;l''objet&nbsp;d''une&nbsp;décision&nbsp;d''opposition&nbsp;avant&nbsp;de&nbsp;commencer&nbsp;les&nbsp;travaux.&nbsp;Dans&nbsp;cette&nbsp;éventualité,&nbsp;il&nbsp;vous&nbsp;sera&nbsp;délivré&nbsp;une&nbsp;attestation&nbsp;certifiant&nbsp;qu''aucune&nbsp;décision&nbsp;de&nbsp;non-opposition&nbsp;n''a&nbsp;été&nbsp;prise&nbsp;à&nbsp;votre&nbsp;encontre.<br/><br/>Dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;date&nbsp;de&nbsp;décision&nbsp;tacite,&nbsp;il&nbsp;vous&nbsp;sera&nbsp;notifié&nbsp;éventuellement&nbsp;un&nbsp;arrêté&nbsp;fixant&nbsp;les&nbsp;taxes&nbsp;et&nbsp;participations&nbsp;applicables&nbsp;au&nbsp;projet.<br/><br/>(3)&nbsp;Certains&nbsp;travaux&nbsp;ne&nbsp;peuvent&nbsp;pas&nbsp;être&nbsp;commencés&nbsp;dès&nbsp;la&nbsp;délivrance&nbsp;de&nbsp;[libelle_datd]&nbsp;et&nbsp;doivent&nbsp;être&nbsp;différés&nbsp;:&nbsp;c''est&nbsp;le&nbsp;cas&nbsp;des&nbsp;travaux&nbsp;situés&nbsp;dans&nbsp;un&nbsp;site&nbsp;classé.&nbsp;Vous&nbsp;pouvez&nbsp;vérifier&nbsp;auprès&nbsp;de&nbsp;la&nbsp;mairie&nbsp;que&nbsp;votre&nbsp;projet&nbsp;ne&nbsp;rentre&nbsp;pas&nbsp;dans&nbsp;ce&nbsp;cas.<br/><br/>(4)&nbsp;Le&nbsp;maire&nbsp;ou&nbsp;le&nbsp;préfet&nbsp;en&nbsp;délivre&nbsp;certificat&nbsp;sur&nbsp;simple&nbsp;demande.<br/><br/><br pagebreak="true" /><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFORMATIONS&nbsp;A&nbsp;LIRE&nbsp;ATTENTIVEMENT:<br/><br/>DELAIS&nbsp;ET&nbsp;VOIES&nbsp;DE&nbsp;RECOURS&nbsp;:<br/>La&nbsp;déclaration&nbsp;préalable&nbsp;peut&nbsp;faire&nbsp;l''objet&nbsp;d''un&nbsp;d''un&nbsp;recours&nbsp;contentieux&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;du&nbsp;premier&nbsp;jour&nbsp;d''une&nbsp;période&nbsp;continue&nbsp;de&nbsp;2&nbsp;mois&nbsp;d''affichage&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;d''un&nbsp;panneau&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;et&nbsp;visible&nbsp;de&nbsp;la&nbsp;voie&nbsp;publique&nbsp;(art&nbsp;R&nbsp;600-2&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/>L''auteur&nbsp;du&nbsp;recours&nbsp;est&nbsp;tenu,&nbsp;à&nbsp;peine&nbsp;d''irrecevabilité,&nbsp;de&nbsp;notifier&nbsp;copie&nbsp;de&nbsp;celui-ci&nbsp;à&nbsp;l''auteur&nbsp;de&nbsp;la&nbsp;décision&nbsp;et&nbsp;au&nbsp;titulaire&nbsp;de&nbsp;l''autorisation&nbsp;(art&nbsp;R&nbsp;600-1&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/><br/>DROITS&nbsp;DE&nbsp;TIERS<br/>La&nbsp;déclaration&nbsp;préalable&nbsp;est&nbsp;acquise&nbsp;sous&nbsp;réserve&nbsp;des&nbsp;droits&nbsp;des&nbsp;tiers&nbsp;:&nbsp;elle&nbsp;vérifie&nbsp;la&nbsp;conformité&nbsp;du&nbsp;projet&nbsp;aux&nbsp;règles&nbsp;et&nbsp;servitudes&nbsp;d''urbanisme.&nbsp;Elle&nbsp;ne&nbsp;vérifie&nbsp;pas&nbsp;si&nbsp;le&nbsp;projet&nbsp;respecte&nbsp;les&nbsp;autres&nbsp;réglementations&nbsp;et&nbsp;les&nbsp;règles&nbsp;de&nbsp;droit&nbsp;privé.&nbsp;Toute&nbsp;personne&nbsp;s''estimant&nbsp;lésée&nbsp;par&nbsp;la&nbsp;méconnaissance&nbsp;du&nbsp;droit&nbsp;de&nbsp;propriété&nbsp;ou&nbsp;autres&nbsp;dispositions&nbsp;de&nbsp;droit&nbsp;privé&nbsp;peut&nbsp;donc&nbsp;faire&nbsp;valoir&nbsp;ses&nbsp;droits&nbsp;en&nbsp;saisissant&nbsp;les&nbsp;tribunaux&nbsp;civils,&nbsp;même&nbsp;si&nbsp;le&nbsp;permis&nbsp;respecte&nbsp;les&nbsp;règles&nbsp;d''urbanisme.<br/><br/>VALIDITE<br/>La&nbsp;déclaration&nbsp;préalable&nbsp;est&nbsp;caduque&nbsp;si&nbsp;travaux&nbsp;ne&nbsp;sont&nbsp;effectués&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;deux&nbsp;ans&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;date&nbsp;de&nbsp;décision&nbsp;tacite&nbsp;de&nbsp;non-opposition&nbsp;ou&nbsp;si&nbsp;les&nbsp;travaux&nbsp;sont&nbsp;interrompus&nbsp;pendant&nbsp;un&nbsp;délai&nbsp;supérieur&nbsp;d''une&nbsp;année.<br/><br/>[complement_instruction]1</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (23, 1, 'recepisse_CU', 'RECEPISSE DE DEPOT', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Madame,&nbsp;Monsieur,<br/><br/>Il&nbsp;est&nbsp;donné&nbsp;décharge&nbsp;ce&nbsp;jour&nbsp;du&nbsp;dépôt&nbsp;de&nbsp;la&nbsp;demande&nbsp;de&nbsp;certificat&nbsp;d''urbanisme&nbsp;de&nbsp;simple&nbsp;information&nbsp;générale&nbsp;(article&nbsp;L&nbsp;410-1&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)&nbsp;dont&nbsp;les&nbsp;références&nbsp;sont&nbsp;indiqués&nbsp;dans&nbsp;le&nbsp;cadre&nbsp;ci-dessus.<br/><br/>Le&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;cette&nbsp;demande&nbsp;de&nbsp;Certificat&nbsp;d''Urbanisme&nbsp;est&nbsp;fixé&nbsp;par&nbsp;la&nbsp;loi&nbsp;(art&nbsp;R.410-9a&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)&nbsp;a&nbsp;UN&nbsp;MOIS.<br/><br/>En&nbsp;l&nbsp;absence&nbsp;d''une&nbsp;notification&nbsp;de&nbsp;décision&nbsp;à&nbsp;compter&nbsp;du&nbsp;[date_limite_dossier],&nbsp;le&nbsp;présent&nbsp;récepissé&nbsp;vaudra&nbsp;Certificat&nbsp;d''Urbanisme&nbsp;d''information&nbsp;tacite(*)<br/><br/>[complement_instruction]1<br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville,&nbsp;le&nbsp;&nbsp;&datecourrier<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cachet&nbsp;de&nbsp;la&nbsp;mairie&nbsp;et&nbsp;signature&nbsp;du&nbsp;receveur<br/><br/><br/><br/>(*)&nbsp;le&nbsp;certificat&nbsp;d''urbanisme&nbsp;tacite&nbsp;d''information&nbsp;indique&nbsp;les&nbsp;dispositions&nbsp;d''urbanisme,&nbsp;les&nbsp;limitations&nbsp;administratives&nbsp;au&nbsp;droit&nbsp;de&nbsp;propriété&nbsp;et&nbsp;la&nbsp;liste&nbsp;des&nbsp;taxes&nbsp;et&nbsp;participations&nbsp;d''urbanisme&nbsp;applicables&nbsp;au&nbsp;terrain&nbsp;en&nbsp;vigueur&nbsp;à&nbsp;la&nbsp;date&nbsp;de&nbsp;la&nbsp;décision&nbsp;tacite.<br/><br/><br/>\<br pagebreak="true" /><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFORMATIONS&nbsp;A&nbsp;LIRE&nbsp;ATTENTIVEMENT&nbsp;:<br/><br/>DUREE&nbsp;DE&nbsp;VALIDITE&nbsp;:<br/>Les&nbsp;règles&nbsp;applicables&nbsp;sont&nbsp;acquises&nbsp;durant&nbsp;dix&nbsp;huit&nbsp;mois&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;décision&nbsp;tacite.&nbsp;Les&nbsp;dites&nbsp;règles&nbsp;ne&nbsp;peuvent&nbsp;être&nbsp;remises&nbsp;en&nbsp;cause.<br/>Toutefois,&nbsp;les&nbsp;dispositions&nbsp;relatives&nbsp;à&nbsp;la&nbsp;préservation&nbsp;de&nbsp;la&nbsp;sécurité&nbsp;ou&nbsp;de&nbsp;la&nbsp;salubrite&nbsp;publique&nbsp;seront&nbsp;applicables,&nbsp;même&nbsp;si&nbsp;elles&nbsp;sont&nbsp;intervenues&nbsp;après&nbsp;la&nbsp;date&nbsp;du&nbsp;certificat&nbsp;d''urbanisme&nbsp;tacite.<br/><br/>ATTENTION&nbsp;:&nbsp;Passé&nbsp;ce&nbsp;délai,&nbsp;aucune&nbsp;garantie&nbsp;au&nbsp;maintien&nbsp;des&nbsp;règles&nbsp;d''urbanisme&nbsp;indiquées&nbsp;dans&nbsp;le&nbsp;certificat&nbsp;d''urbanisme&nbsp;ne&nbsp;vous&nbsp;est&nbsp;assurée.<br/><br/>PROLONGATION&nbsp;DE&nbsp;VALIDITE&nbsp;:<br/>Le&nbsp;certificat&nbsp;d''urbanisme&nbsp;peut&nbsp;être&nbsp;prorogé&nbsp;par&nbsp;période&nbsp;d''une&nbsp;année&nbsp;sur&nbsp;demande&nbsp;présentée&nbsp;deux&nbsp;mois&nbsp;au&nbsp;moins&nbsp;avant&nbsp;l''expiration&nbsp;du&nbsp;délai&nbsp;de&nbsp;validité,&nbsp;si&nbsp;les&nbsp;prescriptions&nbsp;d''urbanisme,&nbsp;les&nbsp;servitudes&nbsp;administratives&nbsp;de&nbsp;tout&nbsp;ordre&nbsp;et&nbsp;le&nbsp;régime&nbsp;des&nbsp;taxes&nbsp;et&nbsp;participations&nbsp;applicables&nbsp;au&nbsp;terrain&nbsp;n''est&nbsp;pas&nbsp;changé.<br/><br/><br/>[complement2_instruction]</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (24, 1, 'recepisse_DP', 'import du 17/11/2011', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Madame,&nbsp;Monsieur,<br/><br/>Vous&nbsp;avez&nbsp;déposé&nbsp;ce&nbsp;jour&nbsp;une&nbsp;[libelle_datd]&nbsp;à&nbsp;des&nbsp;travaux&nbsp;ou&nbsp;aménagements&nbsp;non&nbsp;soumis&nbsp;à&nbsp;permis.&nbsp;Le&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;votre&nbsp;dossier&nbsp;est&nbsp;de&nbsp;[delai_dossier]&nbsp;mois.&nbsp;En&nbsp;l''absence&nbsp;de&nbsp;courrier&nbsp;de&nbsp;la&nbsp;part&nbsp;de&nbsp;l''administration&nbsp;dans&nbsp;ce&nbsp;délai,&nbsp;vous&nbsp;bénéficierez&nbsp;d''une&nbsp;décision&nbsp;de&nbsp;non-opposition&nbsp;à&nbsp;ces&nbsp;travaux&nbsp;ou&nbsp;aménagements&nbsp;(1).<br/><br/>*&nbsp;Toutefois,&nbsp;dans&nbsp;le&nbsp;mois&nbsp;qui&nbsp;suit&nbsp;le&nbsp;dépôt&nbsp;de&nbsp;votre&nbsp;dossier,&nbsp;l''administration&nbsp;peut&nbsp;vous&nbsp;écrire:<br/>&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;soit&nbsp;pour&nbsp;vous&nbsp;avertir&nbsp;qu''un&nbsp;autre&nbsp;délai&nbsp;est&nbsp;applicable,&nbsp;lorsque&nbsp;le&nbsp;code&nbsp;de&nbsp;l''urbanisme&nbsp;l''a&nbsp;prévu&nbsp;pour&nbsp;permettre&nbsp;les&nbsp;consultations&nbsp;nécessaires&nbsp;(si&nbsp;votre&nbsp;projet&nbsp;nécessite&nbsp;la&nbsp;consultation&nbsp;d''autres&nbsp;services&nbsp;...)<br/>&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;soit&nbsp;pour&nbsp;vous&nbsp;indiquer&nbsp;qu''il&nbsp;manque&nbsp;une&nbsp;ou&nbsp;plusieurs&nbsp;pièces&nbsp;à&nbsp;votre&nbsp;dossier,<br/><br/>*&nbsp;Si&nbsp;vous&nbsp;recevez&nbsp;une&nbsp;telle&nbsp;lettre&nbsp;avant&nbsp;la&nbsp;fin&nbsp;du&nbsp;mois&nbsp;qui&nbsp;suit&nbsp;le&nbsp;dépôt&nbsp;de&nbsp;votre&nbsp;déclaration,&nbsp;celle&nbsp;ci&nbsp;remplacera&nbsp;le&nbsp;présent&nbsp;récépissé.<br/><br/>*&nbsp;Si&nbsp;vous&nbsp;n''avez&nbsp;rien&nbsp;reçu&nbsp;à&nbsp;la&nbsp;fin&nbsp;du&nbsp;premier&nbsp;mois&nbsp;suivant&nbsp;le&nbsp;dépôt,&nbsp;le&nbsp;délai&nbsp;de&nbsp;[delai_dossier]&nbsp;mois&nbsp;ne&nbsp;pourra&nbsp;être&nbsp;modifié.&nbsp;Sans&nbsp;courrier&nbsp;de&nbsp;l''administration&nbsp;à&nbsp;l''issu&nbsp;de&nbsp;ce&nbsp;délai&nbsp;de&nbsp;[delai_dossier]&nbsp;mois,&nbsp;vous&nbsp;pourrez&nbsp;commencer&nbsp;les&nbsp;travaux&nbsp;(2)&nbsp;après&nbsp;avoir&nbsp;:<br/>&nbsp;&nbsp;-&nbsp;affiché&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;ce&nbsp;recepissé&nbsp;sur&nbsp;lequel&nbsp;la&nbsp;mairie&nbsp;a&nbsp;mis&nbsp;son&nbsp;cachet&nbsp;pour&nbsp;attester&nbsp;la&nbsp;date&nbsp;de&nbsp;dépôt&nbsp;;<br/>&nbsp;&nbsp;-&nbsp;installé&nbsp;sur&nbsp;le&nbsp;terrain,&nbsp;pendant&nbsp;toute&nbsp;la&nbsp;durée&nbsp;du&nbsp;chantier,&nbsp;un&nbsp;panneau&nbsp;visible&nbsp;de&nbsp;la&nbsp;voie&nbsp;puiblique&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;(Vous&nbsp;trouverez&nbsp;le&nbsp;modèle&nbsp;de&nbsp;panneau&nbsp;à&nbsp;la&nbsp;mairie,&nbsp;sur&nbsp;le&nbsp;site&nbsp;internet&nbsp;urbanisme&nbsp;du&nbsp;gouvernement,&nbsp;ainsi&nbsp;que&nbsp;dans&nbsp;la&nbsp;plupart&nbsp;des&nbsp;magasins&nbsp;de&nbsp;matériaux)<br/><br/>*&nbsp;Attention&nbsp;:&nbsp;la&nbsp;décision&nbsp;de&nbsp;non-opposition&nbsp;n''est&nbsp;définitive&nbsp;qu''en&nbsp;l''absence&nbsp;de&nbsp;recours.&nbsp;En&nbsp;effet,&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;2&nbsp;mois&nbsp;à&nbsp;compter&nbsp;de&nbsp;l''affichage&nbsp;sur&nbsp;le&nbsp;terrain,&nbsp;sa&nbsp;légalité&nbsp;peut&nbsp;être&nbsp;contestée&nbsp;par&nbsp;un&nbsp;tiers&nbsp;devant&nbsp;le&nbsp;tribunal&nbsp;administratif&nbsp;compétent.&nbsp;Dans&nbsp;ce&nbsp;cas&nbsp;l''auteur&nbsp;du&nbsp;recours&nbsp;est&nbsp;tenu&nbsp;de&nbsp;vous&nbsp;en&nbsp;informer&nbsp;au&nbsp;plus&nbsp;tard&nbsp;quinze&nbsp;jours&nbsp;après&nbsp;le&nbsp;dépôt&nbsp;du&nbsp;recours&nbsp;(L424-5).<br/><br/>A&nbsp;défaut&nbsp;de&nbsp;réponse&nbsp;de&nbsp;l''administration&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;[delai_dossier],&nbsp;à&nbsp;compter&nbsp;du&nbsp;[date_depot_dossier]&nbsp;(date&nbsp;de&nbsp;dépôt&nbsp;en&nbsp;mairie&nbsp;de&nbsp;la&nbsp;[libelle_datd]&nbsp;dont&nbsp;les&nbsp;références&nbsp;sont&nbsp;indiquées&nbsp;dans&nbsp;le&nbsp;cadre&nbsp;ci-dessus)&nbsp;votre&nbsp;&nbsp;[libelle_datd]&nbsp;fera&nbsp;l''objet&nbsp;d''une&nbsp;décision&nbsp;de&nbsp;non-opposition&nbsp;(1).&nbsp;Les&nbsp;travaux&nbsp;ou&nbsp;aménagements&nbsp;(2)pourront&nbsp;alors&nbsp;être&nbsp;exécutés&nbsp;après&nbsp;affichage&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;du&nbsp;présent&nbsp;récépissé&nbsp;et&nbsp;d''un&nbsp;panneau&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;conforme&nbsp;au&nbsp;modèle&nbsp;réglementaire.<br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville&nbsp;,&nbsp;le&nbsp;&nbsp;&datecourrier<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cachet&nbsp;de&nbsp;la&nbsp;Mairie&nbsp;et&nbsp;signature&nbsp;du&nbsp;receveur<br/><br/><br/><br/>(1)&nbsp;Décision&nbsp;de&nbsp;non-opposition&nbsp;:&nbsp;afin&nbsp;de&nbsp;vous&nbsp;éviter&nbsp;d''être&nbsp;en&nbsp;infraction,&nbsp;il&nbsp;vous&nbsp;est&nbsp;recommandé&nbsp;de&nbsp;vous&nbsp;assurer&nbsp;auprès&nbsp;de&nbsp;l''administration&nbsp;de&nbsp;la&nbsp;légalité&nbsp;dudit&nbsp;permis&nbsp;avant&nbsp;tout&nbsp;commencement&nbsp;de&nbsp;travaux.&nbsp;Sur&nbsp;simple&nbsp;demande&nbsp;de&nbsp;votre&nbsp;part,&nbsp;le&nbsp;maire&nbsp;pourra&nbsp;alors&nbsp;vous&nbsp;délivrer&nbsp;une&nbsp;attestation&nbsp;certifiant&nbsp;qu''aucune&nbsp;décision&nbsp;de&nbsp;refus&nbsp;n''a&nbsp;été&nbsp;prise&nbsp;à&nbsp;votre&nbsp;insu.&nbsp;En&nbsp;effet,&nbsp;si&nbsp;le&nbsp;projet&nbsp;était&nbsp;irrégulier,&nbsp;les&nbsp;tribunaux&nbsp;pourraient&nbsp;vous&nbsp;astreindrede&nbsp;remettre&nbsp;les&nbsp;lieux&nbsp;en&nbsp;leur&nbsp;état&nbsp;inital.<br/>(2)&nbsp;certains&nbsp;travaux&nbsp;ne&nbsp;peuvent&nbsp;pas&nbsp;débuter&nbsp;dès&nbsp;la&nbsp;décision&nbsp;de&nbsp;non-opposition.&nbsp;C''est&nbsp;le&nbsp;cas&nbsp;des&nbsp;travaux&nbsp;de&nbsp;coupe&nbsp;et&nbsp;abattage&nbsp;des&nbsp;arbres,&nbsp;des&nbsp;transformations&nbsp;de&nbsp;logement&nbsp;en&nbsp;un&nbsp;autre&nbsp;usage&nbsp;dans&nbsp;les&nbsp;communes&nbsp;de&nbsp;plus&nbsp;de&nbsp;200.000&nbsp;habitants&nbsp;et&nbsp;dans&nbsp;les&nbsp;départements&nbsp;de&nbsp;Paris,&nbsp;des&nbsp;hauts&nbsp;de&nbsp;seine,&nbsp;de&nbsp;la&nbsp;Seine&nbsp;Saint&nbsp;Denis&nbsp;et&nbsp;du&nbsp;Val&nbsp;de&nbsp;Marne,&nbsp;ou&nbsp;des&nbsp;installations&nbsp;classées&nbsp;pour&nbsp;la&nbsp;protection&nbsp;de&nbsp;l''environnement.&nbsp;Vous&nbsp;pouvez&nbsp;vérifier&nbsp;auprès&nbsp;des&nbsp;services&nbsp;municipaux&nbsp;que&nbsp;votre&nbsp;projet&nbsp;n''entre&nbsp;pas&nbsp;dans&nbsp;ces&nbsp;cas.<br/><br/><br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFORMATIONS&nbsp;A&nbsp;LIRE&nbsp;ATTENTIVEMENT&nbsp;:<br/><br/><br/><br/><br/><br/>DELAIS&nbsp;ET&nbsp;VOIES&nbsp;DE&nbsp;RECOURS&nbsp;:<br/>La&nbsp;décision&nbsp;de&nbsp;non-opposition&nbsp;peut&nbsp;faire&nbsp;l''objet&nbsp;d''un&nbsp;recours&nbsp;gracieux&nbsp;ou&nbsp;d''un&nbsp;recours&nbsp;contentieux&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;du&nbsp;premier&nbsp;jour&nbsp;d''une&nbsp;période&nbsp;continue&nbsp;de&nbsp;2&nbsp;mois&nbsp;d''affichage&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;d''un&nbsp;panneau&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;et&nbsp;visible&nbsp;de&nbsp;la&nbsp;voie&nbsp;publique&nbsp;(art&nbsp;R&nbsp;600-2&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/>L''auteur&nbsp;du&nbsp;recours&nbsp;est&nbsp;tenu,&nbsp;à&nbsp;peine&nbsp;d''irrecevabilité,&nbsp;de&nbsp;notifier&nbsp;copie&nbsp;de&nbsp;celui-ci&nbsp;à&nbsp;l''auteur&nbsp;de&nbsp;la&nbsp;décision&nbsp;et&nbsp;au&nbsp;titulaire&nbsp;de&nbsp;l''autorisation&nbsp;(art&nbsp;R&nbsp;600-1&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/><br/>DUREE&nbsp;DE&nbsp;VALIDITE&nbsp;DU&nbsp;PERMIS&nbsp;:&nbsp;conformément&nbsp;à&nbsp;l''article&nbsp;R.424-17&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;l''autorisation&nbsp;est&nbsp;périmée&nbsp;si&nbsp;les&nbsp;travaux&nbsp;ne&nbsp;sont&nbsp;pas&nbsp;entrepris&nbsp;dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;deux&nbsp;ans&nbsp;à&nbsp;compter&nbsp;de&nbsp;sa&nbsp;notification&nbsp;au(x)&nbsp;bénéficiaire(s).&nbsp;IL&nbsp;en&nbsp;est&nbsp;de&nbsp;même&nbsp;si,&nbsp;passé&nbsp;ce&nbsp;délai,&nbsp;les&nbsp;travaux&nbsp;sont&nbsp;interrompus&nbsp;pendant&nbsp;un&nbsp;délai&nbsp;supérieur&nbsp;à&nbsp;une&nbsp;année.&nbsp;En&nbsp;cas&nbsp;de&nbsp;recours&nbsp;le&nbsp;délai&nbsp;de&nbsp;validité&nbsp;du&nbsp;permis&nbsp;et&nbsp;suspendu&nbsp;jusqu''au&nbsp;prononcé&nbsp;d''une&nbsp;décision&nbsp;juridictionnelle&nbsp;irrévocable.&nbsp;L''autorisation&nbsp;peut&nbsp;être&nbsp;prorogée&nbsp;par&nbsp;périodes&nbsp;d''une&nbsp;année&nbsp;si&nbsp;les&nbsp;prescriptions&nbsp;d''urbanisme,&nbsp;les&nbsp;servitudes&nbsp;d''urbanisme&nbsp;de&nbsp;tous&nbsp;ordres&nbsp;et&nbsp;le&nbsp;régime&nbsp;des&nbsp;taxes&nbsp;et&nbsp;participations&nbsp;n''ont&nbsp;pas&nbsp;évolué.&nbsp;Vous&nbsp;pouvez&nbsp;présenter&nbsp;une&nbsp;demande&nbsp;de&nbsp;prorogation&nbsp;sur&nbsp;papier&nbsp;libre,&nbsp;accompagnée&nbsp;de&nbsp;l''autorisation&nbsp;pour&nbsp;laquelle&nbsp;vous&nbsp;demandez&nbsp;la&nbsp;prorogation,&nbsp;au&nbsp;moins&nbsp;deux&nbsp;mois&nbsp;avant&nbsp;l''expiration&nbsp;du&nbsp;délai&nbsp;de&nbsp;validité.<br/><br/>L''autorisation&nbsp;est&nbsp;délivrée&nbsp;sous&nbsp;réserve&nbsp;du&nbsp;DROIT&nbsp;DES&nbsp;TIERS&nbsp;:&nbsp;elle&nbsp;a&nbsp;pour&nbsp;objet&nbsp;de&nbsp;vérifier&nbsp;la&nbsp;conformité&nbsp;du&nbsp;projet&nbsp;aux&nbsp;règles&nbsp;et&nbsp;servitudes&nbsp;d''urbanisme.&nbsp;Elle&nbsp;n''a&nbsp;pas&nbsp;pour&nbsp;objet&nbsp;de&nbsp;vérifier&nbsp;que&nbsp;le&nbsp;projet&nbsp;respecte&nbsp;les&nbsp;autres&nbsp;réglementations&nbsp;et&nbsp;les&nbsp;règles&nbsp;de&nbsp;droit&nbsp;privé.&nbsp;Toute&nbsp;personne&nbsp;s''estimant&nbsp;lésée&nbsp;par&nbsp;la&nbsp;méconnaissance&nbsp;du&nbsp;droit&nbsp;de&nbsp;propriété&nbsp;ou&nbsp;d''autres&nbsp;dispositions&nbsp;de&nbsp;droit&nbsp;privé&nbsp;peut&nbsp;donc&nbsp;faire&nbsp;valoir&nbsp;ses&nbsp;droits&nbsp;en&nbsp;saisissant&nbsp;les&nbsp;tribunaux&nbsp;civils,&nbsp;même&nbsp;si&nbsp;l''autorisation&nbsp;respecte&nbsp;les&nbsp;règles&nbsp;d''urbanisme.<br/><br/>Les&nbsp;obligations&nbsp;du&nbsp;(ou&nbsp;des)&nbsp;bénéficiaire(s)&nbsp;de&nbsp;l''autorisation&nbsp;:&nbsp;il&nbsp;doit&nbsp;souscrire&nbsp;l''assurance&nbsp;de&nbsp;dommages&nbsp;prévue&nbsp;par&nbsp;l''article&nbsp;L242-1&nbsp;du&nbsp;code&nbsp;des&nbsp;assurances.<br/><br/><br/>[complement_instruction]</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (4, 1, 'recepisse_PD', 'import du 17/11/2011', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Madame,&nbsp;Monsieur,<br/><br/>Vous&nbsp;avez&nbsp;déposé&nbsp;ce&nbsp;jour&nbsp;une&nbsp;demande&nbsp;de&nbsp;[libelle_datd].&nbsp;Le&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;votre&nbsp;dossier&nbsp;est&nbsp;de&nbsp;[delai_dossier]&nbsp;mois.&nbsp;En&nbsp;l''absence&nbsp;de&nbsp;courrier&nbsp;de&nbsp;la&nbsp;part&nbsp;de&nbsp;l''administration&nbsp;dans&nbsp;ce&nbsp;délai,&nbsp;vous&nbsp;bénéficierez&nbsp;d''un&nbsp;[libelle_datd]&nbsp;tacite(1).<br/><br/>*&nbsp;Toutefois,&nbsp;dans&nbsp;le&nbsp;mois&nbsp;qui&nbsp;suit&nbsp;le&nbsp;dépôt&nbsp;de&nbsp;votre&nbsp;dossier,&nbsp;l''administration&nbsp;peut&nbsp;vous&nbsp;écrire&nbsp;:<br/>&nbsp;&nbsp;&nbsp;-&nbsp;soit&nbsp;pour&nbsp;vous&nbsp;avertir&nbsp;qu''un&nbsp;autre&nbsp;délai&nbsp;est&nbsp;applicable,&nbsp;lorsque&nbsp;le&nbsp;code&nbsp;de&nbsp;l''urbanisme&nbsp;l''a&nbsp;prévu&nbsp;pour&nbsp;permettre&nbsp;les&nbsp;consultations&nbsp;nécessaires&nbsp;(si&nbsp;votre&nbsp;projet&nbsp;nécessite&nbsp;la&nbsp;consultation&nbsp;d''autres&nbsp;services&nbsp;...)<br/>&nbsp;&nbsp;&nbsp;-&nbsp;soit&nbsp;pour&nbsp;vous&nbsp;indiquer&nbsp;qu''il&nbsp;manque&nbsp;une&nbsp;ou&nbsp;plusieurs&nbsp;pièces&nbsp;à&nbsp;votre&nbsp;dossier,<br/>&nbsp;&nbsp;&nbsp;-&nbsp;soit&nbsp;pour&nbsp;vous&nbsp;informer&nbsp;que&nbsp;votre&nbsp;projet&nbsp;&nbsp;correspond&nbsp;à&nbsp;un&nbsp;des&nbsp;cas&nbsp;où&nbsp;un&nbsp;accord&nbsp;tacite&nbsp;n''est&nbsp;pas&nbsp;possible.<br/><br/>*&nbsp;Si&nbsp;vous&nbsp;recevez&nbsp;une&nbsp;telle&nbsp;lettre&nbsp;avant&nbsp;la&nbsp;fin&nbsp;du&nbsp;premier&nbsp;mois,&nbsp;celle-ci&nbsp;remplacera&nbsp;le&nbsp;premier&nbsp;récépissé.<br/><br/>*&nbsp;Si&nbsp;vous&nbsp;n''avez&nbsp;rien&nbsp;reçu&nbsp;à&nbsp;la&nbsp;fin&nbsp;du&nbsp;premier&nbsp;mois&nbsp;suivant&nbsp;le&nbsp;dépôt,&nbsp;le&nbsp;délai&nbsp;de&nbsp;[delai_dossier]&nbsp;mois&nbsp;ne&nbsp;pourra&nbsp;être&nbsp;modifié.&nbsp;Sans&nbsp;aucun&nbsp;courrier&nbsp;de&nbsp;l''administration&nbsp;à&nbsp;l''issue&nbsp;de&nbsp;ce&nbsp;délai&nbsp;de&nbsp;[delai_dossier]&nbsp;mois,&nbsp;vous&nbsp;pourrez&nbsp;commencer&nbsp;les&nbsp;travaux&nbsp;(2)&nbsp;quinze&nbsp;jours&nbsp;après&nbsp;la&nbsp;date&nbsp;à&nbsp;laquelle&nbsp;le&nbsp;[libelle_datd]&nbsp;tacite&nbsp;est&nbsp;acquis.&nbsp;Vous&nbsp;devrez&nbsp;péalablement&nbsp;avoir&nbsp;:<br/>&nbsp;&nbsp;&nbsp;-&nbsp;adressé&nbsp;au&nbsp;maire,&nbsp;en&nbsp;3&nbsp;exemplaires,&nbsp;une&nbsp;déclaration&nbsp;d''ouverture&nbsp;de&nbsp;chantier&nbsp;(vous&nbsp;trouverez&nbsp;un&nbsp;modèle&nbsp;de&nbsp;déclaration&nbsp;CERFA&nbsp;n°&nbsp;13407&nbsp;01&nbsp;à&nbsp;la&nbsp;mairie&nbsp;ou&nbsp;sur&nbsp;le&nbsp;site&nbsp;internet&nbsp;urbanisme&nbsp;du&nbsp;gouvernement)<br/>&nbsp;&nbsp;&nbsp;-&nbsp;affiché&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;ce&nbsp;recepissé&nbsp;sur&nbsp;lequel&nbsp;la&nbsp;mairie&nbsp;a&nbsp;mis&nbsp;son&nbsp;cachet&nbsp;pour&nbsp;attester&nbsp;la&nbsp;date&nbsp;de&nbsp;dépôt&nbsp;;<br/>&nbsp;&nbsp;&nbsp;-&nbsp;installé&nbsp;sur&nbsp;le&nbsp;terrain,&nbsp;pendant&nbsp;toute&nbsp;la&nbsp;durée&nbsp;du&nbsp;chantier,&nbsp;un&nbsp;panneau&nbsp;visible&nbsp;de&nbsp;la&nbsp;voie&nbsp;publique&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;(vous&nbsp;trouverez&nbsp;le&nbsp;modèle&nbsp;de&nbsp;panneau&nbsp;à&nbsp;la&nbsp;mairie,&nbsp;sur&nbsp;le&nbsp;site&nbsp;internet&nbsp;urbanisme&nbsp;du&nbsp;gouvernement,&nbsp;ainsi&nbsp;que&nbsp;dans&nbsp;la&nbsp;plupart&nbsp;des&nbsp;magasins&nbsp;de&nbsp;matériaux).<br/><br/>*&nbsp;ATTENTION&nbsp;:&nbsp;le&nbsp;permis&nbsp;n''est&nbsp;définitif&nbsp;qu''en&nbsp;l''absence&nbsp;de&nbsp;recours&nbsp;ou&nbsp;de&nbsp;retrait&nbsp;:<br/>&nbsp;&nbsp;&nbsp;-&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;2&nbsp;mois&nbsp;à&nbsp;compter&nbsp;de&nbsp;l''affichage&nbsp;sur&nbsp;le&nbsp;terrain,&nbsp;sa&nbsp;légalité&nbsp;peut&nbsp;être&nbsp;contestée&nbsp;par&nbsp;un&nbsp;tiers.&nbsp;Dans&nbsp;ce&nbsp;cas&nbsp;l''auteur&nbsp;du&nbsp;recours&nbsp;est&nbsp;tenu&nbsp;de&nbsp;vous&nbsp;en&nbsp;informer&nbsp;au&nbsp;plus&nbsp;tard&nbsp;quinze&nbsp;jours&nbsp;après&nbsp;le&nbsp;dépôt&nbsp;du&nbsp;recours.<br/>&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;3&nbsp;mois&nbsp;après&nbsp;la&nbsp;date&nbsp;de&nbsp;[libelle_datd],&nbsp;l''autorité&nbsp;compétente&nbsp;peut&nbsp;le&nbsp;retirer,&nbsp;si&nbsp;elle&nbsp;l''estime&nbsp;illégal.&nbsp;Elle&nbsp;est&nbsp;tenue&nbsp;de&nbsp;vous&nbsp;en&nbsp;informer&nbsp;préalablement&nbsp;et&nbsp;de&nbsp;vous&nbsp;permettre&nbsp;de&nbsp;répondre&nbsp;à&nbsp;ses&nbsp;observations.<br/><br pagebreak="true" /><br/>Le&nbsp;projet&nbsp;ayant&nbsp;fait&nbsp;l''objet&nbsp;de&nbsp;la&nbsp;demande&nbsp;de&nbsp;[libelle_datd]&nbsp;dont&nbsp;les&nbsp;références&nbsp;sont&nbsp;indiquées&nbsp;dans&nbsp;le&nbsp;cadre&nbsp;ci-dessus&nbsp;déposé&nbsp;à&nbsp;la&nbsp;mairie&nbsp;le&nbsp;[date_depot_dossier]&nbsp;fera&nbsp;l''objet&nbsp;d''un&nbsp;permis&nbsp;tacite&nbsp;(1)&nbsp;à&nbsp;défaut&nbsp;de&nbsp;réponse&nbsp;de&nbsp;l''administration&nbsp;[delai_dossier]&nbsp;mois&nbsp;après&nbsp;cette&nbsp;date.&nbsp;Les&nbsp;travaux&nbsp;(2)&nbsp;pourront&nbsp;alors&nbsp;être&nbsp;exécutés&nbsp;après&nbsp;affichage&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;du&nbsp;présent&nbsp;récépissé&nbsp;et&nbsp;d''un&nbsp;panneau&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;conforme&nbsp;au&nbsp;modèle&nbsp;réglementaire.<br/><br/><br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville&nbsp;,&nbsp;le&nbsp;&nbsp;&datecourrier<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cachet&nbsp;de&nbsp;la&nbsp;mairie&nbsp;et&nbsp;signature&nbsp;du&nbsp;receveur<br/><br/><br/><br/><br/><br/><br/><br/><br/>(1)&nbsp;Permis&nbsp;tacite&nbsp;:&nbsp;afin&nbsp;de&nbsp;vous&nbsp;éviter&nbsp;d''être&nbsp;en&nbsp;infraction,&nbsp;il&nbsp;vous&nbsp;est&nbsp;recommandé,&nbsp;dans&nbsp;le&nbsp;cas&nbsp;d''un&nbsp;permis&nbsp;tacite,&nbsp;de&nbsp;vous&nbsp;assurer&nbsp;auprès&nbsp;de&nbsp;l''administration&nbsp;de&nbsp;la&nbsp;légalité&nbsp;dudit&nbsp;permis&nbsp;avant&nbsp;tout&nbsp;commencement&nbsp;de&nbsp;travaux.&nbsp;Sur&nbsp;simple&nbsp;demande&nbsp;de&nbsp;votre&nbsp;part,&nbsp;le&nbsp;maire&nbsp;pourra&nbsp;alors&nbsp;vous&nbsp;délivrer&nbsp;une&nbsp;attestation&nbsp;certifiant&nbsp;qu''aucune&nbsp;décision&nbsp;de&nbsp;refus&nbsp;n''a&nbsp;été&nbsp;prise&nbsp;à&nbsp;votre&nbsp;insu.<br/>(2)&nbsp;Certains&nbsp;travaux&nbsp;ne&nbsp;peuvent&nbsp;pas&nbsp;être&nbsp;commencés&nbsp;dès&nbsp;la&nbsp;délivrance&nbsp;de&nbsp;[libelle_datd]&nbsp;et&nbsp;doivent&nbsp;être&nbsp;différés&nbsp;:&nbsp;c''est&nbsp;le&nbsp;cas&nbsp;des&nbsp;travaux&nbsp;situés&nbsp;dans&nbsp;un&nbsp;site&nbsp;classé.&nbsp;Vous&nbsp;pouvez&nbsp;vérifier&nbsp;auprès&nbsp;de&nbsp;la&nbsp;mairie&nbsp;que&nbsp;votre&nbsp;projet&nbsp;ne&nbsp;rentre&nbsp;pas&nbsp;dans&nbsp;ce&nbsp;cas.<br/><br/><br/><br/><br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFORMATIONS&nbsp;A&nbsp;LIRE&nbsp;ATTENTIVEMENT:<br/><br/>DELAIS&nbsp;ET&nbsp;VOIES&nbsp;DE&nbsp;RECOURS&nbsp;:<br/>Le&nbsp;permis&nbsp;tacite&nbsp;peut&nbsp;faire&nbsp;l''objet&nbsp;d''un&nbsp;recours&nbsp;gracieux&nbsp;ou&nbsp;d''un&nbsp;recours&nbsp;contentieux&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;du&nbsp;premier&nbsp;jour&nbsp;d''une&nbsp;période&nbsp;continue&nbsp;de&nbsp;2&nbsp;mois&nbsp;d''affichage&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;d''un&nbsp;panneau&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;et&nbsp;visible&nbsp;de&nbsp;la&nbsp;voie&nbsp;publique&nbsp;(art&nbsp;R&nbsp;600-2&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/>L''auteur&nbsp;du&nbsp;recours&nbsp;est&nbsp;tenu,&nbsp;à&nbsp;peine&nbsp;d''irrecevabilité,&nbsp;de&nbsp;notifier&nbsp;copie&nbsp;de&nbsp;celui-ci&nbsp;à&nbsp;l''auteur&nbsp;de&nbsp;la&nbsp;décision&nbsp;et&nbsp;au&nbsp;titulaire&nbsp;de&nbsp;l''autorisation&nbsp;(art&nbsp;R&nbsp;600-1&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/><br/>DUREE&nbsp;DE&nbsp;VALIDITE&nbsp;DU&nbsp;PERMIS&nbsp;:&nbsp;conformément&nbsp;à&nbsp;l''article&nbsp;R.424-17&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;l''autorisation&nbsp;est&nbsp;périmée&nbsp;si&nbsp;les&nbsp;travaux&nbsp;ne&nbsp;sont&nbsp;pas&nbsp;entrepris&nbsp;dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;deux&nbsp;ans&nbsp;à&nbsp;compter&nbsp;de&nbsp;sa&nbsp;notification&nbsp;au(x)&nbsp;bénéficiaire(s).&nbsp;IL&nbsp;en&nbsp;est&nbsp;de&nbsp;même&nbsp;si,&nbsp;passé&nbsp;ce&nbsp;délai,&nbsp;les&nbsp;travaux&nbsp;sont&nbsp;interrompus&nbsp;pendant&nbsp;un&nbsp;délai&nbsp;supérieur&nbsp;à&nbsp;une&nbsp;année.&nbsp;En&nbsp;cas&nbsp;de&nbsp;recours&nbsp;le&nbsp;délai&nbsp;de&nbsp;validité&nbsp;du&nbsp;permis&nbsp;et&nbsp;suspendu&nbsp;jusqu''au&nbsp;prononcé&nbsp;d''une&nbsp;décision&nbsp;juridictionnelle&nbsp;irrévocable.&nbsp;L''autorisation&nbsp;peut&nbsp;être&nbsp;prorogée&nbsp;par&nbsp;périodes&nbsp;d''une&nbsp;année&nbsp;si&nbsp;les&nbsp;prescriptions&nbsp;d''urbanisme,&nbsp;les&nbsp;servitudes&nbsp;d''urbanisme&nbsp;de&nbsp;tous&nbsp;ordres&nbsp;et&nbsp;le&nbsp;régime&nbsp;des&nbsp;taxes&nbsp;et&nbsp;participations&nbsp;n''ont&nbsp;pas&nbsp;évolué.&nbsp;Vous&nbsp;pouvez&nbsp;présenter&nbsp;une&nbsp;demande&nbsp;de&nbsp;prorogation&nbsp;sur&nbsp;papier&nbsp;libre,&nbsp;accompagnée&nbsp;de&nbsp;l''autorisation&nbsp;pour&nbsp;laquelle&nbsp;vous&nbsp;demandez&nbsp;la&nbsp;prorogation,&nbsp;au&nbsp;moins&nbsp;deux&nbsp;mois&nbsp;avant&nbsp;l''expiration&nbsp;du&nbsp;délai&nbsp;de&nbsp;validité.<br/><br/>L''autorisation&nbsp;est&nbsp;délivrée&nbsp;sous&nbsp;réserve&nbsp;du&nbsp;DROIT&nbsp;DES&nbsp;TIERS&nbsp;:&nbsp;elle&nbsp;a&nbsp;pour&nbsp;objet&nbsp;de&nbsp;vérifier&nbsp;la&nbsp;conformité&nbsp;du&nbsp;projet&nbsp;aux&nbsp;règles&nbsp;et&nbsp;servitudes&nbsp;d''urbanisme.&nbsp;Elle&nbsp;n''a&nbsp;pas&nbsp;pour&nbsp;objet&nbsp;de&nbsp;vérifier&nbsp;que&nbsp;le&nbsp;projet&nbsp;respecte&nbsp;les&nbsp;autres&nbsp;réglementations&nbsp;et&nbsp;les&nbsp;règles&nbsp;de&nbsp;droit&nbsp;privé.&nbsp;Toute&nbsp;personne&nbsp;s''estimant&nbsp;lésée&nbsp;par&nbsp;la&nbsp;méconnaissance&nbsp;du&nbsp;droit&nbsp;de&nbsp;propriété&nbsp;ou&nbsp;d''autres&nbsp;dispositions&nbsp;de&nbsp;droit&nbsp;privé&nbsp;peut&nbsp;donc&nbsp;faire&nbsp;valoir&nbsp;ses&nbsp;droits&nbsp;en&nbsp;saisissant&nbsp;les&nbsp;tribunaux&nbsp;civils,&nbsp;même&nbsp;si&nbsp;l''autorisation&nbsp;respecte&nbsp;les&nbsp;règles&nbsp;d''urbanisme.<br/><br/>Les&nbsp;obligations&nbsp;du&nbsp;(ou&nbsp;des)&nbsp;bénéficiaire(s)&nbsp;de&nbsp;l''autorisation&nbsp;:&nbsp;il&nbsp;doit&nbsp;souscrire&nbsp;l''assurance&nbsp;de&nbsp;dommages&nbsp;prévue&nbsp;par&nbsp;l''article&nbsp;L242-1&nbsp;du&nbsp;code&nbsp;des&nbsp;assurances.</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (27, 1, 'piececomplementaire', 'NOTIFICATION D''UNE DEMANDE DE PIECES COMPLEMENTAIRES', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Madame,&nbsp;Monsieur,<br/><br/>Vous&nbsp;avez&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]&nbsp;une&nbsp;demande&nbsp;de&nbsp;[libelle_datd].<br/><br/>Lors&nbsp;de&nbsp;ce&nbsp;dépôt,&nbsp;le&nbsp;récépissé&nbsp;de&nbsp;votre&nbsp;dossier&nbsp;indiquait&nbsp;qu''en&nbsp;cas&nbsp;de&nbsp;silence&nbsp;de&nbsp;l''Administration&nbsp;à&nbsp;la&nbsp;fin&nbsp;du&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;droit&nbsp;commun&nbsp;de&nbsp;[delai_dossier]&nbsp;&nbsp;mois,&nbsp;vous&nbsp;bénéficierez&nbsp;d''un&nbsp;[libelle_datd]&nbsp;tacite.<br/><br/>Le&nbsp;récépissé&nbsp;vous&nbsp;informait&nbsp;également&nbsp;de&nbsp;la&nbsp;possibilité&nbsp;de&nbsp;modification&nbsp;de&nbsp;ce&nbsp;délai&nbsp;dans&nbsp;les&nbsp;conditions&nbsp;fixées&nbsp;au&nbsp;code&nbsp;de&nbsp;l''Urbanisme.<br/><br/>Je&nbsp;vous&nbsp;informe&nbsp;que&nbsp;votre&nbsp;projet&nbsp;rentre&nbsp;dans&nbsp;ce&nbsp;cadre&nbsp;&nbsp;du&nbsp;fait&nbsp;qu''il&nbsp;est&nbsp;soumis,&nbsp;en&nbsp;raison&nbsp;de&nbsp;son&nbsp;emplacement,&nbsp;de&nbsp;son&nbsp;utilisation&nbsp;ou&nbsp;de&nbsp;sa&nbsp;nature&nbsp;à&nbsp;un&nbsp;régime&nbsp;d''autorisation&nbsp;ou&nbsp;à&nbsp;des&nbsp;prescriptions&nbsp;prévues&nbsp;par&nbsp;une&nbsp;autre&nbsp;législation&nbsp;ou&nbsp;réglementation&nbsp;que&nbsp;le&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;et&nbsp;qu''il&nbsp;nécessite&nbsp;l''avis&nbsp;d''un&nbsp;service&nbsp;ou&nbsp;d''une&nbsp;commission&nbsp;ne&nbsp;relevant&nbsp;pas&nbsp;de&nbsp;mon&nbsp;autorité.<br/><br/>Par&nbsp;&nbsp;conséquent,&nbsp;le&nbsp;délai&nbsp;d''instruction&nbsp;pour&nbsp;votre&nbsp;dossier&nbsp;est&nbsp;de&nbsp;&nbsp;....&nbsp;mois&nbsp;en&nbsp;application&nbsp;des&nbsp;articles&nbsp;R&nbsp;423-23&nbsp;&nbsp;à&nbsp;R&nbsp;423-33&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme.<br/><br/>&nbsp;Par&nbsp;ailleurs,&nbsp;je&nbsp;vous&nbsp;informe&nbsp;que&nbsp;mes&nbsp;services&nbsp;ne&nbsp;peuvent&nbsp;entreprendre&nbsp;l''instruction&nbsp;de&nbsp;votre&nbsp;demande&nbsp;de&nbsp;[libelle_datd],&nbsp;enregistrée&nbsp;sous&nbsp;les&nbsp;références&nbsp;portées&nbsp;dans&nbsp;le&nbsp;cadre&nbsp;ci&nbsp;dessus,&nbsp;car&nbsp;elle&nbsp;est&nbsp;INCOMPLETE.<br/><br/>Il&nbsp;convient&nbsp;donc&nbsp;que&nbsp;vous&nbsp;me&nbsp;fassiez&nbsp;parvenir&nbsp;les&nbsp;pièces&nbsp;suivantes&nbsp;:<br/>&nbsp;[complement_instruction]<br/><br/>Le&nbsp;délai&nbsp;d''instruction&nbsp;notifié&nbsp;ci-dessus&nbsp;commencera&nbsp;à&nbsp;courir&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;réception&nbsp;&nbsp;de&nbsp;l''intégralité&nbsp;des&nbsp;pièces&nbsp;et&nbsp;informations&nbsp;manquantes&nbsp;en&nbsp;mairie&nbsp;d''Arles&nbsp;Service&nbsp;permis&nbsp;de&nbsp;construire&nbsp;-&nbsp;5,&nbsp;rue&nbsp;du&nbsp;cloître).<br/><br/>Vous&nbsp;disposez&nbsp;de&nbsp;TROIS&nbsp;MOIS&nbsp;&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;réception&nbsp;de&nbsp;la&nbsp;présente&nbsp;lettre,&nbsp;pour&nbsp;faire&nbsp;parvenir&nbsp;à&nbsp;la&nbsp;mairie&nbsp;d''Arles&nbsp;,&nbsp;service&nbsp;Gestion&nbsp;du&nbsp;Territoire&nbsp;-&nbsp;5,&nbsp;rue&nbsp;du&nbsp;Cloître,&nbsp;l''intégralité&nbsp;des&nbsp;pièces&nbsp;et&nbsp;informations&nbsp;manquantes&nbsp;.<br/><br/>&nbsp;&nbsp;Le&nbsp;défaut&nbsp;de&nbsp;production&nbsp;de&nbsp;l''ensemble&nbsp;des&nbsp;pièces&nbsp;et&nbsp;informations&nbsp;manquantes&nbsp;dans&nbsp;ce&nbsp;délai&nbsp;de&nbsp;TROIS&nbsp;MOIS&nbsp;,&nbsp;vaudra&nbsp;&nbsp;DECISION&nbsp;TACITE&nbsp;DE&nbsp;REJET&nbsp;de&nbsp;votre&nbsp;dossier&nbsp;de&nbsp;[libelle_datd]&nbsp;&nbsp;(art.423-39b&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme).<br/><br/>Toutefois,&nbsp;si&nbsp;la&nbsp;consultation&nbsp;de&nbsp;l''Architecte&nbsp;des&nbsp;Bâtiments&nbsp;de&nbsp;France&nbsp;est&nbsp;nécessaire&nbsp;pour&nbsp;votre&nbsp;projet&nbsp;et&nbsp;s''il&nbsp;émet&nbsp;un&nbsp;avis&nbsp;défavorable&nbsp;ou&nbsp;un&nbsp;avis&nbsp;favorable&nbsp;assorti&nbsp;de&nbsp;prescriptions&nbsp;avant&nbsp;la&nbsp;fin&nbsp;de&nbsp;votre&nbsp;délai&nbsp;d''instruction,&nbsp;vous&nbsp;ne&nbsp;pourrez&nbsp;plus&nbsp;vous&nbsp;prévaloir&nbsp;d''un&nbsp;permis&nbsp;tacite&nbsp;(&nbsp;article&nbsp;R&nbsp;424-3&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme).&nbsp;Dans&nbsp;une&nbsp;telle&nbsp;hypothèse,&nbsp;vous&nbsp;en&nbsp;seriez&nbsp;directement&nbsp;informé&nbsp;par&nbsp;les&nbsp;services&nbsp;de&nbsp;l''Architecte&nbsp;des&nbsp;Bâtiments&nbsp;de&nbsp;France(&nbsp;SDAP&nbsp;des&nbsp;Bouches&nbsp;du&nbsp;Rhône-3&nbsp;rue&nbsp;du&nbsp;Cloître&nbsp;13200&nbsp;Arles).&nbsp;Le&nbsp;silence&nbsp;de&nbsp;l''Administration&nbsp;équivaudrait&nbsp;alors&nbsp;à&nbsp;un&nbsp;REFUS.<br/><br/>J''appelle&nbsp;également&nbsp;votre&nbsp;attention&nbsp;sur&nbsp;le&nbsp;fait&nbsp;que&nbsp;votre&nbsp;délai&nbsp;d''instruction&nbsp;pourrait&nbsp;faire&nbsp;l''objet&nbsp;d''une&nbsp;prolongation&nbsp;exceptionnelle&nbsp;conformément&nbsp;aux&nbsp;articles&nbsp;R&nbsp;423-34&nbsp;à&nbsp;R&nbsp;423-37&nbsp;du&nbsp;code&nbsp;de&nbsp;l''Urbanisme.<br/>Si&nbsp;l''une&nbsp;de&nbsp;ces&nbsp;situations&nbsp;se&nbsp;présente&nbsp;sur&nbsp;votre&nbsp;dossier,&nbsp;vous&nbsp;serez&nbsp;informé&nbsp;par&nbsp;courrier&nbsp;avant&nbsp;l''expiration&nbsp;du&nbsp;délai&nbsp;d''instruction&nbsp;fixé&nbsp;ci-dessus.<br/><br/><br/><br/><br/>Je&nbsp;vous&nbsp;prie&nbsp;d''agréer,&nbsp;Madame,&nbsp;Monsieur,&nbsp;l''expression&nbsp;de&nbsp;ma&nbsp;considération&nbsp;distinguée<br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville&nbsp;,&nbsp;le&nbsp;&nbsp;[date_rejet_dossier]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Le&nbsp;Maire&nbsp;Adjoint&nbsp;de&nbsp;la&nbsp;ville&nbsp;d''&ville<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Délégué&nbsp;à&nbsp;l''Urbanisme,&nbsp;l''Habitat,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;la&nbsp;Politique&nbsp;Foncière<br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nom<br/><br/><br/>Nb&nbsp;:&nbsp;copie&nbsp;de&nbsp;la&nbsp;présente&nbsp;lettre&nbsp;est&nbsp;transmise&nbsp;au&nbsp;représentant&nbsp;de&nbsp;l''Etat.<br/><br pagebreak="true" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFORMATION&nbsp;-&nbsp;A&nbsp;LIRE&nbsp;ATTENTIVEMENT<br/><br/><br/><br/>DELAIS&nbsp;ET&nbsp;VOIES&nbsp;DE&nbsp;RECOURS&nbsp;:<br/>le&nbsp;pétitionnaire&nbsp;qui&nbsp;désire&nbsp;contester&nbsp;la&nbsp;décision&nbsp;peut&nbsp;saisir&nbsp;le&nbsp;tribunal&nbsp;administratif&nbsp;compétent&nbsp;d''un&nbsp;recours&nbsp;contentieux&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;DEUX&nbsp;MOIS&nbsp;à&nbsp;partir&nbsp;de&nbsp;la&nbsp;transmission&nbsp;de&nbsp;la&nbsp;décision&nbsp;attaquée.&nbsp;Il&nbsp;peut&nbsp;également&nbsp;saisir&nbsp;d''un&nbsp;recours&nbsp;gracieux&nbsp;l''auteur&nbsp;de&nbsp;la&nbsp;décision&nbsp;hiérarchique,&nbsp;le&nbsp;Ministre&nbsp;chargé&nbsp;de&nbsp;l''Urbanisme&nbsp;ou&nbsp;le&nbsp;préfet&nbsp;pour&nbsp;les&nbsp;[libelle_datd]&nbsp;délivrés&nbsp;au&nbsp;nom&nbsp;de&nbsp;l''état.<br/><br/>Cette&nbsp;démarche&nbsp;prolonge&nbsp;le&nbsp;délai&nbsp;de&nbsp;recours&nbsp;qui&nbsp;doit&nbsp;alors&nbsp;être&nbsp;introduit&nbsp;dans&nbsp;les&nbsp;deux&nbsp;mois&nbsp;suivant&nbsp;la&nbsp;réponse&nbsp;(l''absence&nbsp;de&nbsp;réponse&nbsp;au&nbsp;terme&nbsp;de&nbsp;2&nbsp;mois&nbsp;vaut&nbsp;rejet&nbsp;implicite)</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (31, 1, 'piece_complementaire_service', 'NOTIFICATION D''UNE DEMANDE DE PIECES COMPLEMENTAIRES', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Madame,&nbsp;Monsieur,<br/><br/>Vous&nbsp;avez&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]&nbsp;une&nbsp;demande&nbsp;de&nbsp;[libelle_datd].<br/><br/>Lors&nbsp;de&nbsp;ce&nbsp;dépôt,&nbsp;le&nbsp;récépissé&nbsp;de&nbsp;votre&nbsp;dossier&nbsp;indiquait&nbsp;qu''en&nbsp;cas&nbsp;de&nbsp;silence&nbsp;de&nbsp;l''Administration&nbsp;à&nbsp;la&nbsp;fin&nbsp;du&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;droit&nbsp;commun&nbsp;de&nbsp;.&nbsp;.&nbsp;.&nbsp;.&nbsp;&nbsp;.&nbsp;mois,&nbsp;vous&nbsp;bénéficierez&nbsp;d''un&nbsp;[libelle_datd]&nbsp;tacite.<br/><br/>Une&nbsp;majoration&nbsp;de&nbsp;délai&nbsp;vous&nbsp;a&nbsp;été&nbsp;notifiée.<br/>Un&nbsp;des&nbsp;services&nbsp;consulté&nbsp;au&nbsp;cours&nbsp;de&nbsp;l''instruction&nbsp;de&nbsp;votre&nbsp;dossier&nbsp;sollicite&nbsp;des&nbsp;pièces&nbsp;complémentaires<br/>Il&nbsp;convient&nbsp;donc&nbsp;que&nbsp;vous&nbsp;me&nbsp;fassiez&nbsp;parvenir&nbsp;les&nbsp;pièces&nbsp;suivantes&nbsp;:<br/>&nbsp;[complement_instruction]<br/><br/>En&nbsp;l''absence&nbsp;de&nbsp;ces&nbsp;éléments,&nbsp;la&nbsp;demande&nbsp;s''acheminerait&nbsp;vers&nbsp;un&nbsp;refus.<br/><br/>Je&nbsp;vous&nbsp;prie&nbsp;d''agréer,&nbsp;Madame,&nbsp;Monsieur,&nbsp;l''expression&nbsp;de&nbsp;ma&nbsp;considération&nbsp;distinguée<br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville&nbsp;,&nbsp;le&nbsp;&nbsp;&aujourdhui<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Le&nbsp;Maire&nbsp;&nbsp;Adjoint&nbsp;de&nbsp;la&nbsp;ville&nbsp;d''&ville<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Délégué&nbsp;à&nbsp;l''Urbanisme,&nbsp;l''Habitat,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;la&nbsp;Politique&nbsp;Foncière<br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nom<br/><br/><br/>Nb&nbsp;:&nbsp;copie&nbsp;de&nbsp;la&nbsp;présente&nbsp;lettre&nbsp;est&nbsp;transmise&nbsp;au&nbsp;représentant&nbsp;de&nbsp;l''Etat.<br/><br pagebreak="true" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFORMATION&nbsp;-&nbsp;A&nbsp;LIRE&nbsp;ATTENTIVEMENT<br/><br/><br/><br/>DELAIS&nbsp;ET&nbsp;VOIES&nbsp;DE&nbsp;RECOURS&nbsp;:<br/>le&nbsp;pétitionnaire&nbsp;qui&nbsp;désire&nbsp;contester&nbsp;la&nbsp;décision&nbsp;peut&nbsp;saisir&nbsp;le&nbsp;tribunal&nbsp;administratif&nbsp;compétent&nbsp;d''un&nbsp;recours&nbsp;contentieux&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;DEUX&nbsp;MOIS&nbsp;à&nbsp;partir&nbsp;de&nbsp;la&nbsp;transmission&nbsp;de&nbsp;la&nbsp;décision&nbsp;attaquée.&nbsp;Il&nbsp;peut&nbsp;également&nbsp;saisir&nbsp;d''un&nbsp;recours&nbsp;gracieux&nbsp;l''auteur&nbsp;de&nbsp;la&nbsp;décision&nbsp;hiérarchique,&nbsp;le&nbsp;Ministre&nbsp;chargé&nbsp;de&nbsp;l''Urbanisme&nbsp;ou&nbsp;le&nbsp;préfet&nbsp;pour&nbsp;les&nbsp;[libelle_datd]&nbsp;délivrés&nbsp;au&nbsp;nom&nbsp;de&nbsp;l''état.<br/><br/>Cette&nbsp;démarche&nbsp;prolonge&nbsp;le&nbsp;délai&nbsp;de&nbsp;recours&nbsp;qui&nbsp;doit&nbsp;alors&nbsp;être&nbsp;introduit&nbsp;dans&nbsp;les&nbsp;deux&nbsp;mois&nbsp;suivant&nbsp;la&nbsp;réponse&nbsp;(l''absence&nbsp;de&nbsp;réponse&nbsp;au&nbsp;terme&nbsp;de&nbsp;2&nbsp;mois&nbsp;vaut&nbsp;rejet&nbsp;implicite)</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (6, 1, 'standard', 'import du 17/11/2011', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Madame,&nbsp;Monsieur,<br/><br/><br/>[complement_instruction]<br/><br/><br/>Je&nbsp;vous&nbsp;prie&nbsp;d''agréer,&nbsp;Madame,&nbsp;Monsieur,&nbsp;l''expression&nbsp;de&nbsp;ma&nbsp;considération&nbsp;distinguée.<br/><br/><br/><br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville&nbsp;,&nbsp;le<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Le&nbsp;Maire&nbsp;Adjoint&nbsp;de&nbsp;la&nbsp;ville&nbsp;d''&ville<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Délégué&nbsp;à&nbsp;l''urbanisme,&nbsp;l''Habitat<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;la&nbsp;PoitiqueFoncière<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nom</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (33, 1, 'majoration_ss_perimetre_mh', 'MAJORATION DU DELAI D''INSTRUCTION', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;"></span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (32, 1, 'prolongationnontacite', 'PROLONGATION DU DELAI D''INSTRUCTION', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Madame,&nbsp;Monsieur,<br/>J''ai&nbsp;l''honneur&nbsp;de&nbsp;vous&nbsp;informer&nbsp;que&nbsp;&nbsp;votre&nbsp;projet&nbsp;est&nbsp;subordonné&nbsp;à&nbsp;l''accord&nbsp;ou&nbsp;à&nbsp;une&nbsp;autorisation&nbsp;prévu&nbsp;par&nbsp;une&nbsp;autre&nbsp;législation&nbsp;ou&nbsp;fait&nbsp;l''objet&nbsp;d''une&nbsp;évocation&nbsp;par&nbsp;un&nbsp;ministre&nbsp;chargé&nbsp;des&nbsp;sites,&nbsp;de&nbsp;la&nbsp;protection&nbsp;de&nbsp;la&nbsp;nature,&nbsp;des&nbsp;monuments&nbsp;historiques&nbsp;et&nbsp;des&nbsp;espaces&nbsp;protégés.<br/><br/>En&nbsp;conséquence,&nbsp;le&nbsp;délai&nbsp;d''instruction&nbsp;initialement&nbsp;fixé&nbsp;par&nbsp;les&nbsp;articles&nbsp;R&nbsp;423-23&nbsp;à&nbsp;R&nbsp;423-33&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme&nbsp;est&nbsp;MODIFIE.<br/><br/>Le&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;votre&nbsp;[libelle_datd]&nbsp;est&nbsp;donc&nbsp;prolongé&nbsp;par&nbsp;la&nbsp;loi&nbsp;(Art.&nbsp;R423-34&nbsp;à&nbsp;R.423-37&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)&nbsp;et&nbsp;la&nbsp;nouvelle&nbsp;date&nbsp;limite&nbsp;d''instruction&nbsp;est&nbsp;fixée&nbsp;au&nbsp;&nbsp;[date_limite_dossier].<br/><br/>La&nbsp;décision&nbsp;doit&nbsp;donc&nbsp;vous&nbsp;être&nbsp;notifiée&nbsp;avant&nbsp;expiration&nbsp;de&nbsp;ce&nbsp;délai.<br/><br/>En&nbsp;l''absence&nbsp;d''une&nbsp;notification&nbsp;d''une&nbsp;décision&nbsp;à&nbsp;la&nbsp;date&nbsp;du&nbsp;[date_limite_dossier]&nbsp;par&nbsp;:<br/>-&nbsp;&nbsp;l''architecte&nbsp;des&nbsp;bâtiments&nbsp;de&nbsp;France&nbsp;sur&nbsp;le&nbsp;projet&nbsp;indiquant&nbsp;qu''un&nbsp;permis&nbsp;tacite&nbsp;ne&nbsp;peut&nbsp;être&nbsp;obtenu&nbsp;(article&nbsp;R424-4&nbsp;du&nbsp;code&nbsp;l''urbanisme)<br/>-&nbsp;par&nbsp;l''autorité&nbsp;compétente&nbsp;(1)<br/><br/>la&nbsp;présente&nbsp;lettre&nbsp;vaudra&nbsp;[libelle_datd]&nbsp;tacite(2)<br/><br/>Dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;de&nbsp;décision&nbsp;tacite,&nbsp;l''autorité&nbsp;compétente&nbsp;prendra&nbsp;un&nbsp;arrêté&nbsp;fixant&nbsp;les&nbsp;participations&nbsp;applicables&nbsp;au&nbsp;projet.<br/><br/>Je&nbsp;vous&nbsp;prie&nbsp;d''agréer,&nbsp;Madame,&nbsp;Monsieur,&nbsp;l''expression&nbsp;de&nbsp;ma&nbsp;considération&nbsp;distinguée.<br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville&nbsp;,&nbsp;le<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Le&nbsp;Maire&nbsp;Adjoint&nbsp;de&nbsp;la&nbsp;ville&nbsp;d''&ville<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Délégué&nbsp;à&nbsp;l''Urbanisme,&nbsp;l''Habitat<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;LA&nbsp;Politique&nbsp;Foncière<br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nom<br/><br/><br/><br/><br/>NB&nbsp;:&nbsp;Copie&nbsp;de&nbsp;la&nbsp;présente&nbsp;lettre&nbsp;est&nbsp;transmise&nbsp;au&nbsp;représentant&nbsp;de&nbsp;l''Etat&nbsp;dans&nbsp;les&nbsp;conditions&nbsp;définies&nbsp;aux&nbsp;articles&nbsp;L2131-1&nbsp;et&nbsp;L2131&nbsp;-2&nbsp;du&nbsp;&nbsp;code&nbsp;des&nbsp;collectivités&nbsp;territoriales.<br/><br/>(1)&nbsp;le&nbsp;maire&nbsp;ou&nbsp;le&nbsp;préfet&nbsp;en&nbsp;délivre&nbsp;certificat&nbsp;sur&nbsp;simple&nbsp;demande<br/>(2)&nbsp;Les&nbsp;travaux&nbsp;ne&nbsp;peuvent&nbsp;être&nbsp;entrepris,&nbsp;conformément&nbsp;au&nbsp;projet&nbsp;décrit&nbsp;dans&nbsp;la&nbsp;demande,&nbsp;qu''à&nbsp;compter&nbsp;de&nbsp;la&nbsp;décision&nbsp;tacite.<br/><br/>TOUTEFOIS,&nbsp;LE&nbsp;PERMIS&nbsp;S''IL&nbsp;EST&nbsp;ILLEGAL&nbsp;PEUT&nbsp;ETRE&nbsp;RETIRE&nbsp;PAR&nbsp;L''AUTORITE&nbsp;COMPETENTE&nbsp;PENDANT&nbsp;LE&nbsp;DELAI&nbsp;LEGAL&nbsp;DE&nbsp;RECOURS&nbsp;CONTENTIEUX.<br/><br/>Aussi,&nbsp;afin&nbsp;de&nbsp;vous&nbsp;éviter&nbsp;d''être&nbsp;en&nbsp;infraction,&nbsp;il&nbsp;vous&nbsp;est&nbsp;recommandé,&nbsp;dans&nbsp;le&nbsp;cas&nbsp;de&nbsp;[libelle_datd]&nbsp;tacite,&nbsp;de&nbsp;vous&nbsp;assurer&nbsp;auprès&nbsp;de&nbsp;mes&nbsp;services&nbsp;de&nbsp;la&nbsp;légalité&nbsp;dudit&nbsp;permis,&nbsp;avant&nbsp;tout&nbsp;commencement&nbsp;de&nbsp;travaux.&nbsp;Dans&nbsp;cette&nbsp;éventualité,&nbsp;il&nbsp;vous&nbsp;sera&nbsp;délivré&nbsp;sous&nbsp;quinzaine&nbsp;une&nbsp;attestation&nbsp;certifiant&nbsp;qu''aucune&nbsp;décision&nbsp;de&nbsp;refus&nbsp;n''a&nbsp;été&nbsp;prise&nbsp;à&nbsp;votre&nbsp;insu.<br/>En&nbsp;effet,&nbsp;si&nbsp;le/la&nbsp;[libelle_datd]&nbsp;tacite&nbsp;était&nbsp;irrégulier,&nbsp;il/elle&nbsp;serait&nbsp;retiré(e)&nbsp;et&nbsp;les&nbsp;tribunaux&nbsp;pourraient&nbsp;vous&nbsp;astreindre&nbsp;de&nbsp;démolir&nbsp;la&nbsp;construction&nbsp;entreprise.<br/>&nbsp;<br pagebreak="true" /><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFORMATION-A&nbsp;LIRE&nbsp;ATTENTIVEMENT&nbsp;:<br/><br/><br/>DELAIS&nbsp;ET&nbsp;VOIES&nbsp;DE&nbsp;RECOURS&nbsp;:<br/>Le&nbsp;permis&nbsp;peut&nbsp;faire&nbsp;l''objet&nbsp;d''un&nbsp;recours&nbsp;gracieux&nbsp;ou&nbsp;d&nbsp;un&nbsp;recours&nbsp;contentieux&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;du&nbsp;premier&nbsp;jour&nbsp;d''une&nbsp;période&nbsp;continue&nbsp;de&nbsp;2&nbsp;mois&nbsp;d''affichage&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;d''un&nbsp;panneau&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;et&nbsp;visible&nbsp;de&nbsp;la&nbsp;voie&nbsp;publique&nbsp;(art&nbsp;R&nbsp;600-2&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/>L''auteur&nbsp;du&nbsp;recours&nbsp;est&nbsp;tenu,&nbsp;à&nbsp;peine&nbsp;d''irrecevabilité,&nbsp;de&nbsp;notifier&nbsp;copie&nbsp;de&nbsp;celui-ci&nbsp;à&nbsp;l''auteur&nbsp;de&nbsp;la&nbsp;décision&nbsp;et&nbsp;au&nbsp;titulaire&nbsp;de&nbsp;l''autorisation&nbsp;(art&nbsp;R&nbsp;600-1&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/><br/>DUREE&nbsp;DE&nbsp;VALIDITE&nbsp;DU&nbsp;PERMIS&nbsp;:&nbsp;conformément&nbsp;à&nbsp;l''article&nbsp;R.424-17&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme&nbsp;et&nbsp;en&nbsp;application&nbsp;du&nbsp;décret&nbsp;n°2008-1353&nbsp;du&nbsp;19&nbsp;décembre&nbsp;2008,&nbsp;l''autorisation&nbsp;est&nbsp;périmée&nbsp;si&nbsp;les&nbsp;travaux&nbsp;ne&nbsp;sont&nbsp;pas&nbsp;entrepris&nbsp;dans&nbsp;le&nbsp;délais&nbsp;de&nbsp;trois&nbsp;ans&nbsp;à&nbsp;compter&nbsp;de&nbsp;sa&nbsp;notification&nbsp;au(x)&nbsp;bénéficiaire(s).&nbsp;IL&nbsp;en&nbsp;est&nbsp;de&nbsp;même&nbsp;si,&nbsp;passé&nbsp;ce&nbsp;délai,&nbsp;les&nbsp;travaux&nbsp;sont&nbsp;interrompus&nbsp;pendant&nbsp;un&nbsp;délai&nbsp;supérieur&nbsp;à&nbsp;une&nbsp;année.&nbsp;En&nbsp;cas&nbsp;de&nbsp;recours&nbsp;le&nbsp;délai&nbsp;de&nbsp;validité&nbsp;du&nbsp;permis&nbsp;et&nbsp;suspendu&nbsp;jusqu''au&nbsp;prononcé&nbsp;d''une&nbsp;décision&nbsp;juridictionnelle&nbsp;irrévocable.&nbsp;L''autorisation&nbsp;peut&nbsp;être&nbsp;prorogée&nbsp;par&nbsp;périodes&nbsp;d''une&nbsp;année&nbsp;si&nbsp;les&nbsp;prescriptions&nbsp;d''urbanisme,&nbsp;les&nbsp;servitudes&nbsp;d''urbanisme&nbsp;de&nbsp;tous&nbsp;ordres&nbsp;et&nbsp;le&nbsp;régime&nbsp;des&nbsp;taxes&nbsp;et&nbsp;participations&nbsp;n''ont&nbsp;pas&nbsp;évolué.&nbsp;Vous&nbsp;pouvez&nbsp;présenter&nbsp;une&nbsp;demande&nbsp;de&nbsp;prorogation&nbsp;sur&nbsp;papier&nbsp;libre,&nbsp;accompagnée&nbsp;de&nbsp;l''autorisation&nbsp;pour&nbsp;laquelle&nbsp;vous&nbsp;demandez&nbsp;la&nbsp;prorogation,&nbsp;au&nbsp;moins&nbsp;deux&nbsp;mois&nbsp;avant&nbsp;l''expiration&nbsp;du&nbsp;délai&nbsp;de&nbsp;validité.<br/><br/>L''autorisation&nbsp;est&nbsp;délivrée&nbsp;sous&nbsp;réserve&nbsp;du&nbsp;DROIT&nbsp;DES&nbsp;TIERS&nbsp;:&nbsp;elle&nbsp;a&nbsp;pour&nbsp;objet&nbsp;de&nbsp;vérifier&nbsp;la&nbsp;conformité&nbsp;du&nbsp;projet&nbsp;aux&nbsp;règles&nbsp;et&nbsp;servitudes&nbsp;d''urbanisme.&nbsp;Elle&nbsp;n''a&nbsp;pas&nbsp;pour&nbsp;objet&nbsp;de&nbsp;vérifier&nbsp;que&nbsp;le&nbsp;projet&nbsp;respecte&nbsp;les&nbsp;autres&nbsp;réglementations&nbsp;et&nbsp;les&nbsp;règles&nbsp;de&nbsp;droit&nbsp;privé.&nbsp;Toute&nbsp;personne&nbsp;s''estimant&nbsp;lésée&nbsp;par&nbsp;la&nbsp;méconnaissance&nbsp;du&nbsp;droit&nbsp;de&nbsp;propriété&nbsp;ou&nbsp;d''autres&nbsp;dispositions&nbsp;de&nbsp;droit&nbsp;privé&nbsp;peut&nbsp;donc&nbsp;faire&nbsp;valoir&nbsp;ses&nbsp;droits&nbsp;en&nbsp;saisissant&nbsp;les&nbsp;tribunaux&nbsp;civils,&nbsp;même&nbsp;si&nbsp;l''autorisation&nbsp;respecte&nbsp;les&nbsp;règles&nbsp;d''urbanisme.<br/><br/>Les&nbsp;obligations&nbsp;du&nbsp;(ou&nbsp;des)&nbsp;bénéficiaire(s)&nbsp;de&nbsp;l''autorisation&nbsp;:&nbsp;il&nbsp;doit&nbsp;souscrire&nbsp;l''assurance&nbsp;de&nbsp;dommages&nbsp;prévue&nbsp;par&nbsp;l''article&nbsp;L242-1&nbsp;du&nbsp;code&nbsp;des&nbsp;assurances.<br/><br/>AFFICHAGE&nbsp;:<br/>Le/la&nbsp;[libelle_datd]&nbsp;doit&nbsp;être&nbsp;affiché&nbsp;sur&nbsp;le&nbsp;terrain,&nbsp;visible&nbsp;de&nbsp;l''extérieur&nbsp;(&nbsp;voie&nbsp;publique),&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;date&nbsp;de&nbsp;la&nbsp;décision&nbsp;tacite&nbsp;et&nbsp;pendant&nbsp;toute&nbsp;la&nbsp;durée&nbsp;du&nbsp;chantier.</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (42, 1, 'attestation_affichage', 'ATTESTATION D''AFFICHAGE REGLEMENTAIRE', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">...</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (34, 1, 'majorationtacite', 'MAJORATION DU DELAI D''INSTRUCTION', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Madame,&nbsp;Monsieur,<br/>J''ai&nbsp;l''honneur&nbsp;de&nbsp;vous&nbsp;informer&nbsp;que&nbsp;votre&nbsp;projet&nbsp;est&nbsp;soumis,&nbsp;en&nbsp;raison&nbsp;de&nbsp;son&nbsp;emplacement,&nbsp;de&nbsp;son&nbsp;utilisation&nbsp;ou&nbsp;de&nbsp;sa&nbsp;nature&nbsp;à&nbsp;un&nbsp;régime&nbsp;d''autorisation&nbsp;ou&nbsp;à&nbsp;des&nbsp;prescriptions&nbsp;prévues&nbsp;par&nbsp;une&nbsp;autre&nbsp;législation&nbsp;ou&nbsp;réglementation&nbsp;que&nbsp;le&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;et&nbsp;qu''il&nbsp;nécessite&nbsp;l''avis&nbsp;d''un&nbsp;service&nbsp;ou&nbsp;d''une&nbsp;commission&nbsp;ne&nbsp;relevant&nbsp;pas&nbsp;de&nbsp;mon&nbsp;autorité.<br/><br/>En&nbsp;conséquence,&nbsp;le&nbsp;délai&nbsp;d''instruction&nbsp;initialement&nbsp;fixé&nbsp;par&nbsp;l''article&nbsp;R&nbsp;423-23&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme&nbsp;est&nbsp;MODIFIE.<br/>Le&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;votre&nbsp;[libelle_datd]&nbsp;est&nbsp;donc&nbsp;majoré&nbsp;par&nbsp;la&nbsp;loi&nbsp;(Art.&nbsp;R423-24&nbsp;à&nbsp;R.423-33&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)&nbsp;et&nbsp;la&nbsp;nouvelle&nbsp;date&nbsp;limite&nbsp;d''instruction&nbsp;est&nbsp;fixée&nbsp;au&nbsp;&nbsp;[date_limite_dossier].<br/>La&nbsp;décision&nbsp;doit&nbsp;donc&nbsp;vous&nbsp;être&nbsp;notifiée&nbsp;&nbsp;avant&nbsp;expiration&nbsp;de&nbsp;ce&nbsp;délai.<br/><br/>Le&nbsp;défaut&nbsp;de&nbsp;notification&nbsp;d''une&nbsp;décision&nbsp;au&nbsp;[date_limite_dossier],&nbsp;vaudra&nbsp;acceptation&nbsp;tacite&nbsp;(1).<br/><br/>[complement_instruction]<br/><br/>Je&nbsp;vous&nbsp;prie&nbsp;d''agréer,&nbsp;Madame,&nbsp;Monsieur,&nbsp;l''expression&nbsp;de&nbsp;ma&nbsp;considération&nbsp;distinguée.<br/><br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville&nbsp;,&nbsp;le<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Le&nbsp;Maire&nbsp;Adjoint&nbsp;de&nbsp;la&nbsp;ville&nbsp;d''&ville<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Délégué&nbsp;à&nbsp;l''Urbanisme,&nbsp;l''Habitat,<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;la&nbsp;Politique&nbsp;Foncière<br/><br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nom<br/><br/><br/><br/>NB&nbsp;:&nbsp;Copie&nbsp;de&nbsp;la&nbsp;présente&nbsp;lettre&nbsp;est&nbsp;transmise&nbsp;au&nbsp;représentant&nbsp;de&nbsp;l''Etat&nbsp;dans&nbsp;les&nbsp;conditions&nbsp;définies&nbsp;aux&nbsp;articles&nbsp;L2131-1&nbsp;et&nbsp;L2131&nbsp;-2&nbsp;du&nbsp;&nbsp;code&nbsp;des&nbsp;collectivités&nbsp;territoriales.<br/><br pagebreak="true" /><br/><br/><br/><br/><br/>(1)&nbsp;Les&nbsp;travaux&nbsp;ne&nbsp;peuvent&nbsp;&nbsp;être&nbsp;entrepris,&nbsp;conformément&nbsp;au&nbsp;projet&nbsp;décrit&nbsp;dans&nbsp;la&nbsp;demande,&nbsp;qu''à&nbsp;compter&nbsp;de&nbsp;la&nbsp;décision&nbsp;tacite.<br/>UN&nbsp;PERMIS&nbsp;ENTACHE&nbsp;D''ILLIGALITE&nbsp;PEUT&nbsp;ETRE&nbsp;RETIRE&nbsp;PAR&nbsp;L''ADMINISTRATION&nbsp;COMPETENTE&nbsp;PENDANT&nbsp;LE&nbsp;DELAI&nbsp;LEGAL&nbsp;DE&nbsp;RECOURS&nbsp;CONTENTIEUX<br/>&nbsp;Aussi,&nbsp;afin&nbsp;de&nbsp;vous&nbsp;évitez&nbsp;d''être&nbsp;en&nbsp;infraction,&nbsp;il&nbsp;vous&nbsp;est&nbsp;recommandé,&nbsp;dans&nbsp;le&nbsp;cas&nbsp;d''une&nbsp;décision&nbsp;tacite,&nbsp;de&nbsp;vous&nbsp;assurer&nbsp;auprès&nbsp;des&nbsp;services&nbsp;municipaux&nbsp;qu''une&nbsp;décision&nbsp;de&nbsp;refus&nbsp;n''a&nbsp;été&nbsp;prise&nbsp;avant&nbsp;de&nbsp;commencer&nbsp;les&nbsp;travaux.&nbsp;Dans&nbsp;cette&nbsp;éventualité,&nbsp;il&nbsp;vous&nbsp;sera&nbsp;délivré&nbsp;sur&nbsp;simple&nbsp;demande,&nbsp;une&nbsp;attestation&nbsp;(2)&nbsp;certifiant&nbsp;qu''aucune&nbsp;décision&nbsp;de&nbsp;refus&nbsp;n''a&nbsp;été&nbsp;prise&nbsp;à&nbsp;votre&nbsp;encontre.<br/><br/>&nbsp;En&nbsp;effet,&nbsp;si&nbsp;le&nbsp;permis&nbsp;tacite,&nbsp;était&nbsp;irrégulier,&nbsp;il&nbsp;serait&nbsp;retiré&nbsp;et&nbsp;les&nbsp;tribuneaux&nbsp;pourraient&nbsp;vous&nbsp;astreintdre&nbsp;de&nbsp;remettre&nbsp;les&nbsp;lieux&nbsp;en&nbsp;leur&nbsp;état&nbsp;initial<br/><br/>Dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;date&nbsp;de&nbsp;décision&nbsp;tacite,&nbsp;il&nbsp;vous&nbsp;sera&nbsp;notifié&nbsp;éventuellement&nbsp;un&nbsp;arrêté&nbsp;fixant&nbsp;les&nbsp;taxes&nbsp;et&nbsp;participations&nbsp;applicables&nbsp;au&nbsp;projet.<br/><br/>Certains&nbsp;travaux&nbsp;ne&nbsp;peuvent&nbsp;pas&nbsp;être&nbsp;commencés&nbsp;dès&nbsp;la&nbsp;délivrance&nbsp;de&nbsp;[libelle_datd]&nbsp;et&nbsp;doivent&nbsp;être&nbsp;différés&nbsp;:&nbsp;c''est&nbsp;le&nbsp;cas&nbsp;des&nbsp;travaux&nbsp;situés&nbsp;dans&nbsp;un&nbsp;site&nbsp;classé.&nbsp;Vous&nbsp;pouvez&nbsp;vérifier&nbsp;auprès&nbsp;de&nbsp;la&nbsp;mairie&nbsp;que&nbsp;votre&nbsp;projet&nbsp;ne&nbsp;rentre&nbsp;pas&nbsp;dans&nbsp;ce&nbsp;cas.<br/><br/>(2)&nbsp;Le&nbsp;maire&nbsp;ou&nbsp;le&nbsp;préfet.<br/><br/><br pagebreak="true" /><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFORMATIONS&nbsp;A&nbsp;LIRE&nbsp;ATTENTIVEMENT:<br/><br/>DELAIS&nbsp;ET&nbsp;VOIES&nbsp;DE&nbsp;RECOURS&nbsp;:<br/>La&nbsp;déclaration&nbsp;préalable&nbsp;ou&nbsp;le&nbsp;permis&nbsp;peut&nbsp;faire&nbsp;l''objet&nbsp;d''&nbsp;un&nbsp;recours&nbsp;contentieux&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;du&nbsp;premier&nbsp;jour&nbsp;d''une&nbsp;période&nbsp;continue&nbsp;de&nbsp;2&nbsp;mois&nbsp;d''affichage&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;d''un&nbsp;panneau&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;et&nbsp;visible&nbsp;de&nbsp;la&nbsp;voie&nbsp;publique&nbsp;(art&nbsp;R&nbsp;600-2&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/>L''auteur&nbsp;du&nbsp;recours&nbsp;est&nbsp;tenu,&nbsp;à&nbsp;peine&nbsp;d''irrecevabilité,&nbsp;de&nbsp;notifier&nbsp;copie&nbsp;de&nbsp;celui-ci&nbsp;à&nbsp;l''auteur&nbsp;de&nbsp;la&nbsp;décision&nbsp;et&nbsp;au&nbsp;titulaire&nbsp;de&nbsp;l''autorisation&nbsp;(art&nbsp;R&nbsp;600-1&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/><br/>DUREE&nbsp;DE&nbsp;VALIDITE&nbsp;DU&nbsp;PERMIS&nbsp;:&nbsp;conformément&nbsp;à&nbsp;l''article&nbsp;R.424-17&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;l''autorisation&nbsp;est&nbsp;périmée&nbsp;si&nbsp;les&nbsp;travaux&nbsp;ne&nbsp;sont&nbsp;pas&nbsp;entrepris&nbsp;dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;deux&nbsp;ans&nbsp;à&nbsp;compter&nbsp;de&nbsp;sa&nbsp;notification&nbsp;au(x)&nbsp;bénéficiaire(s).&nbsp;IL&nbsp;en&nbsp;est&nbsp;de&nbsp;même&nbsp;si,&nbsp;passé&nbsp;ce&nbsp;délai,&nbsp;les&nbsp;travaux&nbsp;sont&nbsp;interrompus&nbsp;pendant&nbsp;un&nbsp;délai&nbsp;supérieur&nbsp;à&nbsp;une&nbsp;année.&nbsp;En&nbsp;cas&nbsp;de&nbsp;recours&nbsp;le&nbsp;délai&nbsp;de&nbsp;validité&nbsp;du&nbsp;permis&nbsp;et&nbsp;suspendu&nbsp;jusqu''au&nbsp;prononcé&nbsp;d''une&nbsp;décision&nbsp;juridictionnelle&nbsp;irrévocable.&nbsp;L''autorisation&nbsp;peut&nbsp;être&nbsp;prorogée&nbsp;par&nbsp;périodes&nbsp;d''une&nbsp;année&nbsp;si&nbsp;les&nbsp;prescriptions&nbsp;d''urbanisme,&nbsp;les&nbsp;servitudes&nbsp;d''urbanisme&nbsp;de&nbsp;tous&nbsp;ordres&nbsp;et&nbsp;le&nbsp;régime&nbsp;des&nbsp;taxes&nbsp;et&nbsp;participations&nbsp;n''ont&nbsp;pas&nbsp;évolué.&nbsp;Vous&nbsp;pouvez&nbsp;présenter&nbsp;une&nbsp;demande&nbsp;de&nbsp;prorogation&nbsp;sur&nbsp;papier&nbsp;libre,&nbsp;accompagnée&nbsp;de&nbsp;l''autorisation&nbsp;pour&nbsp;laquelle&nbsp;vous&nbsp;demandez&nbsp;la&nbsp;prorogation,&nbsp;au&nbsp;moins&nbsp;deux&nbsp;mois&nbsp;avant&nbsp;l''expiration&nbsp;du&nbsp;délai&nbsp;de&nbsp;validité.<br/><br/>L''autorisation&nbsp;est&nbsp;délivrée&nbsp;sous&nbsp;réserve&nbsp;du&nbsp;DROIT&nbsp;DES&nbsp;TIERS&nbsp;:&nbsp;elle&nbsp;a&nbsp;pour&nbsp;objet&nbsp;de&nbsp;vérifier&nbsp;la&nbsp;conformité&nbsp;du&nbsp;projet&nbsp;aux&nbsp;règles&nbsp;et&nbsp;servitudes&nbsp;d''urbanisme.&nbsp;Elle&nbsp;n''a&nbsp;pas&nbsp;pour&nbsp;objet&nbsp;de&nbsp;vérifier&nbsp;que&nbsp;le&nbsp;projet&nbsp;respecte&nbsp;les&nbsp;autres&nbsp;réglementations&nbsp;et&nbsp;les&nbsp;règles&nbsp;de&nbsp;droit&nbsp;privé.&nbsp;Toute&nbsp;personne&nbsp;s''estimant&nbsp;lésée&nbsp;par&nbsp;la&nbsp;méconnaissance&nbsp;du&nbsp;droit&nbsp;de&nbsp;propriété&nbsp;ou&nbsp;d''autres&nbsp;dispositions&nbsp;de&nbsp;droit&nbsp;privé&nbsp;peut&nbsp;donc&nbsp;faire&nbsp;valoir&nbsp;ses&nbsp;droits&nbsp;en&nbsp;saisissant&nbsp;les&nbsp;tribunaux&nbsp;civils,&nbsp;même&nbsp;si&nbsp;l''autorisation&nbsp;respecte&nbsp;les&nbsp;règles&nbsp;d''urbanisme.<br/><br/>Les&nbsp;obligations&nbsp;du&nbsp;(ou&nbsp;des)&nbsp;bénéficiaire(s)&nbsp;de&nbsp;l''autorisation&nbsp;:&nbsp;il&nbsp;doit&nbsp;souscrire&nbsp;l''assurance&nbsp;de&nbsp;dommages&nbsp;prévue&nbsp;par&nbsp;l''article&nbsp;L242-1&nbsp;du&nbsp;code&nbsp;des&nbsp;assurances.</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (25, 1, 'recepisse_DPC', 'RECEPISSE DE DEPOT DE PIECES COMPLEMENTAIRES', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Madame,&nbsp;Monsieur,<br/><br/>Vous&nbsp;avez&nbsp;déposé&nbsp;(1)&nbsp;ce&nbsp;jour&nbsp;des&nbsp;pièces&nbsp;complémentaires&nbsp;concernant&nbsp;le&nbsp;dossier&nbsp;de&nbsp;[libelle_datd]&nbsp;dont&nbsp;les&nbsp;références&nbsp;sont&nbsp;indiqués&nbsp;dans&nbsp;les&nbsp;cadre&nbsp;ci-dessus.<br/><br/>Le&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;votre&nbsp;dossier&nbsp;est&nbsp;de&nbsp;[delai_dossier]mois.&nbsp;En&nbsp;l''absence&nbsp;Si&nbsp;de&nbsp;courrier&nbsp;de&nbsp;la&nbsp;part&nbsp;de&nbsp;l''administration&nbsp;dans&nbsp;ce&nbsp;délai,&nbsp;vous&nbsp;bénéficierez&nbsp;d''un&nbsp;permis&nbsp;tacite&nbsp;(2).<br/><br/>*&nbsp;Toutefois,&nbsp;dans&nbsp;le&nbsp;mois&nbsp;qui&nbsp;suit&nbsp;le&nbsp;dépôt&nbsp;de&nbsp;pièces&nbsp;complémentaires,&nbsp;l''administration&nbsp;peut&nbsp;vous&nbsp;écrire&nbsp;:<br/>&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;soit&nbsp;pour&nbsp;vous&nbsp;avertir&nbsp;qu''un&nbsp;autre&nbsp;délai&nbsp;est&nbsp;applicable,&nbsp;lorsque&nbsp;le&nbsp;code&nbsp;de&nbsp;l''ubanisme&nbsp;l''a&nbsp;prévu&nbsp;pour&nbsp;permettre&nbsp;les&nbsp;consultations&nbsp;nécessaires&nbsp;(si&nbsp;votre&nbsp;projet&nbsp;nécessite&nbsp;la&nbsp;consultation&nbsp;s''autres&nbsp;services&nbsp;...)<br/>&nbsp;&nbsp;&nbsp;-&nbsp;soit&nbsp;pour&nbsp;vous&nbsp;indiquer&nbsp;qu''il&nbsp;manque&nbsp;encore&nbsp;une&nbsp;ou&nbsp;plusieurs&nbsp;pièces&nbsp;à&nbsp;votre&nbsp;dossier&nbsp;(1)<br/>&nbsp;&nbsp;&nbsp;-&nbsp;soit&nbsp;pour&nbsp;vous&nbsp;informer&nbsp;que&nbsp;votre&nbsp;projet&nbsp;correspond&nbsp;à&nbsp;un&nbsp;des&nbsp;cas&nbsp;où&nbsp;un&nbsp;permis&nbsp;tacite&nbsp;n''est&nbsp;pas&nbsp;possible.<br/><br/>Si&nbsp;vou&nbsp;srecevez&nbsp;une&nbsp;telle&nbsp;lettreavant&nbsp;la&nbsp;fin&nbsp;du&nbsp;premier&nbsp;mois,&nbsp;celle-ci&nbsp;remplacera&nbsp;et&nbsp;annulera&nbsp;le&nbsp;présent&nbsp;récépissé.<br/><br/>Si&nbsp;vous&nbsp;n''avez&nbsp;rien&nbsp;reçu&nbsp;à&nbsp;la&nbsp;fin&nbsp;du&nbsp;premier&nbsp;mois&nbsp;suivant&nbsp;le&nbsp;dépôt&nbsp;des&nbsp;pièces&nbsp;complémentaires,&nbsp;le&nbsp;délai&nbsp;de&nbsp;[delai_dossier]&nbsp;mois&nbsp;ne&nbsp;pourra&nbsp;plus&nbsp;être&nbsp;modifié.&nbsp;Si&nbsp;aucun&nbsp;courrier&nbsp;de&nbsp;l''administration&nbsp;ne&nbsp;vous&nbsp;est&nbsp;parvenu&nbsp;à&nbsp;l''issu&nbsp;du&nbsp;délai&nbsp;de&nbsp;[delai_dossier]&nbsp;mois,&nbsp;vous&nbsp;pourrez&nbsp;commencer&nbsp;les&nbsp;travaux&nbsp;(3)&nbsp;après&nbsp;avoir&nbsp;respecté&nbsp;les&nbsp;consignes&nbsp;suivantes&nbsp;:<br/>&nbsp;&nbsp;-&nbsp;adresser&nbsp;au&nbsp;maire,&nbsp;en&nbsp;3&nbsp;exemplaires,&nbsp;une&nbsp;déclaration&nbsp;d''ouverture&nbsp;de&nbsp;chantier&nbsp;(vous&nbsp;trouverez&nbsp;un&nbsp;modèle&nbsp;de&nbsp;déclaration&nbsp;CERFA&nbsp;n°&nbsp;13407&nbsp;01&nbsp;à&nbsp;la&nbsp;mairie&nbsp;ou&nbsp;sur&nbsp;le&nbsp;site&nbsp;internet&nbsp;urbanisme&nbsp;du&nbsp;gouvernement)<br/>&nbsp;&nbsp;&nbsp;-&nbsp;afficher&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;ce&nbsp;récépissé&nbsp;sur&nbsp;lequel&nbsp;la&nbsp;mairie&nbsp;a&nbsp;mis&nbsp;son&nbsp;cachet&nbsp;pour&nbsp;attester&nbsp;la&nbsp;date&nbsp;de&nbsp;dépôt&nbsp;;<br/>&nbsp;&nbsp;&nbsp;-&nbsp;installer&nbsp;sur&nbsp;le&nbsp;terrain,&nbsp;pendant&nbsp;toute&nbsp;la&nbsp;durée&nbsp;du&nbsp;chantier,&nbsp;un&nbsp;panneau&nbsp;visible&nbsp;de&nbsp;la&nbsp;voie&nbsp;publique&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;(vous&nbsp;trouverez&nbsp;le&nbsp;modèle&nbsp;de&nbsp;panneau&nbsp;à&nbsp;la&nbsp;mairie,&nbsp;sur&nbsp;le&nbsp;site&nbsp;internet&nbsp;urbanisme&nbsp;du&nbsp;gouvernement,&nbsp;ainsi&nbsp;que&nbsp;dans&nbsp;la&nbsp;plupart&nbsp;des&nbsp;magasins&nbsp;de&nbsp;matériaux).<br/><br/>*&nbsp;ATTENTION&nbsp;:&nbsp;le&nbsp;permis&nbsp;n''est&nbsp;définitif&nbsp;qu''en&nbsp;l''absence&nbsp;de&nbsp;recours&nbsp;ou&nbsp;de&nbsp;retrait&nbsp;:<br/>&nbsp;&nbsp;&nbsp;-&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;2&nbsp;mois&nbsp;à&nbsp;compter&nbsp;de&nbsp;l''affichage&nbsp;sur&nbsp;le&nbsp;terrain,&nbsp;sa&nbsp;légalité&nbsp;peut&nbsp;être&nbsp;contestée&nbsp;par&nbsp;un&nbsp;tiers.&nbsp;Dans&nbsp;ce&nbsp;cas&nbsp;l''auteur&nbsp;du&nbsp;recours&nbsp;est&nbsp;tenu&nbsp;de&nbsp;vous&nbsp;en&nbsp;informer&nbsp;au&nbsp;plus&nbsp;tard&nbsp;quinze&nbsp;jours&nbsp;après&nbsp;le&nbsp;dépôt&nbsp;du&nbsp;recours.<br/>&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;3&nbsp;mois&nbsp;après&nbsp;la&nbsp;date&nbsp;de&nbsp;[libelle_datd],&nbsp;l''autorité&nbsp;compétente&nbsp;peut&nbsp;le&nbsp;retirer,&nbsp;si&nbsp;elle&nbsp;l''estime&nbsp;illégal.&nbsp;Elle&nbsp;est&nbsp;tenue&nbsp;de&nbsp;vous&nbsp;en&nbsp;informer&nbsp;préalablement&nbsp;et&nbsp;de&nbsp;vous&nbsp;permettre&nbsp;de&nbsp;répondre&nbsp;à&nbsp;ses&nbsp;observations.<br/><br/>Le&nbsp;projet&nbsp;ayant&nbsp;fait&nbsp;l''objet&nbsp;de&nbsp;la&nbsp;demande&nbsp;de&nbsp;[libelle_datd]&nbsp;dont&nbsp;les&nbsp;références&nbsp;sont&nbsp;indiquées&nbsp;dans&nbsp;le&nbsp;cadre&nbsp;ci-dessus&nbsp;déposé&nbsp;à&nbsp;la&nbsp;mairie&nbsp;le&nbsp;[date_depot_dossier]&nbsp;fera&nbsp;l''objet&nbsp;d''un&nbsp;permis&nbsp;tacite&nbsp;(2)&nbsp;à&nbsp;défaut&nbsp;de&nbsp;réponse&nbsp;de&nbsp;l''administration&nbsp;[delai_dossier]&nbsp;mois&nbsp;après&nbsp;cette&nbsp;date.&nbsp;Les&nbsp;travaux&nbsp;(3)&nbsp;pourront&nbsp;alors&nbsp;être&nbsp;exécutés&nbsp;après&nbsp;affichage&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;du&nbsp;présent&nbsp;récépissé&nbsp;et&nbsp;d''un&nbsp;panneau&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;conforme&nbsp;au&nbsp;modèle&nbsp;réglementaire.<br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville&nbsp;,&nbsp;le&nbsp;&nbsp;&datecourrier<br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cachet&nbsp;de&nbsp;la&nbsp;mairie&nbsp;et&nbsp;signature&nbsp;du&nbsp;receveur<br/><br/><br/><br/>(1)&nbsp;le&nbsp;présent&nbsp;récepissé&nbsp;ne&nbsp;préjuge&nbsp;en&nbsp;aucune&nbsp;façon&nbsp;de&nbsp;la&nbsp;recevabilité&nbsp;des&nbsp;documents&nbsp;déposés.<br/>Le&nbsp;défaut&nbsp;de&nbsp;production&nbsp;de&nbsp;l''ensemble&nbsp;des&nbsp;pièces&nbsp;manquantes&nbsp;dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;TROIS&nbsp;MOIS&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;date&nbsp;de&nbsp;la&nbsp;première&nbsp;lettre&nbsp;de&nbsp;l''administration&nbsp;vous&nbsp;indiquant&nbsp;que&nbsp;votre&nbsp;dossier&nbsp;est&nbsp;incomplet,&nbsp;vaudra&nbsp;décision&nbsp;tacite&nbsp;de&nbsp;REJET&nbsp;de&nbsp;la&nbsp;demande.<br/><br/>(2)&nbsp;Permis&nbsp;tacite&nbsp;:&nbsp;afin&nbsp;de&nbsp;vous&nbsp;évitez&nbsp;dêtre&nbsp;en&nbsp;infraction,&nbsp;il&nbsp;vous&nbsp;est&nbsp;recommandé,&nbsp;dans&nbsp;le&nbsp;cas&nbsp;d''un&nbsp;permis&nbsp;tacite,&nbsp;de&nbsp;vous&nbsp;assurer&nbsp;auprès&nbsp;des&nbsp;services&nbsp;municipaux&nbsp;de&nbsp;la&nbsp;légalité&nbsp;dudit&nbsp;permis&nbsp;avant&nbsp;de&nbsp;commencer&nbsp;les&nbsp;travaux.&nbsp;Dans&nbsp;cette&nbsp;éventualité,&nbsp;il&nbsp;vous&nbsp;sera&nbsp;délivré&nbsp;sous&nbsp;quinzaine,&nbsp;une&nbsp;attestation&nbsp;certifiant&nbsp;qu''aucune&nbsp;décision&nbsp;de&nbsp;refus&nbsp;n''a&nbsp;été&nbsp;prise&nbsp;à&nbsp;votre&nbsp;encontre.<br/>En&nbsp;effet,&nbsp;si&nbsp;le&nbsp;permis&nbsp;tacite&nbsp;était&nbsp;irrégulier,&nbsp;il&nbsp;serait&nbsp;retiré&nbsp;et&nbsp;les&nbsp;tribunaux&nbsp;pourraient&nbsp;vous&nbsp;astreindre&nbsp;de&nbsp;remettre&nbsp;en&nbsp;son&nbsp;état&nbsp;initial&nbsp;le&nbsp;projet.<br/>Dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;date&nbsp;de&nbsp;décision&nbsp;tacite,&nbsp;il&nbsp;vous&nbsp;sera&nbsp;éventuellement&nbsp;notifié&nbsp;un&nbsp;arrêté&nbsp;fixant&nbsp;les&nbsp;taxes&nbsp;et&nbsp;participations&nbsp;applicables&nbsp;au&nbsp;projet.<br/><br/>(3)&nbsp;Certains&nbsp;travaux&nbsp;ne&nbsp;peuvent&nbsp;pas&nbsp;être&nbsp;commencés&nbsp;dès&nbsp;la&nbsp;délivrance&nbsp;de&nbsp;[libelle_datd]&nbsp;et&nbsp;doivent&nbsp;être&nbsp;différés&nbsp;:&nbsp;c''est&nbsp;le&nbsp;cas&nbsp;des&nbsp;travaux&nbsp;situés&nbsp;dans&nbsp;un&nbsp;site&nbsp;classé.&nbsp;Vous&nbsp;pouvez&nbsp;vérifier&nbsp;auprès&nbsp;de&nbsp;la&nbsp;mairie&nbsp;que&nbsp;votre&nbsp;projet&nbsp;ne&nbsp;rentre&nbsp;pas&nbsp;dans&nbsp;ce&nbsp;cas.<br/><br/><br pagebreak="true" /><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFORMATIONS&nbsp;A&nbsp;LIRE&nbsp;ATTENTIVEMENT:<br/><br/>DELAIS&nbsp;ET&nbsp;VOIES&nbsp;DE&nbsp;RECOURS&nbsp;:<br/>Le&nbsp;permis&nbsp;peut&nbsp;faire&nbsp;l''objet&nbsp;d''un&nbsp;recours&nbsp;gracieux&nbsp;ou&nbsp;d''un&nbsp;recours&nbsp;contentieux&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;du&nbsp;premier&nbsp;jour&nbsp;d''une&nbsp;période&nbsp;continue&nbsp;de&nbsp;deux&nbsp;mois&nbsp;d''affichage&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;d''un&nbsp;panneau&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;et&nbsp;visible&nbsp;de&nbsp;la&nbsp;voie&nbsp;publique&nbsp;(art&nbsp;R&nbsp;600-2&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/>L''auteur&nbsp;du&nbsp;recours&nbsp;est&nbsp;tenu,&nbsp;à&nbsp;peine&nbsp;d''irrecevabilité,&nbsp;de&nbsp;notifier&nbsp;copie&nbsp;de&nbsp;celui-ci&nbsp;à&nbsp;l''auteur&nbsp;de&nbsp;la&nbsp;décision&nbsp;et&nbsp;au&nbsp;titulaire&nbsp;de&nbsp;l''autorisation&nbsp;(art&nbsp;R&nbsp;600-1&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/><br/>DUREE&nbsp;DE&nbsp;VALIDITE&nbsp;DU&nbsp;PERMIS&nbsp;:&nbsp;conformément&nbsp;à&nbsp;l''article&nbsp;R.424-17&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;l''autorisation&nbsp;est&nbsp;périmée&nbsp;si&nbsp;les&nbsp;travaux&nbsp;ne&nbsp;sont&nbsp;pas&nbsp;entrepris&nbsp;dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;deux&nbsp;ans&nbsp;à&nbsp;compter&nbsp;de&nbsp;sa&nbsp;notification&nbsp;au(x)&nbsp;bénéficiaire(s).&nbsp;IL&nbsp;en&nbsp;est&nbsp;de&nbsp;même&nbsp;si,&nbsp;passé&nbsp;ce&nbsp;délai,&nbsp;les&nbsp;travaux&nbsp;sont&nbsp;interrompus&nbsp;pendant&nbsp;un&nbsp;délai&nbsp;supérieur&nbsp;à&nbsp;une&nbsp;année.&nbsp;En&nbsp;cas&nbsp;de&nbsp;recours&nbsp;le&nbsp;délai&nbsp;de&nbsp;validité&nbsp;du&nbsp;permis&nbsp;et&nbsp;suspendu&nbsp;jusqu''au&nbsp;prononcé&nbsp;d''une&nbsp;décision&nbsp;juridictionnelle&nbsp;irrévocable.&nbsp;L''autorisation&nbsp;peut&nbsp;être&nbsp;prorogée&nbsp;par&nbsp;périodes&nbsp;d''une&nbsp;année&nbsp;si&nbsp;les&nbsp;prescriptions&nbsp;d''urbanisme,&nbsp;les&nbsp;servitudes&nbsp;d''urbanisme&nbsp;de&nbsp;tous&nbsp;ordres&nbsp;et&nbsp;le&nbsp;régime&nbsp;des&nbsp;taxes&nbsp;et&nbsp;participations&nbsp;n''ont&nbsp;pas&nbsp;évolué.&nbsp;Vous&nbsp;pouvez&nbsp;présenter&nbsp;une&nbsp;demande&nbsp;de&nbsp;prorogation&nbsp;sur&nbsp;papier&nbsp;libre,&nbsp;accompagnée&nbsp;de&nbsp;l''autorisation&nbsp;pour&nbsp;laquelle&nbsp;vous&nbsp;demandez&nbsp;la&nbsp;prorogation,&nbsp;au&nbsp;moins&nbsp;deux&nbsp;mois&nbsp;avant&nbsp;l''expiration&nbsp;du&nbsp;délai&nbsp;de&nbsp;validité.<br/><br/>L''autorisation&nbsp;est&nbsp;délivrée&nbsp;sous&nbsp;réserve&nbsp;du&nbsp;DROIT&nbsp;DES&nbsp;TIERS&nbsp;:&nbsp;elle&nbsp;a&nbsp;pour&nbsp;objet&nbsp;de&nbsp;vérifier&nbsp;la&nbsp;conformité&nbsp;du&nbsp;projet&nbsp;aux&nbsp;règles&nbsp;et&nbsp;servitudes&nbsp;d''urbanisme.&nbsp;Elle&nbsp;n''a&nbsp;pas&nbsp;pour&nbsp;objet&nbsp;de&nbsp;vérifier&nbsp;que&nbsp;le&nbsp;projet&nbsp;respecte&nbsp;les&nbsp;autres&nbsp;réglementations&nbsp;et&nbsp;les&nbsp;règles&nbsp;de&nbsp;droit&nbsp;privé.&nbsp;Toute&nbsp;personne&nbsp;s''estimant&nbsp;lésée&nbsp;par&nbsp;la&nbsp;méconnaissance&nbsp;du&nbsp;droit&nbsp;de&nbsp;propriété&nbsp;ou&nbsp;d''autres&nbsp;dispositions&nbsp;de&nbsp;droit&nbsp;privé&nbsp;peut&nbsp;donc&nbsp;faire&nbsp;valoir&nbsp;ses&nbsp;droits&nbsp;en&nbsp;saisissant&nbsp;les&nbsp;tribunaux&nbsp;civils,&nbsp;même&nbsp;si&nbsp;l''autorisation&nbsp;respecte&nbsp;les&nbsp;règles&nbsp;d''urbanisme.<br/><br/>Les&nbsp;obligations&nbsp;du&nbsp;(ou&nbsp;des)&nbsp;bénéficiaire(s)&nbsp;de&nbsp;l''autorisation&nbsp;:&nbsp;il&nbsp;doit&nbsp;souscrire&nbsp;l''assurance&nbsp;de&nbsp;dommages&nbsp;prévue&nbsp;par&nbsp;l''article&nbsp;L242-1&nbsp;du&nbsp;code&nbsp;des&nbsp;assurances.<br/><br/>[complement_instruction]1</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (39, 1, 'non_opposition_tacite', 'import du 17/11/2011', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Texte&nbsp;du&nbsp;corps</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (21, 1, 'majoration_enquete_publique', 'MAJORATION DU DELAI D''INSTRUCTION', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Madame,&nbsp;Monsieur,<br/><br/>J''ai&nbsp;l''honneur&nbsp;de&nbsp;vous&nbsp;informer&nbsp;que&nbsp;votre&nbsp;projet&nbsp;est&nbsp;soumis,&nbsp;en&nbsp;raison&nbsp;de&nbsp;son&nbsp;emplacement,&nbsp;de&nbsp;son&nbsp;utilisation&nbsp;ou&nbsp;de&nbsp;sa&nbsp;nature&nbsp;à&nbsp;un&nbsp;régime&nbsp;d''autorisation&nbsp;ou&nbsp;à&nbsp;des&nbsp;prescriptions&nbsp;prévues&nbsp;par&nbsp;une&nbsp;autre&nbsp;législation&nbsp;ou&nbsp;réglementation&nbsp;que&nbsp;le&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;et&nbsp;qu''il&nbsp;nécessite&nbsp;l''avis&nbsp;d''un&nbsp;service&nbsp;ou&nbsp;d''une&nbsp;commission&nbsp;ne&nbsp;relevant&nbsp;pas&nbsp;de&nbsp;mon&nbsp;autorité.<br/><br/>En&nbsp;conséquence,&nbsp;le&nbsp;délai&nbsp;d''instruction&nbsp;initialement&nbsp;fixé&nbsp;par&nbsp;l''article&nbsp;R&nbsp;423-23&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme&nbsp;est&nbsp;MODIFIE.<br/><br/>Le&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;votre&nbsp;[libelle_datd]&nbsp;est&nbsp;donc&nbsp;majoré&nbsp;par&nbsp;la&nbsp;loi&nbsp;(Art.&nbsp;R423-32&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme).<br/>La&nbsp;décision&nbsp;doit&nbsp;donc&nbsp;vous&nbsp;être&nbsp;notifiée&nbsp;&nbsp;avant&nbsp;l''expiration&nbsp;de&nbsp;&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;réception&nbsp;du&nbsp;rapport&nbsp;du&nbsp;commissaire&nbsp;enquêteur.<br/><br/>En&nbsp;application&nbsp;de&nbsp;l''article&nbsp;R&nbsp;424-2&nbsp;du&nbsp;code&nbsp;de&nbsp;d''urbanisme,&nbsp;le&nbsp;défaut&nbsp;de&nbsp;notification&nbsp;d''une&nbsp;décision<br/>au&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,&nbsp;vaudra&nbsp;refus&nbsp;de&nbsp;[libelle_datd].<br/><br/>Je&nbsp;vous&nbsp;prie&nbsp;d''agréer,&nbsp;Madame,&nbsp;Monsieur,&nbsp;l''expression&nbsp;de&nbsp;ma&nbsp;considération&nbsp;distinguée.<br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ville&nbsp;,&nbsp;le<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Le&nbsp;Maire&nbsp;Adjoint&nbsp;de&nbsp;la&nbsp;ville&nbsp;d''&ville<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Délégué&nbsp;à&nbsp;l''Urbanisme,&nbsp;l''Habitatl<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;la&nbsp;Politique&nbsp;Foncière<br/><br/><br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nom<br/><br/><br/><br/>NB&nbsp;:&nbsp;Copie&nbsp;de&nbsp;la&nbsp;présente&nbsp;lettre&nbsp;est&nbsp;transmise&nbsp;au&nbsp;représentant&nbsp;de&nbsp;l''Etat&nbsp;dans&nbsp;les&nbsp;conditions&nbsp;définies&nbsp;aux&nbsp;articles&nbsp;L2131-1&nbsp;et&nbsp;L2131&nbsp;-2&nbsp;du&nbsp;&nbsp;code&nbsp;des&nbsp;collectivités&nbsp;territoriales.<br/><br pagebreak="true" /><br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFORMATION&nbsp;A&nbsp;LIRE&nbsp;ATTENTIVEMENT<br/><br/><br/>DELAIS&nbsp;ET&nbsp;VOIES&nbsp;DE&nbsp;RECOURS<br/>Le&nbsp;pétitionnaire&nbsp;qui&nbsp;désire&nbsp;contester&nbsp;la&nbsp;décision&nbsp;peut&nbsp;saisir&nbsp;le&nbsp;tribunal&nbsp;administratif&nbsp;compétent&nbsp;d''un&nbsp;recours&nbsp;contentieux&nbsp;dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;DEUX&nbsp;MOIS&nbsp;à&nbsp;partir&nbsp;de&nbsp;la&nbsp;transmission&nbsp;de&nbsp;la&nbsp;décision&nbsp;attaquée.&nbsp;Il&nbsp;peut&nbsp;également&nbsp;saisir&nbsp;d''un&nbsp;recours&nbsp;gracieux&nbsp;l''auteur&nbsp;de&nbsp;la&nbsp;décision&nbsp;hiérarchique,&nbsp;le&nbsp;ministère&nbsp;chargé&nbsp;de&nbsp;l''urbanisme&nbsp;ou&nbsp;le&nbsp;préfet&nbsp;pour&nbsp;les&nbsp;permis&nbsp;délivrés&nbsp;au&nbsp;nom&nbsp;de&nbsp;l''Etat.<br/><br/>Cette&nbsp;démarche&nbsp;prolonge&nbsp;le&nbsp;délai&nbsp;de&nbsp;recours&nbsp;qui&nbsp;doit&nbsp;alors&nbsp;être&nbsp;introduit&nbsp;dans&nbsp;les&nbsp;deux&nbsp;mois&nbsp;suivant&nbsp;réponse&nbsp;(l''absence&nbsp;de&nbsp;réponse&nbsp;au&nbsp;terme&nbsp;de&nbsp;deux&nbsp;mois&nbsp;vaut&nbsp;rejet&nbsp;implicite).</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (16, 1, 'majoration', 'MAJORATION DU DELAI D''INSTRUCTION', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Madame,&nbsp;Monsieur,<br/><br/>J''ai&nbsp;l''honneur&nbsp;de&nbsp;vous&nbsp;informer&nbsp;que&nbsp;votre&nbsp;projet&nbsp;est&nbsp;soumis,&nbsp;en&nbsp;raison&nbsp;de&nbsp;son&nbsp;emplacement,&nbsp;de&nbsp;son&nbsp;utilisation&nbsp;ou&nbsp;de&nbsp;sa&nbsp;nature&nbsp;à&nbsp;un&nbsp;régime&nbsp;d''autorisation&nbsp;ou&nbsp;à&nbsp;des&nbsp;prescriptions&nbsp;prévues&nbsp;par&nbsp;une&nbsp;autre&nbsp;législation&nbsp;ou&nbsp;réglementation&nbsp;que&nbsp;le&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;et&nbsp;qu''il&nbsp;nécessite&nbsp;l''avis&nbsp;d''un&nbsp;service&nbsp;ou&nbsp;d''une&nbsp;commission&nbsp;ne&nbsp;relevant&nbsp;pas&nbsp;de&nbsp;mon&nbsp;autorité.<br/><br/>En&nbsp;conséquence,&nbsp;le&nbsp;délai&nbsp;d''instruction&nbsp;initialement&nbsp;fixé&nbsp;par&nbsp;l''article&nbsp;R&nbsp;423-23&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme&nbsp;est&nbsp;&nbsp;MODIFIE.<br/><br/>Le&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;votre&nbsp;[libelle_datd]&nbsp;est&nbsp;donc&nbsp;majoré&nbsp;par&nbsp;la&nbsp;loi&nbsp;(Art.&nbsp;R423-24&nbsp;à&nbsp;R.423-33&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)&nbsp;et&nbsp;la&nbsp;nouvelle&nbsp;date&nbsp;limite&nbsp;d''instruction&nbsp;est&nbsp;fixée&nbsp;au&nbsp;&nbsp;[date_limite_dossier].<br/>La&nbsp;décision&nbsp;doit&nbsp;donc&nbsp;vous&nbsp;être&nbsp;notifiée&nbsp;&nbsp;avant&nbsp;expiration&nbsp;de&nbsp;ce&nbsp;délai.<br/><br/>En&nbsp;l''absence&nbsp;d''une&nbsp;notification&nbsp;d''une&nbsp;décision&nbsp;par&nbsp;l''autorité&nbsp;compétente&nbsp;la&nbsp;présente&nbsp;lettre&nbsp;vaudra&nbsp;&nbsp;&nbsp;&nbsp;[libelle_datd]&nbsp;tacite.<br/><br/>Dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;décision&nbsp;tacite,&nbsp;l''autorité&nbsp;compétente&nbsp;pourra&nbsp;prendre&nbsp;un&nbsp;arrêté&nbsp;fixant&nbsp;les&nbsp;participations&nbsp;applicables&nbsp;au&nbsp;projet.<br/><br/>[complement_instruction]<br/><br/>Je&nbsp;vous&nbsp;prie&nbsp;d''agréer,&nbsp;Madame,&nbsp;Monsieur,&nbsp;l''expression&nbsp;de&nbsp;ma&nbsp;considération&nbsp;distinguée.<br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville&nbsp;,&nbsp;le<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Le&nbsp;Maire&nbsp;Adjoint&nbsp;de&nbsp;la&nbsp;ville&nbsp;d''&ville<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Délégué&nbsp;à&nbsp;l''Urbanisme,&nbsp;l''Habitat<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;la&nbsp;Politique&nbsp;Foncière<br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nom<br/><br/><br/>NB&nbsp;:&nbsp;Copie&nbsp;de&nbsp;la&nbsp;présente&nbsp;lettre&nbsp;est&nbsp;transmise&nbsp;au&nbsp;représentant&nbsp;de&nbsp;l''Etat&nbsp;dans&nbsp;les&nbsp;conditions&nbsp;définies&nbsp;aux&nbsp;articles&nbsp;L2131-1&nbsp;et&nbsp;L2131&nbsp;-2&nbsp;du&nbsp;&nbsp;code&nbsp;des&nbsp;collectivités&nbsp;territoriales.<br/><br pagebreak="true" /><br/><br/><br/><br/><br/><br/>(1)&nbsp;Les&nbsp;travaux&nbsp;ne&nbsp;peuvent&nbsp;&nbsp;être&nbsp;entrepris,&nbsp;conformément&nbsp;au&nbsp;projet&nbsp;décrit&nbsp;dans&nbsp;la&nbsp;demande,&nbsp;qu''à&nbsp;compter&nbsp;de&nbsp;la&nbsp;décision&nbsp;tacite.<br/>UN&nbsp;PERMIS&nbsp;ENTACHE&nbsp;D''ILLIGALITE&nbsp;PEUT&nbsp;ETRE&nbsp;RETIRE&nbsp;PAR&nbsp;L''ADMINISTRATION&nbsp;COMPETENTE&nbsp;PENDANT&nbsp;LE&nbsp;DELAI&nbsp;LEGAL&nbsp;DE&nbsp;RECOURS&nbsp;CONTENTIEUX<br/>&nbsp;Aussi,&nbsp;afin&nbsp;de&nbsp;vous&nbsp;évitez&nbsp;d''être&nbsp;en&nbsp;infraction,&nbsp;il&nbsp;vous&nbsp;est&nbsp;recommandé,&nbsp;dans&nbsp;le&nbsp;cas&nbsp;d''une&nbsp;décision&nbsp;tacite,&nbsp;de&nbsp;vous&nbsp;assurer&nbsp;auprès&nbsp;des&nbsp;services&nbsp;municipaux&nbsp;qu''une&nbsp;décision&nbsp;de&nbsp;refus&nbsp;n''a&nbsp;été&nbsp;prise&nbsp;avant&nbsp;de&nbsp;commencer&nbsp;les&nbsp;travaux.&nbsp;Dans&nbsp;cette&nbsp;éventualité,&nbsp;il&nbsp;vous&nbsp;sera&nbsp;délivré&nbsp;sur&nbsp;simple&nbsp;demande,&nbsp;une&nbsp;attestation&nbsp;(2)&nbsp;certifiant&nbsp;qu''aucune&nbsp;décision&nbsp;de&nbsp;refus&nbsp;n''a&nbsp;été&nbsp;prise&nbsp;à&nbsp;votre&nbsp;encontre.<br/><br/>&nbsp;En&nbsp;effet,&nbsp;si&nbsp;le&nbsp;permis&nbsp;tacite,&nbsp;était&nbsp;irrégulier,&nbsp;il&nbsp;serait&nbsp;retiré&nbsp;et&nbsp;les&nbsp;tribuneaux&nbsp;pourraient&nbsp;vous&nbsp;astreindre&nbsp;de&nbsp;remettre&nbsp;les&nbsp;lieux&nbsp;en&nbsp;leur&nbsp;état&nbsp;initial<br/><br/>Dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;date&nbsp;de&nbsp;décision&nbsp;tacite,&nbsp;il&nbsp;vous&nbsp;sera&nbsp;notifié&nbsp;éventuellement&nbsp;un&nbsp;arrêté&nbsp;fixant&nbsp;les&nbsp;taxes&nbsp;et&nbsp;participations&nbsp;applicables&nbsp;au&nbsp;projet.<br/><br/>Certains&nbsp;travaux&nbsp;ne&nbsp;peuvent&nbsp;pas&nbsp;être&nbsp;commencés&nbsp;dès&nbsp;la&nbsp;délivrance&nbsp;de&nbsp;[libelle_datd]&nbsp;et&nbsp;doivent&nbsp;être&nbsp;différés&nbsp;:&nbsp;c''est&nbsp;le&nbsp;cas&nbsp;des&nbsp;travaux&nbsp;situés&nbsp;dans&nbsp;un&nbsp;site&nbsp;classé.&nbsp;Vous&nbsp;pouvez&nbsp;vérifier&nbsp;auprès&nbsp;de&nbsp;la&nbsp;mairie&nbsp;que&nbsp;votre&nbsp;projet&nbsp;ne&nbsp;rentre&nbsp;pas&nbsp;dans&nbsp;ce&nbsp;cas.<br/><br/>(2)&nbsp;Le&nbsp;maire&nbsp;ou&nbsp;le&nbsp;préfet.<br/><br/><br pagebreak="true" /><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFORMATIONS&nbsp;A&nbsp;LIRE&nbsp;ATTENTIVEMENT:<br/><br/>DELAIS&nbsp;ET&nbsp;VOIES&nbsp;DE&nbsp;RECOURS&nbsp;:<br/>La&nbsp;déclaration&nbsp;préalable&nbsp;ou&nbsp;le&nbsp;permis&nbsp;peut&nbsp;faire&nbsp;l''objet&nbsp;d''&nbsp;un&nbsp;recours&nbsp;contentieux&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;du&nbsp;premier&nbsp;jour&nbsp;d''une&nbsp;période&nbsp;continue&nbsp;de&nbsp;2&nbsp;mois&nbsp;d''affichage&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;d''un&nbsp;panneau&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;et&nbsp;visible&nbsp;de&nbsp;la&nbsp;voie&nbsp;publique&nbsp;(art&nbsp;R&nbsp;600-2&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/>L''auteur&nbsp;du&nbsp;recours&nbsp;est&nbsp;tenu,&nbsp;à&nbsp;peine&nbsp;d''irrecevabilité,&nbsp;de&nbsp;notifier&nbsp;copie&nbsp;de&nbsp;celui-ci&nbsp;à&nbsp;l''auteur&nbsp;de&nbsp;la&nbsp;décision&nbsp;et&nbsp;au&nbsp;titulaire&nbsp;de&nbsp;l''autorisation&nbsp;(art&nbsp;R&nbsp;600-1&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/><br/>DUREE&nbsp;DE&nbsp;VALIDITE&nbsp;DU&nbsp;PERMIS&nbsp;:&nbsp;conformément&nbsp;à&nbsp;l''article&nbsp;R.424-17&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;l''autorisation&nbsp;est&nbsp;périmée&nbsp;si&nbsp;les&nbsp;travaux&nbsp;ne&nbsp;sont&nbsp;pas&nbsp;entrepris&nbsp;dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;deux&nbsp;ans&nbsp;à&nbsp;compter&nbsp;de&nbsp;sa&nbsp;notification&nbsp;au(x)&nbsp;bénéficiaire(s).&nbsp;IL&nbsp;en&nbsp;est&nbsp;de&nbsp;même&nbsp;si,&nbsp;passé&nbsp;ce&nbsp;délai,&nbsp;les&nbsp;travaux&nbsp;sont&nbsp;interrompus&nbsp;pendant&nbsp;un&nbsp;délai&nbsp;supérieur&nbsp;à&nbsp;une&nbsp;année.&nbsp;En&nbsp;cas&nbsp;de&nbsp;recours&nbsp;le&nbsp;délai&nbsp;de&nbsp;validité&nbsp;du&nbsp;permis&nbsp;et&nbsp;suspendu&nbsp;jusqu''au&nbsp;prononcé&nbsp;d''une&nbsp;décision&nbsp;juridictionnelle&nbsp;irrévocable.&nbsp;L''autorisation&nbsp;peut&nbsp;être&nbsp;prorogée&nbsp;par&nbsp;périodes&nbsp;d''une&nbsp;année&nbsp;si&nbsp;les&nbsp;prescriptions&nbsp;d''urbanisme,&nbsp;les&nbsp;servitudes&nbsp;d''urbanisme&nbsp;de&nbsp;tous&nbsp;ordres&nbsp;et&nbsp;le&nbsp;régime&nbsp;des&nbsp;taxes&nbsp;et&nbsp;participations&nbsp;n''ont&nbsp;pas&nbsp;évolué.&nbsp;Vous&nbsp;pouvez&nbsp;présenter&nbsp;une&nbsp;demande&nbsp;de&nbsp;prorogation&nbsp;sur&nbsp;papier&nbsp;libre,&nbsp;accompagnée&nbsp;de&nbsp;l''autorisation&nbsp;pour&nbsp;laquelle&nbsp;vous&nbsp;demandez&nbsp;la&nbsp;prorogation,&nbsp;au&nbsp;moins&nbsp;deux&nbsp;mois&nbsp;avant&nbsp;l''expiration&nbsp;du&nbsp;délai&nbsp;de&nbsp;validité.<br/><br/>L''autorisation&nbsp;est&nbsp;délivrée&nbsp;sous&nbsp;réserve&nbsp;du&nbsp;DROIT&nbsp;DES&nbsp;TIERS&nbsp;:&nbsp;elle&nbsp;a&nbsp;pour&nbsp;objet&nbsp;de&nbsp;vérifier&nbsp;la&nbsp;conformité&nbsp;du&nbsp;projet&nbsp;aux&nbsp;règles&nbsp;et&nbsp;servitudes&nbsp;d''urbanisme.&nbsp;Elle&nbsp;n''a&nbsp;pas&nbsp;pour&nbsp;objet&nbsp;de&nbsp;vérifier&nbsp;que&nbsp;le&nbsp;projet&nbsp;respecte&nbsp;les&nbsp;autres&nbsp;réglementations&nbsp;et&nbsp;les&nbsp;règles&nbsp;de&nbsp;droit&nbsp;privé.&nbsp;Toute&nbsp;personne&nbsp;s''estimant&nbsp;lésée&nbsp;par&nbsp;la&nbsp;méconnaissance&nbsp;du&nbsp;droit&nbsp;de&nbsp;propriété&nbsp;ou&nbsp;d''autres&nbsp;dispositions&nbsp;de&nbsp;droit&nbsp;privé&nbsp;peut&nbsp;donc&nbsp;faire&nbsp;valoir&nbsp;ses&nbsp;droits&nbsp;en&nbsp;saisissant&nbsp;les&nbsp;tribunaux&nbsp;civils,&nbsp;même&nbsp;si&nbsp;l''autorisation&nbsp;respecte&nbsp;les&nbsp;règles&nbsp;d''urbanisme.<br/><br/>Les&nbsp;obligations&nbsp;du&nbsp;(ou&nbsp;des)&nbsp;bénéficiaire(s)&nbsp;de&nbsp;l''autorisation&nbsp;:&nbsp;il&nbsp;doit&nbsp;souscrire&nbsp;l''assurance&nbsp;de&nbsp;dommages&nbsp;prévue&nbsp;par&nbsp;l''article&nbsp;L242-1&nbsp;du&nbsp;code&nbsp;des&nbsp;assurances.</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (10, 1, 'retrait', 'RETRAIT DE PERMIS DE CONSTRUIRE PAR LE DEMANDEUR APRES DECISION', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Le&nbsp;Maire,<br/><br/><br/>Vu&nbsp;la&nbsp;demande&nbsp;susvisée<br/>Vu&nbsp;le&nbsp;Code&nbsp;de&nbsp;l''Urbanisme,&nbsp;notamment&nbsp;ses&nbsp;articles&nbsp;L&nbsp;421-1&nbsp;et&nbsp;L&nbsp;421-6,&nbsp;R&nbsp;421-1&nbsp;et&nbsp;R&nbsp;421-14&nbsp;à&nbsp;R&nbsp;421-16.<br/>Vu&nbsp;le&nbsp;permis&nbsp;de&nbsp;construire&nbsp;N°&nbsp;&departement&nbsp;&commune&nbsp;&nbsp;[libelle_dossier]&nbsp;délivré&nbsp;le&nbsp;&nbsp;[date_decision_dossier]<br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;R&nbsp;R&nbsp;E&nbsp;T&nbsp;E<br/><br/>ARTICLE&nbsp;1:&nbsp;&nbsp;Le&nbsp;permis&nbsp;de&nbsp;construire&nbsp;n°&nbsp;&departement&nbsp;&commune&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;délivré&nbsp;le&nbsp;&nbsp;&nbsp;[date_decision_dossier]&nbsp;&nbsp;à&nbsp;[nom_petitionnaire_principal]&nbsp;&nbsp;est&nbsp;retiré.<br/><br/>[complement_instruction]<br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville&nbsp;,&nbsp;le&nbsp;&nbsp;&datecourrier<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;le&nbsp;Maire&nbsp;&delaville<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&titreelu<br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nom</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (35, 1, 'piececomplementaire_sans_majoration', 'NOTIFICATION D''UNE DEMANDE DE PIECES COMPLEMENTAIRES', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Madame,&nbsp;Monsieur,<br/><br/>Vous&nbsp;avez&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]&nbsp;une&nbsp;demande&nbsp;de&nbsp;[libelle_datd].<br/><br/>Lors&nbsp;de&nbsp;ce&nbsp;dépôt,&nbsp;le&nbsp;récépissé&nbsp;de&nbsp;votre&nbsp;dossier&nbsp;indiquait&nbsp;qu''en&nbsp;cas&nbsp;de&nbsp;silence&nbsp;de&nbsp;l''Administration&nbsp;à&nbsp;la&nbsp;fin&nbsp;du&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;droit&nbsp;commun&nbsp;de&nbsp;[delai_dossier]&nbsp;mois,&nbsp;vous&nbsp;bénéficierez&nbsp;d''un&nbsp;[libelle_datd]&nbsp;tacite.<br/><br/>Je&nbsp;vous&nbsp;informe&nbsp;que&nbsp;mes&nbsp;services&nbsp;ne&nbsp;peuvent&nbsp;entreprendre&nbsp;l''instruction&nbsp;de&nbsp;votre&nbsp;demande&nbsp;de&nbsp;[libelle_datd],&nbsp;enregistrée&nbsp;sous&nbsp;les&nbsp;références&nbsp;portées&nbsp;dans&nbsp;le&nbsp;cadre&nbsp;ci&nbsp;dessus,&nbsp;car&nbsp;elle&nbsp;est&nbsp;INCOMPLETE.<br/><br/>Il&nbsp;convient&nbsp;donc&nbsp;que&nbsp;vous&nbsp;me&nbsp;fassiez&nbsp;parvenir&nbsp;les&nbsp;pièces&nbsp;suivantes&nbsp;:<br/>&nbsp;[complement_instruction]<br/><br/>Le&nbsp;délai&nbsp;d''instruction&nbsp;notifié&nbsp;ci-dessus&nbsp;commencera&nbsp;à&nbsp;courir&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;réception&nbsp;&nbsp;de&nbsp;l''intégralité&nbsp;des&nbsp;pièces&nbsp;et&nbsp;informations&nbsp;manquantes&nbsp;en&nbsp;mairie&nbsp;d''Arles&nbsp;Service&nbsp;Gestion&nbsp;du&nbsp;Territoire&nbsp;-&nbsp;5,&nbsp;rue&nbsp;du&nbsp;cloître.<br/><br/>Vous&nbsp;disposez&nbsp;de&nbsp;TROIS&nbsp;MOIS&nbsp;&nbsp;à&nbsp;compter&nbsp;de&nbsp;la&nbsp;réception&nbsp;de&nbsp;la&nbsp;présente&nbsp;lettre,&nbsp;pour&nbsp;faire&nbsp;parvenir&nbsp;à&nbsp;la&nbsp;mairie&nbsp;d''Arles&nbsp;,&nbsp;service&nbsp;Gestion&nbsp;du&nbsp;Territoire&nbsp;-&nbsp;5,&nbsp;rue&nbsp;du&nbsp;Cloître,&nbsp;l''intégralité&nbsp;des&nbsp;pièces&nbsp;et&nbsp;informations&nbsp;manquantes&nbsp;.<br/><br/>Le&nbsp;défaut&nbsp;de&nbsp;production&nbsp;de&nbsp;l''ensemble&nbsp;des&nbsp;pièces&nbsp;et&nbsp;informations&nbsp;manquantes&nbsp;dans&nbsp;ce&nbsp;délai&nbsp;de&nbsp;TROIS&nbsp;MOIS,&nbsp;vaudra&nbsp;&nbsp;DECISION&nbsp;TACITE&nbsp;DE&nbsp;REJET&nbsp;de&nbsp;votre&nbsp;dossier&nbsp;de&nbsp;[libelle_datd]&nbsp;&nbsp;(art.423-39b&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme).<br/><br pagebreak="true" /><br/>J''appelle&nbsp;également&nbsp;votre&nbsp;attention&nbsp;sur&nbsp;le&nbsp;fait&nbsp;que&nbsp;votre&nbsp;délai&nbsp;d''instruction&nbsp;pourrait&nbsp;faire&nbsp;l''objet&nbsp;d''une&nbsp;prolongation&nbsp;exceptionnelle&nbsp;conformément&nbsp;aux&nbsp;articles&nbsp;R&nbsp;423-34&nbsp;à&nbsp;R&nbsp;423-37&nbsp;du&nbsp;code&nbsp;de&nbsp;l''Urbanisme.<br/><br/>Si&nbsp;cette&nbsp;situation&nbsp;se&nbsp;présente&nbsp;sur&nbsp;votre&nbsp;dossier,&nbsp;vous&nbsp;serez&nbsp;informé&nbsp;par&nbsp;courrier&nbsp;avant&nbsp;l''expiration&nbsp;du&nbsp;délai&nbsp;d''instruction&nbsp;fixé&nbsp;ci-dessus.<br/><br/>Je&nbsp;vous&nbsp;prie&nbsp;d''agréer,&nbsp;Madame,&nbsp;Monsieur,&nbsp;l''expression&nbsp;de&nbsp;ma&nbsp;considération&nbsp;distinguée<br/><br/><br/><br/><br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville&nbsp;,&nbsp;le<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Le&nbsp;Maire&nbsp;de&nbsp;la&nbsp;ville&nbsp;d''&ville<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Délégué&nbsp;à&nbsp;l''Urbanisme,&nbsp;l''Habitat<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;la&nbsp;Politique&nbsp;Foncière<br/><br/><br/><br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nom<br/><br/><br/><br/><br/>Nb&nbsp;:&nbsp;copie&nbsp;de&nbsp;la&nbsp;présente&nbsp;lettre&nbsp;est&nbsp;transmise&nbsp;au&nbsp;représentant&nbsp;de&nbsp;l''Etat.<br/><br pagebreak="true" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFORMATION&nbsp;-&nbsp;A&nbsp;LIRE&nbsp;ATTENTIVEMENT<br/><br/><br/><br/>DELAIS&nbsp;ET&nbsp;VOIES&nbsp;DE&nbsp;RECOURS&nbsp;:<br/>le&nbsp;pétitionnaire&nbsp;qui&nbsp;désire&nbsp;contester&nbsp;la&nbsp;décision&nbsp;peut&nbsp;saisir&nbsp;le&nbsp;tribunal&nbsp;administratif&nbsp;compétent&nbsp;d''un&nbsp;recours&nbsp;contentieux&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;DEUX&nbsp;MOIS&nbsp;à&nbsp;partir&nbsp;de&nbsp;la&nbsp;transmission&nbsp;de&nbsp;la&nbsp;décision&nbsp;attaquée.&nbsp;Il&nbsp;peut&nbsp;également&nbsp;saisir&nbsp;d''un&nbsp;recours&nbsp;gracieux&nbsp;l''auteur&nbsp;de&nbsp;la&nbsp;décision&nbsp;hiérarchique,&nbsp;le&nbsp;Ministre&nbsp;chargé&nbsp;de&nbsp;l''Urbanisme&nbsp;ou&nbsp;le&nbsp;préfet&nbsp;pour&nbsp;les&nbsp;[libelle_datd]&nbsp;délivrés&nbsp;au&nbsp;nom&nbsp;de&nbsp;l''état.<br/><br/>Cette&nbsp;démarche&nbsp;prolonge&nbsp;le&nbsp;délai&nbsp;de&nbsp;recours&nbsp;qui&nbsp;doit&nbsp;alors&nbsp;être&nbsp;introduit&nbsp;dans&nbsp;les&nbsp;deux&nbsp;mois&nbsp;suivant&nbsp;la&nbsp;réponse&nbsp;(l''absence&nbsp;de&nbsp;réponse&nbsp;au&nbsp;terme&nbsp;de&nbsp;2&nbsp;mois&nbsp;vaut&nbsp;rejet&nbsp;implicite)</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (7, 1, 'prolongation', 'PROLONGATION D''UN DELAI D''INSTRUCTION', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Madame,&nbsp;Monsieur,<br/><br/>J''ai&nbsp;l''honneur&nbsp;de&nbsp;vous&nbsp;informer&nbsp;que&nbsp;&nbsp;votre&nbsp;projet&nbsp;est&nbsp;subordonné&nbsp;à&nbsp;l''accord&nbsp;ou&nbsp;à&nbsp;une&nbsp;autorisation&nbsp;prévu&nbsp;par&nbsp;une&nbsp;autre&nbsp;législation&nbsp;ou&nbsp;fait&nbsp;l''objet&nbsp;d''une&nbsp;évocation&nbsp;par&nbsp;un&nbsp;ministre&nbsp;chargé&nbsp;des&nbsp;sites,&nbsp;de&nbsp;la&nbsp;protection&nbsp;de&nbsp;la&nbsp;nature,&nbsp;des&nbsp;monuments&nbsp;historiques&nbsp;et&nbsp;des&nbsp;espaces&nbsp;protégés.<br/><br/>En&nbsp;conséquence,&nbsp;le&nbsp;délai&nbsp;d''instruction&nbsp;initialement&nbsp;fixé&nbsp;par&nbsp;les&nbsp;articles&nbsp;R&nbsp;423-23&nbsp;à&nbsp;R&nbsp;423-33&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme&nbsp;est&nbsp;ANNULE.<br/><br/>Le&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;votre&nbsp;[libelle_datd]&nbsp;est&nbsp;donc&nbsp;prolongé&nbsp;par&nbsp;la&nbsp;loi&nbsp;(Art.&nbsp;R423-34&nbsp;à&nbsp;R.423-37&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)&nbsp;et&nbsp;la&nbsp;nouvelle&nbsp;date&nbsp;limite&nbsp;d''instruction&nbsp;est&nbsp;fixée&nbsp;au&nbsp;&nbsp;[date_limite_dossier].<br/><br/><br/>La&nbsp;décision&nbsp;doit&nbsp;donc&nbsp;vous&nbsp;être&nbsp;notifiée&nbsp;avant&nbsp;expiration&nbsp;de&nbsp;ce&nbsp;délai.<br/><br/>En&nbsp;application&nbsp;des&nbsp;articles&nbsp;R&nbsp;423-44&nbsp;et&nbsp;R&nbsp;424-2&nbsp;ou&nbsp;R&nbsp;424-3&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme,&nbsp;le&nbsp;défaut&nbsp;de&nbsp;notification&nbsp;d''une&nbsp;décision&nbsp;à&nbsp;la&nbsp;date&nbsp;du&nbsp;[date_limite_dossier],&nbsp;vaudra&nbsp;REFUS&nbsp;de&nbsp;[libelle_datd].<br/><br/>Je&nbsp;vous&nbsp;prie&nbsp;d''agréer,&nbsp;Madame,&nbsp;Monsieur,&nbsp;l''expression&nbsp;de&nbsp;ma&nbsp;considération&nbsp;distinguée.<br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville&nbsp;,&nbsp;le&nbsp;&nbsp;&datecourrier<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;le&nbsp;Maire&nbsp;&delaville<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&titreelu<br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nom<br/><br/><br/><br/>NB&nbsp;:&nbsp;Copie&nbsp;de&nbsp;la&nbsp;présente&nbsp;lettre&nbsp;est&nbsp;transmise&nbsp;au&nbsp;représentant&nbsp;de&nbsp;l''Etat&nbsp;dans&nbsp;les&nbsp;conditions&nbsp;définies&nbsp;aux&nbsp;articles&nbsp;L2131-1&nbsp;et&nbsp;L2131&nbsp;-2&nbsp;du&nbsp;&nbsp;code&nbsp;des&nbsp;collectivités&nbsp;territoriales.<br/><br/>p<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFORMATION&nbsp;-&nbsp;A&nbsp;LIRE&nbsp;ATTENTIVEMENT<br/><br/>DELAIS&nbsp;ET&nbsp;VOIES&nbsp;DE&nbsp;RECOURS&nbsp;:<br/>Le&nbsp;pétitionnaire&nbsp;qui&nbsp;désire&nbsp;contester&nbsp;la&nbsp;décision&nbsp;peut&nbsp;saisir&nbsp;le&nbsp;tribunal&nbsp;administratif&nbsp;compétent&nbsp;d''un&nbsp;recours&nbsp;contentieux&nbsp;dans&nbsp;le&nbsp;délai&nbsp;de&nbsp;DEUX&nbsp;MOIS&nbsp;à&nbsp;partir&nbsp;de&nbsp;la&nbsp;transmission&nbsp;de&nbsp;la&nbsp;décision&nbsp;attaquée.&nbsp;Il&nbsp;peut&nbsp;également&nbsp;saisir&nbsp;d''un&nbsp;recours&nbsp;gracieux&nbsp;l''auteur&nbsp;de&nbsp;la&nbsp;décision&nbsp;hiérarchique&nbsp;le&nbsp;Ministre&nbsp;chargé&nbsp;de&nbsp;l''urbanisme&nbsp;ou&nbsp;le&nbsp;préfet&nbsp;pour&nbsp;les&nbsp;&nbsp;permis&nbsp;délivrés&nbsp;au&nbsp;nom&nbsp;de&nbsp;l''Etat.<br/>Cette&nbsp;démarche&nbsp;prolonge&nbsp;le&nbsp;délai&nbsp;de&nbsp;recours&nbsp;qui&nbsp;doit&nbsp;alors&nbsp;être&nbsp;introduit&nbsp;dans&nbsp;les&nbsp;deux&nbsp;mois&nbsp;suivant&nbsp;la&nbsp;réponse&nbsp;(l''absence&nbsp;de&nbsp;réponse&nbsp;au&nbsp;terme&nbsp;de&nbsp;deux&nbsp;mois&nbsp;vaut&nbsp;rejet&nbsp;implicite)</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (19, 1, 'dossier_irrecevable', 'import du 17/11/2011', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Madame,&nbsp;Monsieur,<br/>&nbsp;&nbsp;J''ai&nbsp;l''honneur&nbsp;de&nbsp;vous&nbsp;informer&nbsp;que&nbsp;la&nbsp;demande&nbsp;de&nbsp;[libelle_datd]&nbsp;que&nbsp;vous&nbsp;m''avez&nbsp;adressée&nbsp;a&nbsp;été&nbsp;enregistrée&nbsp;sous&nbsp;les&nbsp;références&nbsp;portées&nbsp;dans&nbsp;le&nbsp;cadre&nbsp;ci-dessus.<br/><br/>&nbsp;&nbsp;Toutefois,&nbsp;je&nbsp;ne&nbsp;peux&nbsp;entreprendre&nbsp;l''instruction&nbsp;de&nbsp;cette&nbsp;demande&nbsp;car&nbsp;elle&nbsp;est&nbsp;IRRECEVABLE&nbsp;pour&nbsp;le&nbsp;(s)&nbsp;motif&nbsp;(s)&nbsp;suivant(s)&nbsp;:<br/>[complement_instruction]<br/>[complement2_instruction]<br/>En&nbsp;conséquence&nbsp;vous&nbsp;trouverez&nbsp;votre&nbsp;dossier&nbsp;en&nbsp;retour&nbsp;sous&nbsp;ce&nbsp;pli.<br/>Je&nbsp;vous&nbsp;prie&nbsp;d''agréer,&nbsp;Madame,Monsieur,&nbsp;l''expression&nbsp;de&nbsp;ma&nbsp;considération&nbsp;distinguée.<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ville&nbsp;,&nbsp;le<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Le&nbsp;Maire&nbsp;A&nbsp;djoint&nbsp;de&nbsp;la&nbsp;ville&nbsp;d''&ville<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Délégué&nbsp;à&nbsp;l''Urbanisme,&nbsp;l''Habitat<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;la&nbsp;Politique&nbsp;Foncière<br/><br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nom<br/><br/>NB&nbsp;:&nbsp;Copie&nbsp;de&nbsp;la&nbsp;présente&nbsp;lettre&nbsp;est&nbsp;transmise&nbsp;au&nbsp;représentant&nbsp;de&nbsp;l''Etat&nbsp;dans&nbsp;les&nbsp;conditions&nbsp;définies&nbsp;aux&nbsp;articles&nbsp;L2131-1&nbsp;et&nbsp;L2131&nbsp;-2&nbsp;du&nbsp;&nbsp;code&nbsp;des&nbsp;collectivités&nbsp;territoriales.</span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (41, 1, 'arrete', 'ARRETE', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur]</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Le&nbsp;Maire,<br/><br/>Vu&nbsp;la&nbsp;demande&nbsp;de&nbsp;<span style="font-weight: bold;">[libelle_datd]</span>&nbsp;susvisée,<br/>Vu&nbsp;le&nbsp;code&nbsp;de&nbsp;l''urbanisme&nbsp;et&nbsp;notamment&nbsp;ses&nbsp;articles&nbsp;L421-1&nbsp;et&nbsp;suivants,&nbsp;R421-1&nbsp;et&nbsp;suivants<br/>[complement_instruction]<br/>Vu&nbsp;les&nbsp;pièces&nbsp;du&nbsp;dossier<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;R&nbsp;R&nbsp;E&nbsp;T&nbsp;E<br/><br/><span style="font-weight: bold;">[complement2_instruction]</span><br/><br/><br/><br/><br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville&nbsp;,&nbsp;le&nbsp;&nbsp;&datecourrier<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;le&nbsp;Maire&nbsp;&delaville<br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-weight: bold;">&nom</span></span></span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (3, 1, 'recepisse_1', 'RECEPISSE DE DEPOT', true, 'P', 'A4', 'logopdf.png', 10, 10, '<p style="text-align: left;"><span style="font-size: 10px;"><span style="font-family: times;"><span style="font-weight: bold;">[libelle_datd]<br/>[libelle_om_lettretype]<br/>______________________________________________________________________<br/>Dossier&nbsp;numéro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_dossier]&nbsp;&nbsp;déposé&nbsp;le&nbsp;[date_depot_dossier]<br/>par&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_petitionnaire_principal]<br/><br/>Correspondant&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[nom_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[numero_correspondant]&nbsp;[voie_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[complement_correspondant]&nbsp;[lieu_dit_correspondant]&nbsp;[bp_correspondant]<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[code_postal_correspondant]&nbsp;[ville_correspondant]&nbsp;[cedex_correspondant]&nbsp;[pays_correspondant]<br/><br/>sur&nbsp;le&nbsp;terrain&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[terrain_adresse_voie_numero_dossier]&nbsp;[terrain_adresse_voie_dossier]&nbsp;[terrain_adresse_lieu_dit_dossier]&nbsp;[terrain_adresse_bp_dossier]&nbsp;[terrain_adresse_code_postal_dossier]&nbsp;[terrain_adresse_localite_dossier]&nbsp;[terrain_adresse_cedex_dossier]<br/>arrondissement&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[libelle_arrondissement]<br/>______________________________________________________________________<br/>Dossier&nbsp;suivi&nbsp;par&nbsp;&nbsp;[nom_instructeur]&nbsp;-&nbsp;[telephone_instructeur]&nbsp;-&nbsp;[division_instructeur]&nbsp;-&nbsp;[email_instructeur] &acces_citoyen</span></span></span></p>', 70, 15, 130, 5, '1', '<p style="text-align: justify;"><span style="font-size: 10px;"><span style="font-family: times;">Madame,&nbsp;Monsieur,<br/><br/>Vous&nbsp;avez&nbsp;déposé&nbsp;ce&nbsp;jour&nbsp;une&nbsp;demande&nbsp;de&nbsp;[libelle_datd].&nbsp;Le&nbsp;délai&nbsp;d''instruction&nbsp;de&nbsp;votre&nbsp;dossier&nbsp;est&nbsp;de&nbsp;[delai_dossier]&nbsp;mois.&nbsp;en&nbsp;l''absence&nbsp;de&nbsp;courrier&nbsp;de&nbsp;la&nbsp;part&nbsp;de&nbsp;l''administration&nbsp;dans&nbsp;ce&nbsp;délai,&nbsp;vous&nbsp;bénéficierez&nbsp;d''un&nbsp;[libelle_datd]&nbsp;tacite(1).<br/><br/>*&nbsp;Toutefois,&nbsp;dans&nbsp;le&nbsp;mois&nbsp;qui&nbsp;suit&nbsp;le&nbsp;dépôt&nbsp;de&nbsp;votre&nbsp;dossier,&nbsp;l''administration&nbsp;peut&nbsp;vous&nbsp;écrire&nbsp;:<br/>&nbsp;&nbsp;&nbsp;-&nbsp;soit&nbsp;pour&nbsp;vous&nbsp;avertir&nbsp;qu''un&nbsp;autre&nbsp;délai&nbsp;est&nbsp;applicable,&nbsp;lorsque&nbsp;le&nbsp;code&nbsp;de&nbsp;l''urbanisme&nbsp;l''a&nbsp;prévu&nbsp;pour&nbsp;permettre&nbsp;les&nbsp;consultations&nbsp;nécessaires&nbsp;(si&nbsp;votre&nbsp;projet&nbsp;nécessite&nbsp;la&nbsp;consultation&nbsp;d''autres&nbsp;services&nbsp;...)<br/>&nbsp;&nbsp;&nbsp;-&nbsp;soit&nbsp;pour&nbsp;vous&nbsp;indiquer&nbsp;qu''il&nbsp;manque&nbsp;une&nbsp;ou&nbsp;plusieurs&nbsp;pièces&nbsp;à&nbsp;votre&nbsp;dossier,<br/>&nbsp;&nbsp;&nbsp;-&nbsp;soit&nbsp;pour&nbsp;vous&nbsp;informer&nbsp;que&nbsp;votre&nbsp;projet&nbsp;&nbsp;correspond&nbsp;à&nbsp;un&nbsp;des&nbsp;cas&nbsp;où&nbsp;un&nbsp;accord&nbsp;tacite&nbsp;n''est&nbsp;pas&nbsp;possible.<br/><br/>*&nbsp;Si&nbsp;vous&nbsp;recevez&nbsp;une&nbsp;telle&nbsp;lettre&nbsp;avant&nbsp;la&nbsp;fin&nbsp;du&nbsp;premier&nbsp;mois,&nbsp;celle-ci&nbsp;remplacera&nbsp;le&nbsp;premier&nbsp;récépissé.<br/><br/>*&nbsp;Si&nbsp;vous&nbsp;n''avez&nbsp;rien&nbsp;reçu&nbsp;à&nbsp;la&nbsp;fin&nbsp;du&nbsp;premier&nbsp;mois&nbsp;suivant&nbsp;le&nbsp;dépôt,&nbsp;le&nbsp;délai&nbsp;de&nbsp;[delai_dossier]&nbsp;mois&nbsp;ne&nbsp;pourra&nbsp;être&nbsp;modifié.&nbsp;Si&nbsp;aucun&nbsp;courrier&nbsp;de&nbsp;l''administration&nbsp;ne&nbsp;vous&nbsp;est&nbsp;parvenu&nbsp;à&nbsp;l''issu&nbsp;de&nbsp;ce&nbsp;délai&nbsp;de&nbsp;[delai_dossier]&nbsp;mois,&nbsp;vous&nbsp;pourrez&nbsp;commencer&nbsp;les&nbsp;travaux&nbsp;(2)&nbsp;après&nbsp;avoir&nbsp;:<br/>&nbsp;&nbsp;&nbsp;-&nbsp;adresser&nbsp;au&nbsp;maire,&nbsp;en&nbsp;3&nbsp;exemplaires,&nbsp;une&nbsp;déclaration&nbsp;d''ouverture&nbsp;de&nbsp;chantier&nbsp;(vous&nbsp;trouverez&nbsp;un&nbsp;modèle&nbsp;de&nbsp;déclaration&nbsp;CERFA&nbsp;n°&nbsp;13407&nbsp;01&nbsp;à&nbsp;la&nbsp;mairie&nbsp;ou&nbsp;sur&nbsp;le&nbsp;site&nbsp;internet&nbsp;urbanisme&nbsp;du&nbsp;gouvernement)<br/>&nbsp;&nbsp;&nbsp;-&nbsp;afficher&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;ce&nbsp;recepissé&nbsp;sur&nbsp;lequel&nbsp;la&nbsp;mairie&nbsp;a&nbsp;mis&nbsp;son&nbsp;cachet&nbsp;pour&nbsp;attester&nbsp;la&nbsp;date&nbsp;de&nbsp;dépôt&nbsp;;<br/>&nbsp;&nbsp;&nbsp;-&nbsp;installer&nbsp;sur&nbsp;le&nbsp;terrain,&nbsp;pendant&nbsp;toute&nbsp;la&nbsp;durée&nbsp;du&nbsp;chantier,&nbsp;un&nbsp;panneau&nbsp;visible&nbsp;de&nbsp;la&nbsp;voie&nbsp;publique&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;(vous&nbsp;trouverez&nbsp;le&nbsp;modèle&nbsp;de&nbsp;panneau&nbsp;à&nbsp;la&nbsp;mairie,&nbsp;sur&nbsp;le&nbsp;site&nbsp;internet&nbsp;urbanisme&nbsp;du&nbsp;gouvernement,&nbsp;ainsi&nbsp;que&nbsp;dans&nbsp;la&nbsp;plupart&nbsp;des&nbsp;magasins&nbsp;de&nbsp;matériaux).<br/><br/>*&nbsp;ATTENTION&nbsp;:&nbsp;le&nbsp;permis&nbsp;n''est&nbsp;définitif&nbsp;qu''en&nbsp;l''absence&nbsp;de&nbsp;recours&nbsp;ou&nbsp;de&nbsp;retrait&nbsp;:<br/>&nbsp;&nbsp;&nbsp;-&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;2&nbsp;mois&nbsp;à&nbsp;compter&nbsp;de&nbsp;l''affichage&nbsp;sur&nbsp;le&nbsp;terrain,&nbsp;sa&nbsp;légalité&nbsp;peut&nbsp;être&nbsp;contestée&nbsp;par&nbsp;un&nbsp;tiers.&nbsp;Dans&nbsp;ce&nbsp;cas&nbsp;l''auteur&nbsp;du&nbsp;recours&nbsp;est&nbsp;tenu&nbsp;de&nbsp;vous&nbsp;en&nbsp;informer&nbsp;au&nbsp;plus&nbsp;tard&nbsp;quinze&nbsp;jours&nbsp;après&nbsp;le&nbsp;dépôt&nbsp;du&nbsp;recours.<br/>&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;3&nbsp;mois&nbsp;après&nbsp;la&nbsp;date&nbsp;de&nbsp;[libelle_datd],&nbsp;l''autorité&nbsp;compétente&nbsp;peut&nbsp;le&nbsp;retirer,&nbsp;si&nbsp;elle&nbsp;l''estime&nbsp;illégal.&nbsp;Elle&nbsp;est&nbsp;tenue&nbsp;de&nbsp;vous&nbsp;en&nbsp;informer&nbsp;préalablement&nbsp;et&nbsp;de&nbsp;vous&nbsp;permettre&nbsp;de&nbsp;répondre&nbsp;à&nbsp;ses&nbsp;observations.<br/><br pagebreak="true" /><br/>Le&nbsp;projet&nbsp;ayant&nbsp;fait&nbsp;l''objet&nbsp;de&nbsp;la&nbsp;demande&nbsp;de&nbsp;[libelle_datd]&nbsp;dont&nbsp;les&nbsp;références&nbsp;sont&nbsp;indiquées&nbsp;dans&nbsp;le&nbsp;cadre&nbsp;ci-dessus&nbsp;déposé&nbsp;à&nbsp;la&nbsp;mairie&nbsp;le&nbsp;[date_depot_dossier]&nbsp;fera&nbsp;l''objet&nbsp;d''un&nbsp;permis&nbsp;tacite&nbsp;(1)&nbsp;à&nbsp;défaut&nbsp;de&nbsp;réponse&nbsp;de&nbsp;l''administration&nbsp;[delai_dossier]&nbsp;mois&nbsp;après&nbsp;cette&nbsp;date.&nbsp;Les&nbsp;travaux&nbsp;(2)&nbsp;pourront&nbsp;alors&nbsp;être&nbsp;exécutés&nbsp;après&nbsp;affichage&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;du&nbsp;présent&nbsp;récépissé&nbsp;et&nbsp;d''un&nbsp;panneau&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;conforme&nbsp;au&nbsp;modèle&nbsp;réglementaire.<br/><br/><br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&ville&nbsp;,&nbsp;le&nbsp;&nbsp;&datecourrier<br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cachet&nbsp;de&nbsp;la&nbsp;mairie&nbsp;et&nbsp;signature&nbsp;du&nbsp;receveur<br/><br/><br/><br/><br/><br/><br/><br/><br/>(1)&nbsp;Permis&nbsp;tacite&nbsp;:&nbsp;afin&nbsp;de&nbsp;vous&nbsp;éviter&nbsp;d''être&nbsp;en&nbsp;infraction,&nbsp;il&nbsp;vous&nbsp;est&nbsp;recommandé,&nbsp;dans&nbsp;le&nbsp;cas&nbsp;d''un&nbsp;permis&nbsp;tacite,&nbsp;de&nbsp;vous&nbsp;assurer&nbsp;auprès&nbsp;de&nbsp;l''administration&nbsp;de&nbsp;la&nbsp;légalité&nbsp;dudit&nbsp;permis&nbsp;avant&nbsp;tout&nbsp;commencement&nbsp;de&nbsp;travaux.&nbsp;Sur&nbsp;simple&nbsp;demande&nbsp;de&nbsp;votre&nbsp;part,le&nbsp;maire&nbsp;pourra&nbsp;alors&nbsp;vous&nbsp;délivrer&nbsp;une&nbsp;attestation&nbsp;certifiant&nbsp;qu''aucune&nbsp;décision&nbsp;de&nbsp;refus&nbsp;n''a&nbsp;été&nbsp;prise&nbsp;à&nbsp;votre&nbsp;insu.&nbsp;En&nbsp;effet,&nbsp;si&nbsp;le&nbsp;premis&nbsp;tacite&nbsp;était&nbsp;irrégulier,&nbsp;il&nbsp;serait&nbsp;retiré&nbsp;et&nbsp;les&nbsp;tribunaux&nbsp;pourraient&nbsp;vous&nbsp;astreindre&nbsp;à&nbsp;remettre&nbsp;les&nbsp;lieux&nbsp;en&nbsp;leur&nbsp;état&nbsp;initial.<br/>(2)&nbsp;Certains&nbsp;travaux&nbsp;ne&nbsp;peuvent&nbsp;pas&nbsp;être&nbsp;commencés&nbsp;dès&nbsp;la&nbsp;délivrance&nbsp;de&nbsp;[libelle_datd]&nbsp;et&nbsp;doivent&nbsp;être&nbsp;différés&nbsp;:&nbsp;c''est&nbsp;le&nbsp;cas&nbsp;des&nbsp;travaux&nbsp;situés&nbsp;dans&nbsp;un&nbsp;site&nbsp;classé.&nbsp;Vous&nbsp;pouvez&nbsp;vérifier&nbsp;auprès&nbsp;de&nbsp;la&nbsp;mairie&nbsp;que&nbsp;votre&nbsp;projet&nbsp;ne&nbsp;rentre&nbsp;pas&nbsp;dans&nbsp;ce&nbsp;cas<br/><br/><br/><br/><br/><br/><br/><br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;INFORMATIONS&nbsp;A&nbsp;LIRE&nbsp;ATTENTIVEMENT:<br/><br/>DELAIS&nbsp;ET&nbsp;VOIES&nbsp;DE&nbsp;RECOURS&nbsp;:<br/>Le&nbsp;permis&nbsp;tacite&nbsp;peut&nbsp;faire&nbsp;l''objet&nbsp;d''un&nbsp;recours&nbsp;gracieux&nbsp;ou&nbsp;d''un&nbsp;recours&nbsp;contentieux&nbsp;dans&nbsp;un&nbsp;délai&nbsp;de&nbsp;deux&nbsp;mois&nbsp;à&nbsp;compter&nbsp;du&nbsp;premier&nbsp;jour&nbsp;d''une&nbsp;période&nbsp;continue&nbsp;de&nbsp;deux&nbsp;mois&nbsp;d''affichage&nbsp;sur&nbsp;le&nbsp;terrain&nbsp;d''un&nbsp;panneau&nbsp;décrivant&nbsp;le&nbsp;projet&nbsp;et&nbsp;visible&nbsp;de&nbsp;la&nbsp;voie&nbsp;publique&nbsp;(art&nbsp;R&nbsp;600-2&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/>L''auteur&nbsp;du&nbsp;recours&nbsp;est&nbsp;tenu,&nbsp;à&nbsp;peine&nbsp;d''irrecevabilité,&nbsp;de&nbsp;notifier&nbsp;copie&nbsp;de&nbsp;celui-ci&nbsp;à&nbsp;l''auteur&nbsp;de&nbsp;la&nbsp;décision&nbsp;et&nbsp;au&nbsp;titulaire&nbsp;de&nbsp;l''autorisation&nbsp;(art&nbsp;R&nbsp;600-1&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme)<br/><br/>DUREE&nbsp;DE&nbsp;VALIDITE&nbsp;DU&nbsp;PERMIS&nbsp;:&nbsp;conformément&nbsp;à&nbsp;l''article&nbsp;R.424-17&nbsp;du&nbsp;code&nbsp;de&nbsp;l''urbanisme&nbsp;et&nbsp;en&nbsp;application&nbsp;du&nbsp;décret&nbsp;n°2008-1353&nbsp;du&nbsp;19&nbsp;décembre&nbsp;2008,&nbsp;l''autorisation&nbsp;est&nbsp;périmée&nbsp;si&nbsp;les&nbsp;travaux&nbsp;ne&nbsp;sont&nbsp;pas&nbsp;entrepris&nbsp;dans&nbsp;le&nbsp;délais&nbsp;de&nbsp;trois&nbsp;ans&nbsp;à&nbsp;compter&nbsp;de&nbsp;sa&nbsp;notification&nbsp;au(x)&nbsp;bénéficiaire(s).&nbsp;IL&nbsp;en&nbsp;est&nbsp;de&nbsp;même&nbsp;si,&nbsp;passé&nbsp;ce&nbsp;délai,&nbsp;les&nbsp;travaux&nbsp;sont&nbsp;interrompus&nbsp;pendant&nbsp;un&nbsp;délai&nbsp;supérieur&nbsp;à&nbsp;une&nbsp;année.&nbsp;En&nbsp;cas&nbsp;de&nbsp;recours&nbsp;le&nbsp;délai&nbsp;de&nbsp;validité&nbsp;du&nbsp;permis&nbsp;et&nbsp;suspendu&nbsp;jusqu''au&nbsp;prononcé&nbsp;d''une&nbsp;décision&nbsp;juridictionnelle&nbsp;irrévocable.&nbsp;L''autorisation&nbsp;peut&nbsp;être&nbsp;prorogée&nbsp;par&nbsp;périodes&nbsp;d''une&nbsp;année&nbsp;si&nbsp;les&nbsp;prescriptions&nbsp;d''urbanisme,&nbsp;les&nbsp;servitudes&nbsp;d''urbanisme&nbsp;de&nbsp;tous&nbsp;ordres&nbsp;et&nbsp;le&nbsp;régime&nbsp;des&nbsp;taxes&nbsp;et&nbsp;participations&nbsp;n''ont&nbsp;pas&nbsp;évolué.&nbsp;Vous&nbsp;pouvez&nbsp;présenter&nbsp;une&nbsp;demande&nbsp;de&nbsp;prorogation&nbsp;sur&nbsp;papier&nbsp;libre,&nbsp;accompagnée&nbsp;de&nbsp;l''autorisation&nbsp;pour&nbsp;laquelle&nbsp;vous&nbsp;demandez&nbsp;la&nbsp;prorogation,&nbsp;au&nbsp;moins&nbsp;deux&nbsp;mois&nbsp;avant&nbsp;l''expiration&nbsp;du&nbsp;délai&nbsp;de&nbsp;validité.<br/><br/>L''autorisation&nbsp;est&nbsp;délivrée&nbsp;sous&nbsp;réserve&nbsp;du&nbsp;DROIT&nbsp;DES&nbsp;TIERS&nbsp;:&nbsp;elle&nbsp;a&nbsp;pour&nbsp;objet&nbsp;de&nbsp;vérifier&nbsp;la&nbsp;conformité&nbsp;du&nbsp;projet&nbsp;aux&nbsp;règles&nbsp;et&nbsp;servitudes&nbsp;d''urbanisme.&nbsp;Elle&nbsp;n''a&nbsp;pas&nbsp;pour&nbsp;objet&nbsp;de&nbsp;vérifier&nbsp;que&nbsp;le&nbsp;projet&nbsp;respecte&nbsp;les&nbsp;autres&nbsp;réglementations&nbsp;et&nbsp;les&nbsp;règles&nbsp;de&nbsp;droit&nbsp;privé.&nbsp;Toute&nbsp;personne&nbsp;s''estimant&nbsp;lésée&nbsp;par&nbsp;la&nbsp;méconnaissance&nbsp;du&nbsp;droit&nbsp;de&nbsp;propriété&nbsp;ou&nbsp;d''autres&nbsp;dispositions&nbsp;de&nbsp;droit&nbsp;privé&nbsp;peut&nbsp;donc&nbsp;faire&nbsp;valoir&nbsp;ses&nbsp;droits&nbsp;en&nbsp;saisissant&nbsp;les&nbsp;tribunaux&nbsp;civils,&nbsp;même&nbsp;si&nbsp;l''autorisation&nbsp;respecte&nbsp;les&nbsp;règles&nbsp;d''urbanisme.<br/><br/>Les&nbsp;obligations&nbsp;du&nbsp;(ou&nbsp;des)&nbsp;bénéficiaire(s)&nbsp;de&nbsp;l''autorisation&nbsp;:&nbsp;il&nbsp;doit&nbsp;souscrire&nbsp;l''assurance&nbsp;de&nbsp;dommages&nbsp;prévue&nbsp;par&nbsp;l''article&nbsp;L242-1&nbsp;du&nbsp;code&nbsp;des&nbsp;assurances.</span></span></p>
 Surface totale : [su_tot_shon_tot_donnees_techniques] ', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (44, 1, 'lettre_information_acces_citoyen', 'Lettre d''information d''accès citoyen', true, 'P', 'A4', NULL, 10, 5, '<p style=''text-align: left;''> </p>
<p style=''text-align: center;''><span class=''mce_maj'' style=''font-weight: bold; font-size: 12pt; font-family: helvetica;''><span class=''field_value pre''>[libelle_om_lettretype]</span> </span></p>
<p style=''text-align: center;''> </p>
<p style=''text-align: left;''> </p>
<table style=''width: 92%; height: 20px;'' border=''1'' cellpadding=''5''>
<tbody>
<tr>
<td style=''width: 60%;''>
<p><span style=''font-size: 10pt; font-family: helvetica;''><span style=''font-size: 12pt;''><span style=''font-size: 10pt; font-family: helvetica;''>Dossier :      </span></span><span style=''font-weight: bold; font-size: 12pt;''><span style=''font-size: 10pt; font-family: helvetica;''> <span style=''font-weight: bold; font-size: 12pt;''><span class=''field_value pre''><span class=''field_value pre''>[libelle_dossier]</span></span></span></span></span></span></p>
<p><span style=''font-size: 10pt; font-family: helvetica;''>Déposé le :   <span class=''field_value pre''><span class=''field_value pre''><span class=''field_value pre''><span class=''field_value pre''>[date_depot_dossier]</span></span></span></span></span></p>
<p><span style=''font-size: 10pt; font-family: helvetica;''><span style=''text-decoration: underline;''>Adresse des travaux</span> :</span></p>
<p><span class=''field_value pre'' style=''font-size: 10pt; font-family: helvetica; font-weight: bold;''><span class=''field_value pre mce_maj''>[terrain_adresse_voie_numero_dossier] [terrain_adresse_voie_dossier]</span></span></p>
<p><span class=''field_value pre'' style=''font-size: 10pt; font-family: helvetica; font-weight: bold;''><span class=''field_value pre mce_maj''>[terrain_adresse_lieu_dit_dossier] </span><span class=''field_value pre mce_maj''>[terrain_adresse_bp_dossier]</span></span></p>
<p><span class=''field_value pre'' style=''font-size: 10pt; font-family: helvetica; font-weight: bold;''><span class=''field_value pre mce_maj''>[terrain_adresse_code_postal_dossier] [terrain_adresse_localite_dossier] [terrain_adresse_cedex_dossier]</span></span></p>
</td>
<td>
<p><span style=''font-family: helvetica; font-size: 10pt;''><span style=''text-decoration: underline;''>Demandeur</span> :       <span class=''mce_codebarre''>[code_barres_instruction]</span></span></p>
<p><span class=''mce_maj'' style=''font-family: helvetica; font-size: 10pt; font-weight: bold;''>[nom_correspondant]</span></p>
<p><span class=''mce_maj'' style=''font-family: helvetica; font-size: 10pt; font-weight: bold;''>[numero_correspondant] [voie_correspondant] [complement_correspondant] - [lieu_dit_correspondant]</span></p>
<p><span class=''mce_maj'' style=''font-family: helvetica; font-size: 10pt; font-weight: bold;''>[bp_correspondant]</span></p>
<p><span class=''mce_maj'' style=''font-family: helvetica; font-size: 10pt; font-weight: bold;''>[code_postal_correspondant] [ville_correspondant] [cedex_correspondant]</span></p>
<p><span class=''mce_maj'' style=''font-family: helvetica; font-size: 10pt; font-weight: bold;''>[pays_correspondant]</span></p>
</td>
</tr>
<tr>
<td colspan=''2''>
<p style=''text-align: left;''><span style=''font-size: 8pt; font-family: helvetica;''><span style=''text-decoration: underline;''><em>Affaire suivie par</em></span> : <span class=''field_value pre''><span class=''field_value pre''>[nom_instructeur] -<span style=''font-family: helvetica;''><span class=''field_value pre''><span class=''field_value pre''> Division [division_instructeur]</span></span></span> - [telephone_instructeur] - [email_instructeur]</span></span></span></p>
<p style=''text-align: center;''><span class=''mce_maj'' style=''font-family: helvetica; font-size: 8pt;''>&amp;adresse_direction_urbanisme</span></p>
</td>
</tr>
</tbody>
</table>', 10, 5, 190, 5, '0', '<table border=''0'' style=''float: left;''>
<tbody>
<tr>
<td>[civilite_petitionnaire_principal]</td>
<td>le [date_evenement_instruction]</td>
</tr>
</tbody>
</table>
<p style=''text-align: left;''><span style=''font-family: helvetica; font-size: 10pt;''><span style=''font-family: helvetica; font-size: 10pt;''>&amp;acces_citoyen</span></span></p>', 29, 10, 5, 10, 12, 'helvetica', '0-0-0', '', 0, '<p style=''text-align: center; font-size: 8pt;''><em>Page &amp;numpage/&amp;nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (45, 2, 'TNR_champs_fusion_variables_remplacement', 'TNR d''imbrication de champs de fusion et variables de remplacement', true, 'P', 'A4', 'logopdf.png', 10, 10, '', 70, 15, 130, 5, '1', '<p><span style="font-weight: bold;">test_fusion_variable_fusion:<br/>[complement1_instruction]<br/><br/><br/>test_variable_fusion_variable:<br/>&test2<br/><br/>test_variable_variable:<br/>&test4<br/><br/>test_fusion_fusion:<br/>[complement4_instruction]</span></p>', 29, 10, 10, 10, 10, NULL, NULL, NULL, 0, '<p style="text-align:center;font-size:8pt;"><em>Page &numpage/&nbpages</em></p>', 12);
INSERT INTO om_lettretype (om_lettretype, om_collectivite, id, libelle, actif, orientation, format, logo, logoleft, logotop, titre_om_htmletat, titreleft, titretop, titrelargeur, titrehauteur, titrebordure, corps_om_htmletatex, om_sql, margeleft, margetop, margeright, margebottom, se_font, se_couleurtexte, header_om_htmletat, header_offset, footer_om_htmletat, footer_offset) VALUES (46, 1, 'bordereau', 'Bordereau quotidien', true, 'P', 'A4', NULL, 10, 10, '<p><span style="font-weight: bold;">Bordereau du [envoi]</span></p>', 100, 25, 95, 10, '1', '<p><span style="font-weight: bold;">Bordereau : [libelle]</span></p>
<p><span id="bordereau" class="mce_sousetat">Dossiers d''un bordereau</span></p>', 31, 10, 25, 10, 25, 'helvetica', '0-0-0', '', 10, '<p style="text-align: center; font-size: 8pt;"><em>Page &amp;numpage/&amp;nbpages Imprimé le : [date_jour]<br /></em></p>', 12);


--
-- Data for Name: om_logo; Type: TABLE DATA; Schema: openads; Owner: postgres
--

INSERT INTO om_logo (om_logo, id, libelle, description, fichier, resolution, actif, om_collectivite) VALUES (6, 'logopdf.png', 'logopdf.png multi', NULL, 'd20a5c36d3b83464bab63035a7f61901', 300, true, 1);
INSERT INTO om_logo (om_logo, id, libelle, description, fichier, resolution, actif, om_collectivite) VALUES (2, 'logopdf.png', 'logopdf.png', NULL, '88154c6f68d3a0e1928c84fc0187993d', 300, true, 2);
INSERT INTO om_logo (om_logo, id, libelle, description, fichier, resolution, actif, om_collectivite) VALUES (5, 'pixel.png', 'pixel.png', NULL, 'ef22c5e2858def44a3756665f799be1f', 300, true, 2);


--
-- Data for Name: om_sousetat; Type: TABLE DATA; Schema: openads; Owner: postgres
--

INSERT INTO om_sousetat (om_sousetat, om_collectivite, id, libelle, actif, titre, titrehauteur, titrefont, titreattribut, titretaille, titrebordure, titrealign, titrefond, titrefondcouleur, titretextecouleur, intervalle_debut, intervalle_fin, entete_flag, entete_fond, entete_orientation, entete_hauteur, entetecolone_bordure, entetecolone_align, entete_fondcouleur, entete_textecouleur, tableau_largeur, tableau_bordure, tableau_fontaille, bordure_couleur, se_fond1, se_fond2, cellule_fond, cellule_hauteur, cellule_largeur, cellule_bordure_un, cellule_bordure, cellule_align, cellule_fond_total, cellule_fontaille_total, cellule_hauteur_total, cellule_fondcouleur_total, cellule_bordure_total, cellule_align_total, cellule_fond_moyenne, cellule_fontaille_moyenne, cellule_hauteur_moyenne, cellule_fondcouleur_moyenne, cellule_bordure_moyenne, cellule_align_moyenne, cellule_fond_nbr, cellule_fontaille_nbr, cellule_hauteur_nbr, cellule_fondcouleur_nbr, cellule_bordure_nbr, cellule_align_nbr, cellule_numerique, cellule_total, cellule_moyenne, cellule_compteur, om_sql) VALUES (21, 1, 'dossier_depots_division', 'Répertoire des dépôts et des dépôts de pièces du jour pour la division', true, 'Répertoire des dépôts et des dépôts de pièces du jour pour la division', 8, 'helvetica', 'B', 12, '0', 'C', '0', '255-255-255', '0-0-0', 5, 0, '1', '1', '0|90|0|0|0', 20, '0|0|0|0|0', 'C|C|C|C|C', '114-195-243', '0-0-0', 297, '0', 11, '0-0-0', '243-246-246', '255-255-255', '1', 11, '46|10|24|98|98', 'TLB|TLB|TLB|TLB|TLBR', 'TLB|LTB|LTB|LTB|LTBR', 'L|L|L|L|L', '1', 0, 15, '196-213-213', 'L|L|L|L|L', 'L|L|C', '1', 0, 5, '196-213-213', 'L|L|L|L|L', 'L|L|L|L|C', '1', 0, 15, '255-255-255', 'L|L|L|L|L', 'L|R|C', '999|999|999|999|999', '0|0|0|0|0', '0|0|0|0|0', '0|0|0|0|0', 'Récup dans le reqmo');
INSERT INTO om_sousetat (om_sousetat, om_collectivite, id, libelle, actif, titre, titrehauteur, titrefont, titreattribut, titretaille, titrebordure, titrealign, titrefond, titrefondcouleur, titretextecouleur, intervalle_debut, intervalle_fin, entete_flag, entete_fond, entete_orientation, entete_hauteur, entetecolone_bordure, entetecolone_align, entete_fondcouleur, entete_textecouleur, tableau_largeur, tableau_bordure, tableau_fontaille, bordure_couleur, se_fond1, se_fond2, cellule_fond, cellule_hauteur, cellule_largeur, cellule_bordure_un, cellule_bordure, cellule_align, cellule_fond_total, cellule_fontaille_total, cellule_hauteur_total, cellule_fondcouleur_total, cellule_bordure_total, cellule_align_total, cellule_fond_moyenne, cellule_fontaille_moyenne, cellule_hauteur_moyenne, cellule_fondcouleur_moyenne, cellule_bordure_moyenne, cellule_align_moyenne, cellule_fond_nbr, cellule_fontaille_nbr, cellule_hauteur_nbr, cellule_fondcouleur_nbr, cellule_bordure_nbr, cellule_align_nbr, cellule_numerique, cellule_total, cellule_moyenne, cellule_compteur, om_sql) VALUES (16, 1, 'commission_proposition_ordre_jour', 'Commission - Proposition d''ordre du jour', true, 'Ville de &ville', 8, 'helvetica', '', 9, '0', 'L', '0', '243-246-246', '0-0-0', 5, 0, '0', '1', '0|0|0', 20, 'L|L|L', 'C|C|C', '145-184-184', '0-0-0', 297, '1', 11, '0-0-0', '243-246-246', '255-255-255', '1', 11, '5|138|138', 'TLB|TLB|TLBR', 'TLB|LTB|LTR', 'L|L|L', '1', 0, 15, '196-213-213', 'L|L|L', 'L|L|C', '1', 0, 5, '212-219-219', 'L|L|L', 'L|L|C', '1', 0, 15, '255-255-255', 'L|L|L', 'L|R|C', '999|999|999', '0|0|0', '0|0|0', '0|0|0', '
SELECT
    row_number() OVER(ORDER BY division.chef ASC,dossier_commission.dossier) cel1,
    CONCAT(
        ''Dossier :        '', dossier.dossier_libelle, ''      '', ''Rap. '', division.chef, ''
'',
        ''Demandeur : '', CASE WHEN demandeur.qualite=''particulier'' THEN CONCAT(demandeur.particulier_nom, '' '', demandeur.particulier_prenom) WHEN demandeur.qualite=''personne_morale'' THEN CONCAT(demandeur.personne_morale_nom, '' '', demandeur.personne_morale_prenom, '' '', demandeur.personne_morale_denomination, '' '', demandeur.personne_morale_raison_sociale) END,'' 
'', ''                      '',CONCAT(demandeur.numero, '' '', demandeur.voie, '' '', demandeur.complement, '' '', demandeur.lieu_dit, '' '', demandeur.code_postal, '' '', demandeur.localite) , ''
'',

        ''Adresse'',''
'',''Travaux :       '', TRIM(CONCAT(dossier.terrain_adresse_voie_numero,'' '',dossier.terrain_adresse_voie,'' '', dossier.terrain_adresse_lieu_dit,'' '', dossier.terrain_adresse_code_postal)),''
'',      ''Quartier :       '', quartier.libelle,''
'',
        ''Opération :    '', CONCAT(donnees_techniques.am_projet_desc, donnees_techniques.co_projet_desc, donnees_techniques.dm_projet_desc), ''
'',
        ''Architecte :    '', CONCAT(architecte.nom,'' '',architecte.prenom),''
'',
''
'',
        ''Dépot : '', to_char(dossier.date_depot,''DD/MM/YYYY''), ''        Délai : '', to_char(dossier.date_limite,''DD/MM/YYYY''), ''       Etat : '', etat.libelle, ''
'',
        ''SP : '',donnees_techniques.su_tot_shon_tot,'' m²'',''    Nbr lots :  '',donnees_techniques.am_lot_max_nb,''          Nbr parkings : '', donnees_techniques.co_statio_apr_nb,'' + '',donnees_techniques.co_statio_place_nb, '' hors terrain'',''
'',
        ''Nbr logts : '', donnees_techniques.co_tot_log_nb , '' -->'','' Typologie : '', donnees_techniques.co_log_1p_nb,'' T1,   '', donnees_techniques.co_log_2p_nb, '' T2,   '', donnees_techniques.co_log_3p_nb, '' T3,   '', donnees_techniques.co_log_4p_nb,'' T4,   '', donnees_techniques.co_log_5p_nb, '' T5,   '', donnees_techniques.co_log_6p_nb,''T6 '')as cel2,
    dossier_commission.motivation as motivation
FROM
    &DB_PREFIXEcommission
LEFT JOIN
    &DB_PREFIXEdossier_commission
    ON
        commission.commission=dossier_commission.commission
LEFT JOIN
    &DB_PREFIXEdossier
    ON
        dossier_commission.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEarrondissement
    ON
        dossier.terrain_adresse_code_postal = arrondissement.code_postal
LEFT JOIN
    &DB_PREFIXEinstructeur
    ON
        dossier.instructeur = instructeur.instructeur
LEFT JOIN
    &DB_PREFIXElien_dossier_demandeur
    ON
        dossier.dossier = lien_dossier_demandeur.dossier
        AND lien_dossier_demandeur.petitionnaire_principal IS TRUE
LEFT JOIN
    &DB_PREFIXEdemandeur
    ON
        lien_dossier_demandeur.demandeur = demandeur.demandeur
LEFT JOIN
    &DB_PREFIXEcivilite
    ON
        demandeur.particulier_civilite = civilite.civilite OR demandeur.personne_morale_civilite = civilite.civilite
LEFT JOIN
    &DB_PREFIXEdossier_autorisation
    ON
        dossier.dossier_autorisation = dossier_autorisation.dossier_autorisation
LEFT JOIN
    &DB_PREFIXEdossier_autorisation_type_detaille
    ON
        dossier_autorisation.dossier_autorisation_type_detaille = dossier_autorisation_type_detaille.dossier_autorisation_type_detaille
LEFT JOIN
    &DB_PREFIXEdonnees_techniques
    ON
        dossier.dossier = donnees_techniques.dossier_instruction
LEFT JOIN
    &DB_PREFIXEquartier
    ON
        dossier.quartier = quartier.quartier
LEFT JOIN 
    &DB_PREFIXEdivision 
    ON 
    instructeur.division = division.division
LEFT JOIN
    &DB_PREFIXEarchitecte
    ON
    donnees_techniques.architecte = architecte.architecte
LEFT JOIN
    &DB_PREFIXEetat
    ON
    dossier.etat = etat.etat
WHERE
    commission.commission = &idx
');
INSERT INTO om_sousetat (om_sousetat, om_collectivite, id, libelle, actif, titre, titrehauteur, titrefont, titreattribut, titretaille, titrebordure, titrealign, titrefond, titrefondcouleur, titretextecouleur, intervalle_debut, intervalle_fin, entete_flag, entete_fond, entete_orientation, entete_hauteur, entetecolone_bordure, entetecolone_align, entete_fondcouleur, entete_textecouleur, tableau_largeur, tableau_bordure, tableau_fontaille, bordure_couleur, se_fond1, se_fond2, cellule_fond, cellule_hauteur, cellule_largeur, cellule_bordure_un, cellule_bordure, cellule_align, cellule_fond_total, cellule_fontaille_total, cellule_hauteur_total, cellule_fondcouleur_total, cellule_bordure_total, cellule_align_total, cellule_fond_moyenne, cellule_fontaille_moyenne, cellule_hauteur_moyenne, cellule_fondcouleur_moyenne, cellule_bordure_moyenne, cellule_align_moyenne, cellule_fond_nbr, cellule_fontaille_nbr, cellule_hauteur_nbr, cellule_fondcouleur_nbr, cellule_bordure_nbr, cellule_align_nbr, cellule_numerique, cellule_total, cellule_moyenne, cellule_compteur, om_sql) VALUES (23, 1, 'commission', 'Liste des commissions / dossier', true, 'Commission', 8, 'helvetica', 'B', 10, '0', 'L', '0', '243-246-246', '0-0-0', 10, 5, '1', '1', '0|0|0|0', 8, 'TLB|LTBR|LTBR|LTBR', 'C|C|C|C', '145-184-184', '0-0-0', 195, '1', 8, '0-0-0', '243-246-246', '255-255-255', '1', 10, '55|25|20|95', 'LTBR|LTBR|LTBR|LTBR', 'LTBR|LTBR|LTBR|LTBR', 'L|C|C|L', '1', 8, 15, '196-213-213', 'TBL|TBLR|TBLR|TBLR', 'L|C|C|C', '1', 8, 5, '196-213-213', 'BTL|BTLR|BTLR|BTLR', 'L|C|C|C', '1', 8, 10, '255-255-255', 'TBL|TBLR|TBLR|TBLR', 'L|C|C|C', '999|999|999|999', '0|0|0|0', '0|0|0|0', '0|0|0|0', 'SELECT
    commission_type.libelle,
    commission.code,
    TO_CHAR(commission.date_commission,''DD/MM/YYYY'') as date_commission,
    dossier_commission.avis
FROM &DB_PREFIXEdossier_commission
LEFT JOIN &DB_PREFIXEcommission
ON
dossier_commission.commission = commission.commission
LEFT JOIN &DB_PREFIXEcommission_type
ON
commission.commission_type = commission_type.commission_type
WHERE dossier_commission.dossier = ''&idx'' and dossier_commission.commission IS NOT NULL');
INSERT INTO om_sousetat (om_sousetat, om_collectivite, id, libelle, actif, titre, titrehauteur, titrefont, titreattribut, titretaille, titrebordure, titrealign, titrefond, titrefondcouleur, titretextecouleur, intervalle_debut, intervalle_fin, entete_flag, entete_fond, entete_orientation, entete_hauteur, entetecolone_bordure, entetecolone_align, entete_fondcouleur, entete_textecouleur, tableau_largeur, tableau_bordure, tableau_fontaille, bordure_couleur, se_fond1, se_fond2, cellule_fond, cellule_hauteur, cellule_largeur, cellule_bordure_un, cellule_bordure, cellule_align, cellule_fond_total, cellule_fontaille_total, cellule_hauteur_total, cellule_fondcouleur_total, cellule_bordure_total, cellule_align_total, cellule_fond_moyenne, cellule_fontaille_moyenne, cellule_hauteur_moyenne, cellule_fondcouleur_moyenne, cellule_bordure_moyenne, cellule_align_moyenne, cellule_fond_nbr, cellule_fontaille_nbr, cellule_hauteur_nbr, cellule_fondcouleur_nbr, cellule_bordure_nbr, cellule_align_nbr, cellule_numerique, cellule_total, cellule_moyenne, cellule_compteur, om_sql) VALUES (22, 1, 'dossier_transmission_dttm_signature_prefet', 'Bordereau transmission DTTM pour signature préfet', true, 'Bordereau transmission DTTM pour signature préfet', 8, 'helvetica', 'B', 12, '0', 'C', '0', '255-255-255', '0-0-0', 5, 0, '1', '1', '0|0|0|0', 20, '0|0|0|0', 'C|C|C|C', '114-195-243', '0-0-0', 297, '0', 11, '0-0-0', '243-246-246', '255-255-255', '1', 11, '46|22|100|100', 'TLB|TLB|TLB|TLBR', 'TLB|LTB|LTB|LTBR', 'L|L|L|L', '1', 0, 15, '196-213-213', 'L|L|L|L', 'L|L|C', '1', 0, 5, '212-219-219', 'L|L|L|L', 'L|L|L|C', '1', 0, 15, '255-255-255', 'L|L|L|L', 'L|R|C', '999|999|999|999', '0|0|0|0', '0|0|0|0', '0|0|0|0', 'Récup dans le reqmo');
INSERT INTO om_sousetat (om_sousetat, om_collectivite, id, libelle, actif, titre, titrehauteur, titrefont, titreattribut, titretaille, titrebordure, titrealign, titrefond, titrefondcouleur, titretextecouleur, intervalle_debut, intervalle_fin, entete_flag, entete_fond, entete_orientation, entete_hauteur, entetecolone_bordure, entetecolone_align, entete_fondcouleur, entete_textecouleur, tableau_largeur, tableau_bordure, tableau_fontaille, bordure_couleur, se_fond1, se_fond2, cellule_fond, cellule_hauteur, cellule_largeur, cellule_bordure_un, cellule_bordure, cellule_align, cellule_fond_total, cellule_fontaille_total, cellule_hauteur_total, cellule_fondcouleur_total, cellule_bordure_total, cellule_align_total, cellule_fond_moyenne, cellule_fontaille_moyenne, cellule_hauteur_moyenne, cellule_fondcouleur_moyenne, cellule_bordure_moyenne, cellule_align_moyenne, cellule_fond_nbr, cellule_fontaille_nbr, cellule_hauteur_nbr, cellule_fondcouleur_nbr, cellule_bordure_nbr, cellule_align_nbr, cellule_numerique, cellule_total, cellule_moyenne, cellule_compteur, om_sql) VALUES (20, 1, 'dossier_premier_depot_dttm', 'Dossier 1er dépôt DTTM', true, 'Répertoire des premiers dossiers DDE', 8, 'helvetica', 'B', 12, '0', 'C', '0', '255-255-255', '0-0-0', 5, 0, '1', '1', '0|0|0|0', 20, '0|0|0|0', 'C|C|C|C', '114-195-243', '0-0-0', 297, '0', 11, '0-0-0', '243-246-246', '255-255-255', '1', 11, '46|22|100|100', 'TLB|TLB|TLB|TLBR', 'TLB|LTB|LTB|LTBR', 'L|L|L|L', '1', 0, 15, '196-213-213', 'L|L|L|L', 'L|L|C', '1', 0, 5, '212-219-219', 'L|L|L|L', 'L|L|L|C', '1', 0, 15, '255-255-255', 'L|L|L|L', 'L|R|C', '999|999|999|999', '0|0|0|0', '0|0|0|0', '0|0|0|0', 'Récup dans le reqmo');
INSERT INTO om_sousetat (om_sousetat, om_collectivite, id, libelle, actif, titre, titrehauteur, titrefont, titreattribut, titretaille, titrebordure, titrealign, titrefond, titrefondcouleur, titretextecouleur, intervalle_debut, intervalle_fin, entete_flag, entete_fond, entete_orientation, entete_hauteur, entetecolone_bordure, entetecolone_align, entete_fondcouleur, entete_textecouleur, tableau_largeur, tableau_bordure, tableau_fontaille, bordure_couleur, se_fond1, se_fond2, cellule_fond, cellule_hauteur, cellule_largeur, cellule_bordure_un, cellule_bordure, cellule_align, cellule_fond_total, cellule_fontaille_total, cellule_hauteur_total, cellule_fondcouleur_total, cellule_bordure_total, cellule_align_total, cellule_fond_moyenne, cellule_fontaille_moyenne, cellule_hauteur_moyenne, cellule_fondcouleur_moyenne, cellule_bordure_moyenne, cellule_align_moyenne, cellule_fond_nbr, cellule_fontaille_nbr, cellule_hauteur_nbr, cellule_fondcouleur_nbr, cellule_bordure_nbr, cellule_align_nbr, cellule_numerique, cellule_total, cellule_moyenne, cellule_compteur, om_sql) VALUES (2, 1, 'instruction', 'Liste des instructions / dossier', true, 'Instruction', 8, 'helvetica', 'B', 10, '0', 'L', '0', '243-246-246', '0-0-0', 10, 5, '1', '1', '0|0|0|0|0|0', 8, 'TLB|LTBR|LTBR|LTBR|LTBR|LTBR', 'C|C|C|C|C|C', '145-184-189', '0-0-0', 195, '1', 8, '0-0-0', '243-246-246', '255-255-255', '1', 10, '70|25|25|25|25|25', 'LTBR|LTBR|LTBR|LTBR|LTBR|LTBR', 'LTBR|LTBR|LTBR|LTBR|LTBR|LTBR', 'L|C|C|C|C|C', '1', 8, 15, '196-213-215', 'TBL|TBLR|TBLR|TBLR|TBLR|TBLR', 'L|C|C|C|C|C', '1', 8, 5, '212-219-220', 'BTL|BTLR|BTLR|BTLR|BTLR|BTLR', 'L|C|C|C|C|C', '1', 8, 10, '255-255-255', 'TBL|TBLR|TBLR|TBLR|TBLR|TBLR', 'L|C|C|C|C|C', '999|999|999|999|999|999', '0|0|0|0|0|0', '0|0|0|0|0|0', '0|0|0|0|0|0', '
SELECT evenement.libelle as evenement,
    to_char(date_evenement,''DD/MM/YYYY'') as date_evenement,
    to_char(date_envoi_signature,''DD/MM/YYYY'') as date_envoi_signature,
    to_char(date_retour_signature,''DD/MM/YYYY'') as date_retour_signature,
    to_char(date_envoi_rar,''DD/MM/YYYY'') as date_envoi_rar,
    to_char(date_retour_rar,''DD/MM/YYYY'') as date_retour_rar
    from &DB_PREFIXEinstruction
    inner join &DB_PREFIXEevenement on evenement.evenement = instruction.evenement
    where dossier = ''&idx''
    and evenement.retour IS FALSE
    order by instruction.date_evenement asc, instruction asc
');
INSERT INTO om_sousetat (om_sousetat, om_collectivite, id, libelle, actif, titre, titrehauteur, titrefont, titreattribut, titretaille, titrebordure, titrealign, titrefond, titrefondcouleur, titretextecouleur, intervalle_debut, intervalle_fin, entete_flag, entete_fond, entete_orientation, entete_hauteur, entetecolone_bordure, entetecolone_align, entete_fondcouleur, entete_textecouleur, tableau_largeur, tableau_bordure, tableau_fontaille, bordure_couleur, se_fond1, se_fond2, cellule_fond, cellule_hauteur, cellule_largeur, cellule_bordure_un, cellule_bordure, cellule_align, cellule_fond_total, cellule_fontaille_total, cellule_hauteur_total, cellule_fondcouleur_total, cellule_bordure_total, cellule_align_total, cellule_fond_moyenne, cellule_fontaille_moyenne, cellule_hauteur_moyenne, cellule_fondcouleur_moyenne, cellule_bordure_moyenne, cellule_align_moyenne, cellule_fond_nbr, cellule_fontaille_nbr, cellule_hauteur_nbr, cellule_fondcouleur_nbr, cellule_bordure_nbr, cellule_align_nbr, cellule_numerique, cellule_total, cellule_moyenne, cellule_compteur, om_sql) VALUES (6, 1, 'consultation', 'Liste des consultations / dossier', true, 'Consultation', 8, 'helvetica', 'B', 10, '0', 'L', '0', '243-246-246', '0-0-0', 5, 5, '1', '1', '0|0|0', 8, 'TLB|LTB|LTBR', 'C|C|C', '145-184-189', '0-0-0', 195, '1', 8, '0-0-0', '243-246-246', '255-255-255', '1', 10, '90|70|35', 'LTBR|LTBR|LTBR', 'LTBR|LTBR|LTBR', 'L|L|C', '1', 8, 15, '196-213-215', 'TBL|TBL|TBLR', 'L|L|C', '1', 8, 5, '212-219-220', 'BTL|BTL|BTLR', 'L|L|C', '1', 8, 10, '255-255-255', 'TBL|TBL|TBLR', 'L|L|C', '999|999|999', '0|0|0', '0|0|0', '0|0|0', 'select
service.libelle||'' ''||to_char(date_envoi,''DD/MM/YYYY'')  as envoi,
avis_consultation.libelle||'' du ''||to_char(date_retour,''DD/MM/YYYY'')  as retour,
to_char(date_limite,''DD/MM/YYYY'')  as limite
from &DB_PREFIXEconsultation inner join &DB_PREFIXEservice on service.service = consultation.service
left join &DB_PREFIXEavis_consultation on avis_consultation.avis_consultation=consultation.avis_consultation
where consultation.dossier = ''&idx'' AND consultation.visible IS TRUE');
INSERT INTO om_sousetat (om_sousetat, om_collectivite, id, libelle, actif, titre, titrehauteur, titrefont, titreattribut, titretaille, titrebordure, titrealign, titrefond, titrefondcouleur, titretextecouleur, intervalle_debut, intervalle_fin, entete_flag, entete_fond, entete_orientation, entete_hauteur, entetecolone_bordure, entetecolone_align, entete_fondcouleur, entete_textecouleur, tableau_largeur, tableau_bordure, tableau_fontaille, bordure_couleur, se_fond1, se_fond2, cellule_fond, cellule_hauteur, cellule_largeur, cellule_bordure_un, cellule_bordure, cellule_align, cellule_fond_total, cellule_fontaille_total, cellule_hauteur_total, cellule_fondcouleur_total, cellule_bordure_total, cellule_align_total, cellule_fond_moyenne, cellule_fontaille_moyenne, cellule_hauteur_moyenne, cellule_fondcouleur_moyenne, cellule_bordure_moyenne, cellule_align_moyenne, cellule_fond_nbr, cellule_fontaille_nbr, cellule_hauteur_nbr, cellule_fondcouleur_nbr, cellule_bordure_nbr, cellule_align_nbr, cellule_numerique, cellule_total, cellule_moyenne, cellule_compteur, om_sql) VALUES (24, 1, 'bordereau', 'Dossiers d''un bordereau', true, ' ', 10, 'helvetica', 'B', 12, '0', 'L', '0', '243-246-246', '0-0-0', 10, 15, '1', '1', '0|0|0|0|0', 15, 'TLB|LTB|LTB|LTB|LTBR', 'C|C|C|C|C', '34-112-192', '0-0-0', 195, '1', 13, '0-0-0', '243-243-243', '255-255-255', '1', 13, '65|55|25|25|25', 'TLB|LTB|LTB|LTB|LTBR', 'TLB|LTB|LTB|LTB|LTBR', 'L|C|C|C|C', '1', 10, 15, '196-213-213', 'TLB|LTB|LTB|LTB|LTBR', 'L|C|C|C|C', '1', 10, 15, '196-213-213', 'TLB|LTB|LTB|LTB|LTBR', 'L|C|C|C|C', '1', 10, 15, '196-213-213', 'TLB|LTB|LTB|LTB|LTBR', 'L|C|C|C|C', '999|999|999|999|999', '0|0|0|0|0', '0|0|0|0|0', '0|0|0|0|0', 'SELECT ref as dossier
        , date_depot as "date dépôt"
        , SUM(pa3a4) as "a3/a4"
        , SUM(pa0) as a0
        , SUM(total_pages) as "total pages"
   FROM &DB_PREFIXEnum_dossier 
  WHERE num_bordereau=&idx
  GROUP BY ref, date_depot
  ORDER BY 1,2 ');
INSERT INTO om_sousetat (om_sousetat, om_collectivite, id, libelle, actif, titre, titrehauteur, titrefont, titreattribut, titretaille, titrebordure, titrealign, titrefond, titrefondcouleur, titretextecouleur, intervalle_debut, intervalle_fin, entete_flag, entete_fond, entete_orientation, entete_hauteur, entetecolone_bordure, entetecolone_align, entete_fondcouleur, entete_textecouleur, tableau_largeur, tableau_bordure, tableau_fontaille, bordure_couleur, se_fond1, se_fond2, cellule_fond, cellule_hauteur, cellule_largeur, cellule_bordure_un, cellule_bordure, cellule_align, cellule_fond_total, cellule_fontaille_total, cellule_hauteur_total, cellule_fondcouleur_total, cellule_bordure_total, cellule_align_total, cellule_fond_moyenne, cellule_fontaille_moyenne, cellule_hauteur_moyenne, cellule_fondcouleur_moyenne, cellule_bordure_moyenne, cellule_align_moyenne, cellule_fond_nbr, cellule_fontaille_nbr, cellule_hauteur_nbr, cellule_fondcouleur_nbr, cellule_bordure_nbr, cellule_align_nbr, cellule_numerique, cellule_total, cellule_moyenne, cellule_compteur, om_sql) VALUES (14, 1, 'bordereau_controle_legalite', 'Bordereau d''envoi des contrôles de légalité', true, '
Edition du &aujourdhui

Résultat du &date_bordereau_debut au &date_bordereau_fin


', 8, 'helvetica', '', 9, '0', 'L', '0', '243-246-246', '0-0-0', 5, 0, '1', '1', '0|0|0|0', 20, 'TLB|LTB|TLB|LTBR', 'C|C|C|C', '145-184-189', '0-0-0', 200, '1', 7, '0-0-0', '243-246-246', '255-255-255', '1', 10, '65|65|65|65', 'LTBR|LTBR|LTBR|LTBR', 'TLB|LTB|TLB|LTBR', 'L|L|L|L', '1', 10, 15, '196-213-215', 'TBL|TBL|TBL|LTBR', 'L|L|L|C', '1', 10, 5, '212-219-220', 'TBL|TBL|TBL|LTBR', 'L|L|L|C', '1', 10, 15, '255-255-255', '||||', 'L|R|L|C', '999|999|999|999', '0|0|0|0', '0|0|0|0', '0|0|0|0', '
SELECT
    dossier.dossier_libelle as dossier,
    evenement.libelle as evenement,
    CASE WHEN demandeur.qualite=''particulier'' THEN CONCAT(civilite.code, '' '', demandeur.particulier_nom, '' '', demandeur.particulier_prenom, '' '', &DB_PREFIXEadresse(demandeur.numero::text, demandeur.voie::text, demandeur.complement::text, demandeur.lieu_dit::text, demandeur.bp::text, demandeur.code_postal::text, demandeur.localite::text, demandeur.cedex::text, demandeur.pays::text, ''
''))
         WHEN demandeur.qualite=''personne_morale'' THEN CONCAT(civilite.code, '' '', demandeur.personne_morale_nom, '' '', demandeur.personne_morale_prenom, '' \ '',
                                                              demandeur.personne_morale_denomination, '' '', demandeur.personne_morale_raison_sociale, '' '', demandeur.personne_morale_siret, '' '', &DB_PREFIXEadresse(demandeur.numero::text, demandeur.voie::text, demandeur.complement::text, demandeur.lieu_dit::text, demandeur.bp::text, demandeur.code_postal::text, demandeur.localite::text, demandeur.cedex::text, demandeur.pays::text, ''
''))
    END as coordonnees_demandeur,
    &DB_PREFIXEadresse(dossier.terrain_adresse_voie_numero::text, dossier.terrain_adresse_voie::text, ''''::text, dossier.terrain_adresse_lieu_dit::text, dossier.terrain_adresse_bp::text, dossier.terrain_adresse_code_postal::text, dossier.terrain_adresse_localite::text, dossier.terrain_adresse_cedex::text, ''''::text, ''
'') as coordonnees_terrain
FROM
    &DB_PREFIXEdossier
LEFT JOIN
    &DB_PREFIXEdossier_autorisation
    ON
        dossier.dossier_autorisation = dossier_autorisation.dossier_autorisation
LEFT JOIN
    &DB_PREFIXEdossier_autorisation_type_detaille
    ON
        dossier_autorisation.dossier_autorisation_type_detaille = dossier_autorisation_type_detaille.dossier_autorisation_type_detaille
LEFT JOIN
    &DB_PREFIXEdossier_autorisation_type
    ON
        dossier_autorisation_type_detaille.dossier_autorisation_type = dossier_autorisation_type.dossier_autorisation_type
LEFT JOIN
    &DB_PREFIXEgroupe
    ON
        dossier_autorisation_type.groupe = groupe.groupe
LEFT JOIN
    &DB_PREFIXEinstruction
    ON
        instruction.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEevenement
    ON
        instruction.evenement = evenement.evenement
LEFT JOIN
    &DB_PREFIXElien_dossier_demandeur
    ON
        lien_dossier_demandeur.dossier = dossier.dossier
LEFT JOIn
    &DB_PREFIXEdemandeur
    ON
        demandeur.demandeur = lien_dossier_demandeur.demandeur
LEFT JOIN
    &DB_PREFIXEcivilite
    ON
        civilite.civilite = demandeur.particulier_civilite OR civilite.civilite = demandeur.personne_morale_civilite
LEFT JOIN
    &DB_PREFIXEautorite_competente
    ON
        autorite_competente.autorite_competente = dossier.autorite_competente
WHERE
    evenement.retour IS FALSE
    AND LOWER(autorite_competente.code) = ''com''
    AND instruction.date_envoi_controle_legalite >= ''&date_bordereau_debut''
    AND instruction.date_envoi_controle_legalite <= ''&date_bordereau_fin''
    AND lien_dossier_demandeur.petitionnaire_principal IS TRUE
    AND (LOWER(groupe.code) = ''ads'' OR LOWER(groupe.code) = ''cs'')
    AND dossier.om_collectivite IN (&collectivite)

ORDER BY
    dossier.dossier');
INSERT INTO om_sousetat (om_sousetat, om_collectivite, id, libelle, actif, titre, titrehauteur, titrefont, titreattribut, titretaille, titrebordure, titrealign, titrefond, titrefondcouleur, titretextecouleur, intervalle_debut, intervalle_fin, entete_flag, entete_fond, entete_orientation, entete_hauteur, entetecolone_bordure, entetecolone_align, entete_fondcouleur, entete_textecouleur, tableau_largeur, tableau_bordure, tableau_fontaille, bordure_couleur, se_fond1, se_fond2, cellule_fond, cellule_hauteur, cellule_largeur, cellule_bordure_un, cellule_bordure, cellule_align, cellule_fond_total, cellule_fontaille_total, cellule_hauteur_total, cellule_fondcouleur_total, cellule_bordure_total, cellule_align_total, cellule_fond_moyenne, cellule_fontaille_moyenne, cellule_hauteur_moyenne, cellule_fondcouleur_moyenne, cellule_bordure_moyenne, cellule_align_moyenne, cellule_fond_nbr, cellule_fontaille_nbr, cellule_hauteur_nbr, cellule_fondcouleur_nbr, cellule_bordure_nbr, cellule_align_nbr, cellule_numerique, cellule_total, cellule_moyenne, cellule_compteur, om_sql) VALUES (15, 1, 'bordereau_courriers_signature_maire', 'Bordereau d''envoi de courriers signature Maire', true, '
Edition du &aujourdhui

Résultat du &date_bordereau_debut au &date_bordereau_fin


', 8, 'helvetica', '', 9, '0', 'L', '0', '243-246-246', '0-0-0', 5, 0, '1', '1', '0|0|0|0', 20, 'TLB|LTB|TLB|LTBR', 'C|C|C|C', '145-184-189', '0-0-0', 200, '1', 7, '0-0-0', '243-246-246', '255-255-255', '1', 10, '65|65|65|65', 'LTBR|LTBR|LTBR|LTBR', 'TLB|LTB|TLB|LTBR', 'L|L|L|L', '1', 10, 15, '196-213-215', 'TBL|TBL|TBL|LTBR', 'L|L|L|C', '1', 10, 5, '212-219-220', 'TBL|TBL|TBL|LTBR', 'L|L|L|C', '1', 10, 15, '255-255-255', '|||', 'L|R|L|C', '999|999|999|999', '0|0|0|0', '0|0|0|0', '0|0|0|0', 'SELECT
dossier.dossier_libelle as dossier,
    evenement.libelle as evenement,
    CASE WHEN demandeur.qualite=''particulier'' THEN CONCAT(civilite.code, '' '', demandeur.particulier_nom, '' '', demandeur.particulier_prenom, '' '', &DB_PREFIXEadresse(demandeur.numero::text, demandeur.voie::text, demandeur.complement::text, demandeur.lieu_dit::text, demandeur.bp::text, demandeur.code_postal::text, demandeur.localite::text, demandeur.cedex::text, demandeur.pays::text, ''
''))
         WHEN demandeur.qualite=''personne_morale'' THEN CONCAT(civilite.code, '' '', demandeur.personne_morale_nom, '' '', demandeur.personne_morale_prenom, '' \ '',
                                                              demandeur.personne_morale_denomination, '' '', demandeur.personne_morale_raison_sociale, '' '', demandeur.personne_morale_siret, '' '', &DB_PREFIXEadresse(demandeur.numero::text, demandeur.voie::text, demandeur.complement::text, demandeur.lieu_dit::text, demandeur.bp::text, demandeur.code_postal::text, demandeur.localite::text, demandeur.cedex::text, demandeur.pays::text, ''
''))
    END as coordonnees_demandeur,
    &DB_PREFIXEadresse(dossier.terrain_adresse_voie_numero::text, dossier.terrain_adresse_voie::text, ''''::text, dossier.terrain_adresse_lieu_dit::text, dossier.terrain_adresse_bp::text, dossier.terrain_adresse_code_postal::text, dossier.terrain_adresse_localite::text, dossier.terrain_adresse_cedex::text, ''''::text, ''
'') as coordonnees_terrain
FROM
    &DB_PREFIXEdossier
LEFT JOIN
    &DB_PREFIXEdossier_autorisation
    ON
        dossier.dossier_autorisation = dossier_autorisation.dossier_autorisation
LEFT JOIN
    &DB_PREFIXEdossier_autorisation_type_detaille
    ON
        dossier_autorisation.dossier_autorisation_type_detaille = dossier_autorisation_type_detaille.dossier_autorisation_type_detaille
LEFT JOIN
    &DB_PREFIXEdossier_autorisation_type
    ON
        dossier_autorisation_type_detaille.dossier_autorisation_type = dossier_autorisation_type.dossier_autorisation_type
LEFT JOIN
    &DB_PREFIXEgroupe
    ON
        dossier_autorisation_type.groupe = groupe.groupe
LEFT JOIN
    &DB_PREFIXEinstruction
    ON
        instruction.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEevenement
    ON
        instruction.evenement = evenement.evenement
LEFT JOIN
    &DB_PREFIXElien_dossier_demandeur
    ON
        lien_dossier_demandeur.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEdemandeur
    ON
        demandeur.demandeur = lien_dossier_demandeur.demandeur 
LEFT JOIN
    &DB_PREFIXEcivilite
    ON
        civilite.civilite = demandeur.particulier_civilite OR civilite.civilite = demandeur.personne_morale_civilite
LEFT JOIN
    &DB_PREFIXEautorite_competente
    ON
        autorite_competente.autorite_competente = dossier.autorite_competente
WHERE
    evenement.retour IS FALSE
    AND instruction.date_envoi_signature >= ''&date_bordereau_debut''
    AND instruction.date_envoi_signature <= ''&date_bordereau_fin''
    AND LOWER(groupe.code) = ''ads''
    AND (evenement.type <> ''arrete'' OR evenement.type IS NULL)
    AND lien_dossier_demandeur.petitionnaire_principal IS TRUE
    AND dossier.om_collectivite IN (&collectivite)
ORDER BY
    dossier.dossier');
INSERT INTO om_sousetat (om_sousetat, om_collectivite, id, libelle, actif, titre, titrehauteur, titrefont, titreattribut, titretaille, titrebordure, titrealign, titrefond, titrefondcouleur, titretextecouleur, intervalle_debut, intervalle_fin, entete_flag, entete_fond, entete_orientation, entete_hauteur, entetecolone_bordure, entetecolone_align, entete_fondcouleur, entete_textecouleur, tableau_largeur, tableau_bordure, tableau_fontaille, bordure_couleur, se_fond1, se_fond2, cellule_fond, cellule_hauteur, cellule_largeur, cellule_bordure_un, cellule_bordure, cellule_align, cellule_fond_total, cellule_fontaille_total, cellule_hauteur_total, cellule_fondcouleur_total, cellule_bordure_total, cellule_align_total, cellule_fond_moyenne, cellule_fontaille_moyenne, cellule_hauteur_moyenne, cellule_fondcouleur_moyenne, cellule_bordure_moyenne, cellule_align_moyenne, cellule_fond_nbr, cellule_fontaille_nbr, cellule_hauteur_nbr, cellule_fondcouleur_nbr, cellule_bordure_nbr, cellule_align_nbr, cellule_numerique, cellule_total, cellule_moyenne, cellule_compteur, om_sql) VALUES (13, 1, 'bordereau_avis_maire_prefet', 'Bordereau d''envoi des avis du Maire au Préfet', true, '
Edition du &aujourdhui

Résultat du &date_bordereau_debut au &date_bordereau_fin


', 8, 'helvetica', '', 9, '0', 'L', '0', '243-246-246', '0-0-0', 5, 0, '1', '1', '0|0|0|0', 20, 'TLB|LTB|TLB|LTBR', 'C|C|C|C', '145-184-189', '0-0-0', 200, '1', 7, '0-0-0', '243-246-246', '255-255-255', '1', 10, '65|65|65|65', 'LTBR|LTBR|LTBR|LTBR', 'TLB|LTB|TLB|LTBR', 'L|L|L|L', '1', 10, 15, '196-213-215', 'TBL|TBL|TBL|LTBR', 'L|L|L|C', '1', 10, 5, '212-219-220', 'TBL|TBL|TBL|LTBR', 'L|L|L|C', '1', 10, 15, '255-255-255', '|||', 'L|R|L|C', '999|999|999|999', '0|0|0|0', '0|0|0|0', '0|0|0|0', '
SELECT
    dossier.dossier_libelle as dossier,
    evenement.libelle as evenement,
    CASE WHEN demandeur.qualite=''particulier'' THEN CONCAT(civilite.code, '' '', demandeur.particulier_nom, '' '', demandeur.particulier_prenom, '' '', &DB_PREFIXEadresse(demandeur.numero::text, demandeur.voie::text, demandeur.complement::text, demandeur.lieu_dit::text, demandeur.bp::text, demandeur.code_postal::text, demandeur.localite::text, demandeur.cedex::text, demandeur.pays::text, ''
''))
         WHEN demandeur.qualite=''personne_morale'' THEN CONCAT(civilite.code, '' '', demandeur.personne_morale_nom, '' '', demandeur.personne_morale_prenom, '' \ '',
                                                              demandeur.personne_morale_denomination, '' '', demandeur.personne_morale_raison_sociale, '' '', demandeur.personne_morale_siret, '' '', &DB_PREFIXEadresse(demandeur.numero::text, demandeur.voie::text, demandeur.complement::text, demandeur.lieu_dit::text, demandeur.bp::text, demandeur.code_postal::text, demandeur.localite::text, demandeur.cedex::text, demandeur.pays::text, ''
''))
    END as coordonnees_demandeur,
    &DB_PREFIXEadresse(dossier.terrain_adresse_voie_numero::text, dossier.terrain_adresse_voie::text, ''''::text, dossier.terrain_adresse_lieu_dit::text, dossier.terrain_adresse_bp::text, dossier.terrain_adresse_code_postal::text, dossier.terrain_adresse_localite::text, dossier.terrain_adresse_cedex::text, ''''::text, ''
'') as coordonnees_terrain
FROM
    &DB_PREFIXEdossier
LEFT JOIN
    &DB_PREFIXEdossier_autorisation
    ON
        dossier.dossier_autorisation = dossier_autorisation.dossier_autorisation
LEFT JOIN
    &DB_PREFIXEdossier_autorisation_type_detaille
    ON
        dossier_autorisation.dossier_autorisation_type_detaille = dossier_autorisation_type_detaille.dossier_autorisation_type_detaille
LEFT JOIN
    &DB_PREFIXEdossier_autorisation_type
    ON
        dossier_autorisation_type_detaille.dossier_autorisation_type = dossier_autorisation_type.dossier_autorisation_type
LEFT JOIN
    &DB_PREFIXEgroupe
    ON
        dossier_autorisation_type.groupe = groupe.groupe
LEFT JOIN
    &DB_PREFIXEinstruction
    ON
        instruction.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEevenement
    ON
        instruction.evenement = evenement.evenement
LEFT JOIN
    &DB_PREFIXElien_dossier_demandeur
    ON
        lien_dossier_demandeur.dossier = dossier.dossier
LEFT JOIn
    &DB_PREFIXEdemandeur
    ON
        demandeur.demandeur = lien_dossier_demandeur.demandeur
LEFT JOIN
    &DB_PREFIXEcivilite
    ON
        civilite.civilite = demandeur.particulier_civilite OR civilite.civilite = demandeur.personne_morale_civilite
LEFT JOIN
    &DB_PREFIXEautorite_competente
    ON
        autorite_competente.autorite_competente = dossier.autorite_competente
WHERE
    evenement.retour IS FALSE
    AND (LOWER(autorite_competente.code) = ''etatmaire''
      OR LOWER(autorite_competente.code) = ''etat'')
    AND instruction.date_envoi_rar >= ''&date_bordereau_debut''
    AND instruction.date_envoi_rar <= ''&date_bordereau_fin''
    AND LOWER(groupe.code) = ''ads''
    AND lien_dossier_demandeur.petitionnaire_principal IS TRUE 
    AND instruction.evenement = ''&id_evenement_bordereau_avis_maire_prefet''
    AND dossier.om_collectivite IN (&collectivite)
ORDER BY
    dossier.dossier');
INSERT INTO om_sousetat (om_sousetat, om_collectivite, id, libelle, actif, titre, titrehauteur, titrefont, titreattribut, titretaille, titrebordure, titrealign, titrefond, titrefondcouleur, titretextecouleur, intervalle_debut, intervalle_fin, entete_flag, entete_fond, entete_orientation, entete_hauteur, entetecolone_bordure, entetecolone_align, entete_fondcouleur, entete_textecouleur, tableau_largeur, tableau_bordure, tableau_fontaille, bordure_couleur, se_fond1, se_fond2, cellule_fond, cellule_hauteur, cellule_largeur, cellule_bordure_un, cellule_bordure, cellule_align, cellule_fond_total, cellule_fontaille_total, cellule_hauteur_total, cellule_fondcouleur_total, cellule_bordure_total, cellule_align_total, cellule_fond_moyenne, cellule_fontaille_moyenne, cellule_hauteur_moyenne, cellule_fondcouleur_moyenne, cellule_bordure_moyenne, cellule_align_moyenne, cellule_fond_nbr, cellule_fontaille_nbr, cellule_hauteur_nbr, cellule_fondcouleur_nbr, cellule_bordure_nbr, cellule_align_nbr, cellule_numerique, cellule_total, cellule_moyenne, cellule_compteur, om_sql) VALUES (12, 1, 'bordereau_decisions', 'Bordereau d''envoi des décisions', true, '
Edition du &aujourdhui

Résultat du &date_bordereau_debut au &date_bordereau_fin


', 8, 'helvetica', '', 9, '0', 'L', '0', '243-246-246', '0-0-0', 5, 0, '1', '1', '0|0|0|0', 20, 'TLB|LTB|TLB|LTBR', 'C|C|C|C', '145-184-189', '0-0-0', 200, '1', 7, '0-0-0', '243-246-246', '255-255-255', '1', 10, '65|65|65|65', 'LTBR|LTBR|LTBR|LTBR', 'TLB|LTB|TLB|LTBR', 'L|L|L|L', '1', 10, 15, '196-213-215', 'TBL|TBL|TBL|LTBR', 'L|L|L|C', '1', 10, 5, '212-219-220', 'TBL|TBL|TBL|LTBR', 'L|L|L|C', '1', 10, 15, '255-255-255', '|||', 'L|R|L|C', '999|999|999|999', '0|0|0|0', '0|0|0|0', '0|0|0|0', '
SELECT
    dossier.dossier_libelle as dossier,
    evenement.libelle as evenement,
    CASE WHEN demandeur.qualite=''particulier'' THEN CONCAT(civilite.code, '' '', demandeur.particulier_nom, '' '', demandeur.particulier_prenom, '' '', &DB_PREFIXEadresse(demandeur.numero::text, demandeur.voie::text, demandeur.complement::text, demandeur.lieu_dit::text, demandeur.bp::text, demandeur.code_postal::text, demandeur.localite::text, demandeur.cedex::text, demandeur.pays::text, ''
''))
         WHEN demandeur.qualite=''personne_morale'' THEN CONCAT(civilite.code, '' '', demandeur.personne_morale_nom, '' '', demandeur.personne_morale_prenom, '' \ '',
                                                              demandeur.personne_morale_denomination, '' '', demandeur.personne_morale_raison_sociale, '' '', demandeur.personne_morale_siret, '' '', &DB_PREFIXEadresse(demandeur.numero::text, demandeur.voie::text, demandeur.complement::text, demandeur.lieu_dit::text, demandeur.bp::text, demandeur.code_postal::text, demandeur.localite::text, demandeur.cedex::text, demandeur.pays::text, ''
''))
    END as coordonnees_demandeur,
    &DB_PREFIXEadresse(dossier.terrain_adresse_voie_numero::text, dossier.terrain_adresse_voie::text, ''''::text, dossier.terrain_adresse_lieu_dit::text, dossier.terrain_adresse_bp::text, dossier.terrain_adresse_code_postal::text, dossier.terrain_adresse_localite::text, dossier.terrain_adresse_cedex::text, ''''::text, ''
'') as coordonnees_terrain
FROM
    &DB_PREFIXEdossier
LEFT JOIN
    &DB_PREFIXEdossier_autorisation
    ON
        dossier.dossier_autorisation = dossier_autorisation.dossier_autorisation
LEFT JOIN
    &DB_PREFIXEdossier_autorisation_type_detaille
    ON
        dossier_autorisation.dossier_autorisation_type_detaille = dossier_autorisation_type_detaille.dossier_autorisation_type_detaille
LEFT JOIN
    &DB_PREFIXEdossier_autorisation_type
    ON
        dossier_autorisation_type_detaille.dossier_autorisation_type = dossier_autorisation_type.dossier_autorisation_type
LEFT JOIN
    &DB_PREFIXEgroupe
    ON
        dossier_autorisation_type.groupe = groupe.groupe
LEFT JOIN
    &DB_PREFIXEinstruction
    ON
        instruction.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEevenement
    ON
        instruction.evenement = evenement.evenement
LEFT JOIN
    &DB_PREFIXElien_dossier_demandeur
    ON
        lien_dossier_demandeur.dossier = dossier.dossier
LEFT JOIn
    &DB_PREFIXEdemandeur
    ON
        demandeur.demandeur = lien_dossier_demandeur.demandeur
LEFT JOIN
    &DB_PREFIXEcivilite
    ON
        civilite.civilite = demandeur.particulier_civilite OR civilite.civilite = demandeur.personne_morale_civilite
WHERE
    evenement.retour IS FALSE
    AND LOWER(evenement.type) = ''arrete''
    AND instruction.date_envoi_signature >= ''&date_bordereau_debut''
    AND instruction.date_envoi_signature <= ''&date_bordereau_fin''
    AND LOWER(groupe.code) = ''ads''
    AND lien_dossier_demandeur.petitionnaire_principal IS TRUE
    AND dossier.om_collectivite IN (&collectivite)
ORDER BY
    dossier.dossier');
INSERT INTO om_sousetat (om_sousetat, om_collectivite, id, libelle, actif, titre, titrehauteur, titrefont, titreattribut, titretaille, titrebordure, titrealign, titrefond, titrefondcouleur, titretextecouleur, intervalle_debut, intervalle_fin, entete_flag, entete_fond, entete_orientation, entete_hauteur, entetecolone_bordure, entetecolone_align, entete_fondcouleur, entete_textecouleur, tableau_largeur, tableau_bordure, tableau_fontaille, bordure_couleur, se_fond1, se_fond2, cellule_fond, cellule_hauteur, cellule_largeur, cellule_bordure_un, cellule_bordure, cellule_align, cellule_fond_total, cellule_fontaille_total, cellule_hauteur_total, cellule_fondcouleur_total, cellule_bordure_total, cellule_align_total, cellule_fond_moyenne, cellule_fontaille_moyenne, cellule_hauteur_moyenne, cellule_fondcouleur_moyenne, cellule_bordure_moyenne, cellule_align_moyenne, cellule_fond_nbr, cellule_fontaille_nbr, cellule_hauteur_nbr, cellule_fondcouleur_nbr, cellule_bordure_nbr, cellule_align_nbr, cellule_numerique, cellule_total, cellule_moyenne, cellule_compteur, om_sql) VALUES (17, 1, 'commission_ordre_jour', 'Commission - Ordre du jour', true, 'Ville de &ville', 8, 'helvetica', '', 9, '0', 'L', '0', '243-246-246', '0-0-0', 5, 0, '0', '1', '0|0|0', 20, 'L|L|L', 'C|C|C', '145-184-184', '0-0-0', 297, '1', 11, '0-0-0', '243-246-246', '255-255-255', '1', 11, '5|138|138', 'TLB|TLB|TLBR', 'TLB|LTB|LTR', 'L|L|L', '1', 0, 15, '196-213-213', 'L|L|L', 'L|L|C', '1', 0, 5, '212-219-219', 'L|L|L', 'L|L|C', '1', 0, 15, '255-255-255', 'L|L|L', 'L|R|C', '999|999|999', '0|0|0', '0|0|0', '0|0|0', '
SELECT
    row_number() OVER(ORDER BY division.chef ASC,dossier_commission.dossier) cel1,
    CONCAT(
        ''Dossier :        '', dossier.dossier_libelle, ''      '', ''Rap. '', division.chef, ''
'',
        ''Demandeur : '', CASE WHEN demandeur.qualite=''particulier'' THEN CONCAT(demandeur.particulier_nom, '' '', demandeur.particulier_prenom) WHEN demandeur.qualite=''personne_morale'' THEN CONCAT(demandeur.personne_morale_nom, '' '', demandeur.personne_morale_prenom, '' '', demandeur.personne_morale_denomination, '' '', demandeur.personne_morale_raison_sociale) END,'' 
'', ''                      '',&DB_PREFIXEadresse(demandeur.numero::text, demandeur.voie::text, demandeur.complement::text, demandeur.lieu_dit::text, demandeur.bp::text, demandeur.code_postal::text, demandeur.localite::text, demandeur.cedex::text, demandeur.pays::text, ''
'') , ''
'',

        ''Adresse'',''
'',''Travaux :       '', &DB_PREFIXEadresse(dossier.terrain_adresse_voie_numero::text, dossier.terrain_adresse_voie::text, ''''::text, dossier.terrain_adresse_lieu_dit::text, dossier.terrain_adresse_bp::text, dossier.terrain_adresse_code_postal::text, dossier.terrain_adresse_localite::text, dossier.terrain_adresse_cedex::text, ''''::text, ''
''),''
'',      ''Quartier :       '', quartier.libelle,''
'',
        ''Opération :    '', CONCAT(donnees_techniques.am_projet_desc, donnees_techniques.co_projet_desc, donnees_techniques.dm_projet_desc), ''
'',
        ''Architecte :    '', CONCAT(architecte.nom,'' '',architecte.prenom),''
'',
''
'',
        ''Dépot : '', to_char(dossier.date_depot,''DD/MM/YYYY''), ''        Délai : '', to_char(dossier.date_limite,''DD/MM/YYYY''), ''       Etat : '', etat.libelle, ''
'',
        ''SP : '',donnees_techniques.su_tot_shon_tot,'' m²'',''    Nbr lots :  '',donnees_techniques.am_lot_max_nb,''          Nbr parkings : '', donnees_techniques.co_statio_apr_nb,'' + '',donnees_techniques.co_statio_place_nb, '' hors terrain'',''
'',
        ''Nbr logts : '', donnees_techniques.co_tot_log_nb , '' -->'','' Typologie : '', donnees_techniques.co_log_1p_nb,'' T1,   '', donnees_techniques.co_log_2p_nb, '' T2,   '', donnees_techniques.co_log_3p_nb, '' T3,   '', donnees_techniques.co_log_4p_nb,'' T4,   '', donnees_techniques.co_log_5p_nb, '' T5,   '', donnees_techniques.co_log_6p_nb,''T6 '')as cel2,
       '''' as motivation
FROM
    &DB_PREFIXEcommission
LEFT JOIN
    &DB_PREFIXEdossier_commission
    ON
        commission.commission=dossier_commission.commission
LEFT JOIN
    &DB_PREFIXEdossier
    ON
        dossier_commission.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEarrondissement
    ON
        dossier.terrain_adresse_code_postal = arrondissement.code_postal
LEFT JOIN
    &DB_PREFIXEinstructeur
    ON
        dossier.instructeur = instructeur.instructeur
LEFT JOIN
    &DB_PREFIXElien_dossier_demandeur
    ON
        dossier.dossier = lien_dossier_demandeur.dossier
        AND lien_dossier_demandeur.petitionnaire_principal IS TRUE
LEFT JOIN
    &DB_PREFIXEdemandeur
    ON
        lien_dossier_demandeur.demandeur = demandeur.demandeur
LEFT JOIN
    &DB_PREFIXEcivilite
    ON
        demandeur.particulier_civilite = civilite.civilite OR demandeur.personne_morale_civilite = civilite.civilite
LEFT JOIN
    &DB_PREFIXEdossier_autorisation
    ON
        dossier.dossier_autorisation = dossier_autorisation.dossier_autorisation
LEFT JOIN
    &DB_PREFIXEdossier_autorisation_type_detaille
    ON
        dossier_autorisation.dossier_autorisation_type_detaille = dossier_autorisation_type_detaille.dossier_autorisation_type_detaille
LEFT JOIN
    &DB_PREFIXEdonnees_techniques
    ON
        dossier.dossier = donnees_techniques.dossier_instruction
LEFT JOIN
    &DB_PREFIXEquartier
    ON
        dossier.quartier = quartier.quartier
LEFT JOIN 
    &DB_PREFIXEdivision 
    ON 
    instructeur.division = division.division
LEFT JOIN
    &DB_PREFIXEarchitecte
    ON
    donnees_techniques.architecte = architecte.architecte
LEFT JOIN
    &DB_PREFIXEetat
    ON
    dossier.etat = etat.etat
WHERE
    commission.commission = &idx
');
INSERT INTO om_sousetat (om_sousetat, om_collectivite, id, libelle, actif, titre, titrehauteur, titrefont, titreattribut, titretaille, titrebordure, titrealign, titrefond, titrefondcouleur, titretextecouleur, intervalle_debut, intervalle_fin, entete_flag, entete_fond, entete_orientation, entete_hauteur, entetecolone_bordure, entetecolone_align, entete_fondcouleur, entete_textecouleur, tableau_largeur, tableau_bordure, tableau_fontaille, bordure_couleur, se_fond1, se_fond2, cellule_fond, cellule_hauteur, cellule_largeur, cellule_bordure_un, cellule_bordure, cellule_align, cellule_fond_total, cellule_fontaille_total, cellule_hauteur_total, cellule_fondcouleur_total, cellule_bordure_total, cellule_align_total, cellule_fond_moyenne, cellule_fontaille_moyenne, cellule_hauteur_moyenne, cellule_fondcouleur_moyenne, cellule_bordure_moyenne, cellule_align_moyenne, cellule_fond_nbr, cellule_fontaille_nbr, cellule_hauteur_nbr, cellule_fondcouleur_nbr, cellule_bordure_nbr, cellule_align_nbr, cellule_numerique, cellule_total, cellule_moyenne, cellule_compteur, om_sql) VALUES (18, 1, 'commission_compte_rendu', 'Commission - Compte-rendu', true, 'Ville de &ville', 8, 'helvetica', '', 9, '0', 'L', '0', '243-246-246', '0-0-0', 5, 0, '0', '1', '0|0|0', 20, 'L|L|L', 'C|C|C', '145-184-184', '0-0-0', 297, '1', 11, '0-0-0', '243-246-246', '255-255-255', '1', 11, '5|138|138', 'TLB|TLB|TLBR', 'TLB|LTB|LTR', 'L|L|L', '1', 0, 15, '196-213-213', 'L|L|L', 'L|L|C', '1', 0, 5, '212-219-219', 'L|L|L', 'L|L|C', '1', 0, 15, '255-255-255', 'L|L|L', 'L|R|C', '999|999|999', '0|0|0', '0|0|0', '0|0|0', '
SELECT
    row_number() OVER(ORDER BY division.chef ASC,dossier_commission.dossier) cel1,
    CONCAT(
        ''Dossier :        '', dossier.dossier_libelle, ''      '', ''Rap. '', division.chef, ''
'',
        ''Demandeur : '', CASE WHEN demandeur.qualite=''particulier'' THEN CONCAT(demandeur.particulier_nom, '' '', demandeur.particulier_prenom) WHEN demandeur.qualite=''personne_morale'' THEN CONCAT(demandeur.personne_morale_nom, '' '', demandeur.personne_morale_prenom, '' '', demandeur.personne_morale_denomination, '' '', demandeur.personne_morale_raison_sociale) END,'' 
'', ''                      '',&DB_PREFIXEadresse(demandeur.numero::text, demandeur.voie::text, demandeur.complement::text, demandeur.lieu_dit::text, demandeur.bp::text, demandeur.code_postal::text, demandeur.localite::text, demandeur.cedex::text, demandeur.pays::text, ''
'') , ''
'',

        ''Adresse'',''
'',''Travaux :       '', &DB_PREFIXEadresse(dossier.terrain_adresse_voie_numero::text, dossier.terrain_adresse_voie::text, ''''::text, dossier.terrain_adresse_lieu_dit::text, dossier.terrain_adresse_bp::text, dossier.terrain_adresse_code_postal::text, dossier.terrain_adresse_localite::text, dossier.terrain_adresse_cedex::text, ''''::text, ''
''),''
'',      ''Quartier :       '', quartier.libelle,''
'',
        ''Opération :    '', CONCAT(donnees_techniques.am_projet_desc, donnees_techniques.co_projet_desc, donnees_techniques.dm_projet_desc), ''
'',
        ''Architecte :    '', CONCAT(architecte.nom,'' '',architecte.prenom),''
'',
''
'',
        ''Dépot : '', to_char(dossier.date_depot,''DD/MM/YYYY''), ''        Délai : '', to_char(dossier.date_limite,''DD/MM/YYYY''), ''       Etat : '', etat.libelle, ''
'',
        ''SP : '',donnees_techniques.su_tot_shon_tot,'' m²'',''    Nbr lots :  '',donnees_techniques.am_lot_max_nb,''          Nbr parkings : '', donnees_techniques.co_statio_apr_nb,'' + '',donnees_techniques.co_statio_place_nb, '' hors terrain'',''
'',
        ''Nbr logts : '', donnees_techniques.co_tot_log_nb , '' -->'','' Typologie : '', donnees_techniques.co_log_1p_nb,'' T1,   '', donnees_techniques.co_log_2p_nb, '' T2,   '', donnees_techniques.co_log_3p_nb, '' T3,   '', donnees_techniques.co_log_4p_nb,'' T4,   '', donnees_techniques.co_log_5p_nb, '' T5,   '', donnees_techniques.co_log_6p_nb,''T6 '')as cel2,
    dossier_commission.avis as motivation
FROM
    &DB_PREFIXEcommission
LEFT JOIN
    &DB_PREFIXEdossier_commission
    ON
        commission.commission=dossier_commission.commission
LEFT JOIN
    &DB_PREFIXEdossier
    ON
        dossier_commission.dossier = dossier.dossier
LEFT JOIN
    &DB_PREFIXEarrondissement
    ON
        dossier.terrain_adresse_code_postal = arrondissement.code_postal
LEFT JOIN
    &DB_PREFIXEinstructeur
    ON
        dossier.instructeur = instructeur.instructeur
LEFT JOIN
    &DB_PREFIXElien_dossier_demandeur
    ON
        dossier.dossier = lien_dossier_demandeur.dossier
        AND lien_dossier_demandeur.petitionnaire_principal IS TRUE
LEFT JOIN
    &DB_PREFIXEdemandeur
    ON
        lien_dossier_demandeur.demandeur = demandeur.demandeur
LEFT JOIN
    &DB_PREFIXEcivilite
    ON
        demandeur.particulier_civilite = civilite.civilite OR demandeur.personne_morale_civilite = civilite.civilite
LEFT JOIN
    &DB_PREFIXEdossier_autorisation
    ON
        dossier.dossier_autorisation = dossier_autorisation.dossier_autorisation
LEFT JOIN
    &DB_PREFIXEdossier_autorisation_type_detaille
    ON
        dossier_autorisation.dossier_autorisation_type_detaille = dossier_autorisation_type_detaille.dossier_autorisation_type_detaille
LEFT JOIN
    &DB_PREFIXEdonnees_techniques
    ON
        dossier.dossier = donnees_techniques.dossier_instruction
LEFT JOIN
    &DB_PREFIXEquartier
    ON
        dossier.quartier = quartier.quartier
LEFT JOIN 
    &DB_PREFIXEdivision 
    ON 
    instructeur.division = division.division
LEFT JOIN
    &DB_PREFIXEarchitecte
    ON
    donnees_techniques.architecte = architecte.architecte
LEFT JOIN
    &DB_PREFIXEetat
    ON
    dossier.etat = etat.etat
WHERE
    commission.commission = &idx
');
INSERT INTO om_sousetat (om_sousetat, om_collectivite, id, libelle, actif, titre, titrehauteur, titrefont, titreattribut, titretaille, titrebordure, titrealign, titrefond, titrefondcouleur, titretextecouleur, intervalle_debut, intervalle_fin, entete_flag, entete_fond, entete_orientation, entete_hauteur, entetecolone_bordure, entetecolone_align, entete_fondcouleur, entete_textecouleur, tableau_largeur, tableau_bordure, tableau_fontaille, bordure_couleur, se_fond1, se_fond2, cellule_fond, cellule_hauteur, cellule_largeur, cellule_bordure_un, cellule_bordure, cellule_align, cellule_fond_total, cellule_fontaille_total, cellule_hauteur_total, cellule_fondcouleur_total, cellule_bordure_total, cellule_align_total, cellule_fond_moyenne, cellule_fontaille_moyenne, cellule_hauteur_moyenne, cellule_fondcouleur_moyenne, cellule_bordure_moyenne, cellule_align_moyenne, cellule_fond_nbr, cellule_fontaille_nbr, cellule_hauteur_nbr, cellule_fondcouleur_nbr, cellule_bordure_nbr, cellule_align_nbr, cellule_numerique, cellule_total, cellule_moyenne, cellule_compteur, om_sql) VALUES (19, 1, 'registre_dossiers_affichage_reglementaire', 'Registre des dossiers - Affichage règlementaire', true, 'Édition du &aujourdhui', 8, 'helvetica', '', 10, '0', 'C', '0', '255-255-255', '0-0-0', 0, 0, '1', '1', '0|0|0|0|0|0', 10, 'TLB|LTB|TLB|LTB|LTB|TLBR', 'C|C|C|C|C|C', '230-230-230', '0-0-0', 277, '1', 7, '0-0-0', '255-255-255', '255-255-255', '1', 7, '50|30|60|67|40|30', 'TLB|LTB|TLB|LTB|LTB|TLBR', 'TLB|LTB|TLB|LTB|LTB|TLBR', 'C|C|L|L|L|L', '1', 10, 15, '196-213-213', '|', '|', '1', 10, 5, '212-219-219', '|', '|', '1', 10, 15, '255-255-255', '|', '|', '999|999|999|999|999|999', '0|0|0|0|0|0', '0|0|0|0|0|0', '0|0|0|0|0|0', 'SELECT

    CONCAT(dossier_autorisation_type_detaille.libelle, '' ('',dossier_instruction_type.libelle, '')
     
'', dossier.dossier_libelle) as dossier,

    CONCAT(''Déposé le '', to_char(dossier.date_depot,''DD/MM/YYYY''), 
    CASE WHEN dossier.date_depot <> COALESCE(dossier.date_complet, dossier.date_depot) THEN CONCAT(''
Complété le '', to_char(dossier.date_complet, ''DD/MM/YYYY'')) ELSE '''' END 
    ) as dates,

    CASE
        WHEN petitionnaire_principal.qualite=''particulier''
            THEN CONCAT(
                CASE WHEN COALESCE(civilite.code,'''') != '''' THEN CONCAT(civilite.code, '' '') END,
                CASE WHEN COALESCE(petitionnaire_principal.particulier_nom, '''') != '''' THEN CONCAT(petitionnaire_principal.particulier_nom, '' '') END,
                CASE WHEN COALESCE(petitionnaire_principal.particulier_prenom, '''') != '''' THEN CONCAT(petitionnaire_principal.particulier_prenom, ''
'') END, 
                &DB_PREFIXEadresse(petitionnaire_principal.numero::text, petitionnaire_principal.voie::text, petitionnaire_principal.complement::text, petitionnaire_principal.lieu_dit::text, petitionnaire_principal.bp::text, petitionnaire_principal.code_postal::text, petitionnaire_principal.localite::text, petitionnaire_principal.cedex::text, petitionnaire_principal.pays::text, ''
'')
                        )
            ELSE CONCAT(
                CASE WHEN COALESCE(petitionnaire_principal.personne_morale_raison_sociale,'''') != '''' THEN CONCAT(petitionnaire_principal.personne_morale_raison_sociale, ''
'') END, 
                CASE WHEN COALESCE(petitionnaire_principal.personne_morale_denomination,'''') != '''' THEN CONCAT(petitionnaire_principal.personne_morale_denomination, '' 
'') END, 
                &DB_PREFIXEadresse(petitionnaire_principal.numero::text, petitionnaire_principal.voie::text, petitionnaire_principal.complement::text, petitionnaire_principal.lieu_dit::text, petitionnaire_principal.bp::text, petitionnaire_principal.code_postal::text, petitionnaire_principal.localite::text, petitionnaire_principal.cedex::text, petitionnaire_principal.pays::text, ''
'')
                )
            END
            as demandeur,

        CONCAT(
            &DB_PREFIXEadresse(dossier.terrain_adresse_voie_numero::text, dossier.terrain_adresse_voie::text, ''''::text, dossier.terrain_adresse_lieu_dit::text, dossier.terrain_adresse_bp::text, dossier.terrain_adresse_code_postal::text, dossier.terrain_adresse_localite::text, dossier.terrain_adresse_cedex::text, ''''::text, ''
''),
            CASE WHEN arrondissement.libelle != '''' THEN CONCAT(''
Arrondissement : '', arrondissement.libelle) END
        ) as Terrain,


    CONCAT(
        CASE WHEN COALESCE(dossier.terrain_superficie::text,'''') != '''' THEN CONCAT(''superficie : '', dossier.terrain_superficie::text,'' m²
'') END,
        CASE WHEN COALESCE(donnees_techniques.co_tot_log_nb::text, '''') != '''' THEN CONCAT(''nombre de logements : '', donnees_techniques.co_tot_log_nb::text) END
        ) as Informations,

    CONCAT(''Délai '', delai, '' mois
Date limite le '', COALESCE((CASE WHEN dossier.incomplet_notifie IS TRUE AND dossier.incompletude IS TRUE 
        THEN to_char(dossier.date_limite_incompletude ,''DD/MM/YYYY'') 
        ELSE to_char(dossier.date_limite ,''DD/MM/YYYY'')
    END), ''inconu'')) as limite

FROM
    &DB_PREFIXEdossier
    LEFT JOIN &DB_PREFIXEdossier_autorisation
        ON dossier.dossier_autorisation = dossier_autorisation.dossier_autorisation
    LEFT JOIN &DB_PREFIXEdossier_autorisation_type_detaille
        ON dossier_autorisation.dossier_autorisation_type_detaille=dossier_autorisation_type_detaille.dossier_autorisation_type_detaille
    LEFT JOIN &DB_PREFIXEdossier_autorisation_type
        ON dossier_autorisation_type_detaille.dossier_autorisation_type=dossier_autorisation_type.dossier_autorisation_type
    LEFT JOIN &DB_PREFIXElien_dossier_demandeur
        ON dossier.dossier = lien_dossier_demandeur.dossier AND lien_dossier_demandeur.petitionnaire_principal IS TRUE
    LEFT JOIN &DB_PREFIXEdemandeur as petitionnaire_principal
        ON lien_dossier_demandeur.demandeur = petitionnaire_principal.demandeur
    LEFT JOIN &DB_PREFIXEcivilite
    ON
        civilite.civilite = petitionnaire_principal.particulier_civilite
    LEFT JOIN &DB_PREFIXEavis_decision
        ON dossier.avis_decision=avis_decision.avis_decision
    LEFT JOIN &DB_PREFIXEarrondissement
        ON dossier.terrain_adresse_code_postal = arrondissement.code_postal
    LEFT JOIN &DB_PREFIXEdonnees_techniques
        ON donnees_techniques.dossier_instruction=dossier.dossier
    LEFT JOIN &DB_PREFIXEgroupe
        ON dossier_autorisation_type.groupe = groupe.groupe
    LEFT JOIN &DB_PREFIXEdossier_instruction_type
        ON dossier_instruction_type.dossier_instruction_type = dossier.dossier_instruction_type


WHERE
    (select e.statut from &DB_PREFIXEetat e where e.etat = dossier.etat ) = ''encours''
    AND LOWER(dossier_autorisation_type.code) IN (''pc'',''pa'',''pd'',''dp'')
    AND LOWER(dossier_instruction_type.code) IN (''t'',''m'',''p'')
    AND dossier.om_collectivite = &collectivite
ORDER BY
    dossier.terrain_adresse_code_postal, dossier_autorisation_type.libelle');


--
-- Name: om_etat_seq; Type: SEQUENCE SET; Schema: openads; Owner: postgres
--

SELECT pg_catalog.setval('om_etat_seq', 29, false);


--
-- Name: om_lettretype_seq; Type: SEQUENCE SET; Schema: openads; Owner: postgres
--

SELECT pg_catalog.setval('om_lettretype_seq', 47, false);


--
-- Name: om_logo_seq; Type: SEQUENCE SET; Schema: openads; Owner: postgres
--

SELECT pg_catalog.setval('om_logo_seq', 7, false);


--
-- Name: om_requete_seq; Type: SEQUENCE SET; Schema: openads; Owner: postgres
--

SELECT pg_catalog.setval('om_requete_seq', 32, false);


--
-- Name: om_sousetat_seq; Type: SEQUENCE SET; Schema: openads; Owner: postgres
--

SELECT pg_catalog.setval('om_sousetat_seq', 25, false);


--
-- PostgreSQL database dump complete
--

